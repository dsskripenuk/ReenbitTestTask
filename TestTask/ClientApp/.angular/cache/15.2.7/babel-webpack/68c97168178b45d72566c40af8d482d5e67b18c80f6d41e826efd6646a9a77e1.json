{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nvar emailValue;\nvar emailIsValid = false;\nlet HomeComponent = class HomeComponent {\n  getError(control) {\n    if (control.errors?.required && control.touched) return 'This field is required!';else if (control.errors?.emailError && control.touched) return 'Please enter valid email address!';else return '';\n  }\n  customeEmailValidator(control) {\n    const pattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,20}$/;\n    const value = control.value;\n    if (!pattern.test(value) && control.touched) return {\n      emalError: true\n    };else {\n      emailIsValid = true;\n      emailValue = value;\n      return null;\n    }\n  }\n  constructor(http) {\n    this.http = http;\n    this.form = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, this.customeEmailValidator])\n    });\n  }\n  ngOnInit() {}\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  send() {\n    if (emailIsValid) {\n      this.http.post('https://localhost:44356/api/sendmail', emailValue).subscribe(res => {\n        console.log(res);\n      });\n    }\n  }\n  onUpload() {\n    const filedata = new FormData();\n    filedata.append('image', this.selectedFile, this.selectedFile.name);\n    this.http.post('https://localhost:7000/api/fileupload', filedata).subscribe(res => {\n      console.log(res);\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAA0BC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAEpF,IAAIC,UAAkB;AACtB,IAAIC,YAAY,GAAY,KAAK;AAQ1B,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAS1BC,QAAQ,CAACC,OAAW;IAChB,IAAGA,OAAO,CAACC,MAAM,EAAEC,QAAQ,IAAIF,OAAO,CAACG,OAAO,EAC5C,OAAO,yBAAyB,CAAC,KAC9B,IAAGH,OAAO,CAACC,MAAM,EAAEG,UAAU,IAAIJ,OAAO,CAACG,OAAO,EACnD,OAAO,mCAAmC,CAAC,KACxC,OAAO,EAAE;EAClB;EAEAE,qBAAqB,CAACL,OAAuB;IACzC,MAAMM,OAAO,GAAG,mCAAmC;IACnD,MAAMC,KAAK,GAAGP,OAAO,CAACO,KAAK;IAC3B,IAAG,CAACD,OAAO,CAACE,IAAI,CAACD,KAAK,CAAC,IAAIP,OAAO,CAACG,OAAO,EACxC,OAAO;MACLM,SAAS,EAAC;KACX,MAEH;MACEZ,YAAY,GAAG,IAAI;MACnBD,UAAU,GAAWW,KAAK;MAC1B,OAAO,IAAI;;EAEjB;EAGAG,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IA5BxB,SAAI,GAAY,IAAIjB,SAAS,CAAC;MAC5BkB,KAAK,EAAC,IAAInB,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,EAAC,IAAI,CAACG,qBAAqB,CAAC;KAC1E,CAAC;EA0BoC;EAEtCQ,QAAQ,IAER;EAEAC,cAAc,CAACC,KAAU;IACvB,IAAI,CAACC,YAAY,GAASD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACjD;EAEAC,IAAI;IACF,IAAGtB,YAAY,EAAC;MACd,IAAI,CAACc,IAAI,CAACS,IAAI,CAAmB,sCAAsC,EAAExB,UAAU,CAAC,CAACyB,SAAS,CAACC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAA,CAAC,CAAC;;EAE5H;EAEAG,QAAQ;IAEN,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACZ,YAAY,EAAE,IAAI,CAACA,YAAY,CAACa,IAAI,CAAC;IACnE,IAAI,CAAClB,IAAI,CAACS,IAAI,CAAmB,uCAAuC,EAAEM,QAAQ,CAAC,CAClFL,SAAS,CAACC,GAAG,IAAE;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAElB,CAAC,CAAC;EAGJ;CAEC;AA9DYxB,aAAa,eALzBN,SAAS,CAAC;EACTsC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CACd,CAAC,GAEWjC,aAAa,CA8DzB;SA9DYA,aAAa","names":["Component","FormControl","FormGroup","Validators","emailValue","emailIsValid","HomeComponent","getError","control","errors","required","touched","emailError","customeEmailValidator","pattern","value","test","emalError","constructor","http","email","ngOnInit","onFileSelected","event","selectedFile","target","files","send","post","subscribe","res","console","log","onUpload","filedata","FormData","append","name","selector","templateUrl"],"sourceRoot":"","sources":["D:\\Work\\TestTask\\TestTask\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nvar emailValue: string;\r\nvar emailIsValid: boolean = false;\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\n\r\nexport class HomeComponent implements OnInit{\r\n  \r\nselectedFile!: File;\r\n\r\n\r\nform:FormGroup =new FormGroup({\r\n  email:new FormControl(\"\",[Validators.required,this.customeEmailValidator])\r\n})\r\n\r\ngetError(control:any) : string {\r\n    if(control.errors?.required && control.touched)\r\n      return 'This field is required!';\r\n    else if(control.errors?.emailError && control.touched)\r\n      return 'Please enter valid email address!';\r\n    else return '';\r\n}\r\n\r\ncustomeEmailValidator(control:AbstractControl) {\r\n    const pattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,20}$/;\r\n    const value = control.value;\r\n    if(!pattern.test(value) && control.touched) \r\n      return {\r\n        emalError:true\r\n      }\r\n    else\r\n    {\r\n      emailIsValid = true;\r\n      emailValue = <string>value\r\n      return null;\r\n    } \r\n}\r\n\r\n\r\nconstructor(private http: HttpClient){}\r\n\r\nngOnInit(): void {\r\n\r\n}\r\n\r\nonFileSelected(event: any){\r\n  this.selectedFile = <File>event.target.files[0];\r\n}\r\n\r\nsend(){\r\n  if(emailIsValid){\r\n    this.http.post<{ path: string }>('https://localhost:44356/api/sendmail', emailValue).subscribe(res =>{console.log(res)})\r\n  }\r\n}\r\n\r\nonUpload(){\r\n\r\n  const filedata = new FormData();\r\n  filedata.append('image', this.selectedFile, this.selectedFile.name);\r\n  this.http.post<{ path: string }>('https://localhost:7000/api/fileupload', filedata)\r\n  .subscribe(res=>{\r\n    console.log(res);\r\n   \r\n  })\r\n\r\n \r\n}\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}