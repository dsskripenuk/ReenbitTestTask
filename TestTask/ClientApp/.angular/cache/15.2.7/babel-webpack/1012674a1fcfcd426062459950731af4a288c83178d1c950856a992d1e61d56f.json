{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2023 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, isDevMode, Component, Optional, Input, Output, HostBinding, HostListener, ContentChildren, NgModule, Directive, InjectionToken, Inject, forwardRef, ElementRef, ViewContainerRef, ContentChild, ViewChild } from '@angular/core';\nimport { Subject, Subscription, fromEvent, merge } from 'rxjs';\nimport * as i9 from '@progress/kendo-angular-common';\nimport { isDocumentAvailable, isFirefox, Keys, isSafari, isChanged, hasObservers, guid, anyChanged, EventsModule } from '@progress/kendo-angular-common';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { LocalizationService, L10N_PREFIX, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i2 from '@progress/kendo-angular-icons';\nimport { IconsModule } from '@progress/kendo-angular-icons';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { filter, tap, take } from 'rxjs/operators';\nimport * as i3$1 from '@progress/kendo-angular-popup';\nimport { PopupModule } from '@progress/kendo-angular-popup';\nimport { caretAltDownIcon, xCircleIcon } from '@progress/kendo-svg-icons';\nimport * as i4 from '@angular/animations';\nimport { sequence, query, style, stagger, animate } from '@angular/animations';\n\n/**\n * @hidden\n */\nconst _c0 = [\"kendoButton\", \"\"];\nfunction ButtonComponent_kendo_icon_wrapper_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon-wrapper\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"name\", ctx_r0.icon)(\"svgIcon\", ctx_r0.svgIcon);\n  }\n}\nfunction ButtonComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵelement(1, \"img\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r1.imageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ButtonComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.iconClass);\n  }\n}\nconst _c1 = [\"*\"];\nconst _c2 = [[[\"\", \"kendoButton\", \"\"], [\"kendo-button\"]]];\nconst _c3 = [\"[kendoButton], kendo-button\"];\nfunction ListComponent_li_1_ng_template_1_ng_template_1_Template(rf, ctx) {}\nconst _c4 = function (a0, a1) {\n  return {\n    templateRef: a0,\n    $implicit: a1\n  };\n};\nfunction ListComponent_li_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, ListComponent_li_1_ng_template_1_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dataItem_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-disabled\", dataItem_r1.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(3, _c4, ctx_r3.itemTemplate == null ? null : ctx_r3.itemTemplate.templateRef, dataItem_r1));\n  }\n}\nfunction ListComponent_li_1_ng_template_2_kendo_icon_wrapper_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon-wrapper\", 9);\n  }\n  if (rf & 2) {\n    const dataItem_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"name\", dataItem_r1.icon)(\"svgIcon\", dataItem_r1.svgIcon)(\"customFontClass\", dataItem_r1.iconClass);\n  }\n}\nfunction ListComponent_li_1_ng_template_2_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 10);\n  }\n  if (rf & 2) {\n    const dataItem_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"src\", dataItem_r1.imageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ListComponent_li_1_ng_template_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dataItem_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.getText(dataItem_r1), \" \");\n  }\n}\nfunction ListComponent_li_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, ListComponent_li_1_ng_template_2_kendo_icon_wrapper_1_Template, 1, 3, \"kendo-icon-wrapper\", 6);\n    i0.ɵɵtemplate(2, ListComponent_li_1_ng_template_2_img_2_Template, 1, 1, \"img\", 7);\n    i0.ɵɵtemplate(3, ListComponent_li_1_ng_template_2_span_3_Template, 2, 1, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dataItem_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-disabled\", dataItem_r1.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", dataItem_r1.icon || dataItem_r1.iconClass || dataItem_r1.svgIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", dataItem_r1.imageUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.getText(dataItem_r1));\n  }\n}\nfunction ListComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 2);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_1_Template_li_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const index_r2 = restoredCtx.index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      $event.stopImmediatePropagation();\n      return i0.ɵɵresetView(ctx_r14.onClick(index_r2));\n    })(\"blur\", function ListComponent_li_1_Template_li_blur_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onBlur());\n    });\n    i0.ɵɵtemplate(1, ListComponent_li_1_ng_template_1_Template, 2, 6, \"ng-template\", 3);\n    i0.ɵɵtemplate(2, ListComponent_li_1_ng_template_2_Template, 4, 5, \"ng-template\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dataItem_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"index\", index_r2);\n    i0.ɵɵattribute(\"aria-disabled\", dataItem_r1.disabled ? true : false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.itemTemplate == null ? null : ctx_r0.itemTemplate.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r0.itemTemplate == null ? null : ctx_r0.itemTemplate.templateRef));\n  }\n}\nconst _c5 = [\"button\"];\nconst _c6 = [\"arrowButton\"];\nconst _c7 = [\"popupTemplate\"];\nconst _c8 = [\"container\"];\nfunction SplitButtonComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.text, \" \");\n  }\n}\nfunction SplitButtonComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-button-list\", 10);\n    i0.ɵɵlistener(\"onItemClick\", function SplitButtonComponent_ng_template_8_Template_kendo_button_list_onItemClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onItemClick($event));\n    })(\"keydown\", function SplitButtonComponent_ng_template_8_Template_kendo_button_list_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.keyDownHandler($event));\n    })(\"keyup\", function SplitButtonComponent_ng_template_8_Template_kendo_button_list_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.keyUpHandler($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r4.listId)(\"data\", ctx_r4.data)(\"textField\", ctx_r4.textField)(\"itemTemplate\", ctx_r4.itemTemplate)(\"size\", ctx_r4.size);\n    i0.ɵɵattribute(\"dir\", ctx_r4.dir);\n  }\n}\nconst _c11 = [\"buttonList\"];\nfunction DropDownButtonComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-button-list\", 4, 5);\n    i0.ɵɵlistener(\"onItemClick\", function DropDownButtonComponent_ng_template_3_Template_kendo_button_list_onItemClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onItemClick($event));\n    })(\"keydown\", function DropDownButtonComponent_ng_template_3_Template_kendo_button_list_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.keyDownHandler($event));\n    })(\"keyup\", function DropDownButtonComponent_ng_template_3_Template_kendo_button_list_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.keyUpHandler($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r2.listId)(\"data\", ctx_r2.data)(\"textField\", ctx_r2.textField)(\"itemTemplate\", ctx_r2.itemTemplate)(\"size\", ctx_r2.size);\n    i0.ɵɵattribute(\"dir\", ctx_r2.dir)(\"aria-labelledby\", ctx_r2.buttonId);\n  }\n}\nfunction ChipComponent_kendo_icon_wrapper_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon-wrapper\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"name\", ctx_r0.icon)(\"svgIcon\", ctx_r0.svgIcon);\n  }\n}\nfunction ChipComponent_kendo_icon_wrapper_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon-wrapper\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"customFontClass\", ctx_r1.customIconClass);\n  }\n}\nfunction ChipComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.chipAvatarClass);\n  }\n}\nfunction ChipComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.label, \" \");\n  }\n}\nfunction ChipComponent_ng_content_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!label\"]);\n  }\n}\nfunction ChipComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function ChipComponent_span_7_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onRemoveClick($event));\n    });\n    i0.ɵɵelement(1, \"kendo-icon-wrapper\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r5.defaultRemoveIcon || ctx_r5.removeSvgIcon)(\"customFontClass\", ctx_r5.removeIcon);\n  }\n}\nconst _c12 = [\"kendoDialItem\", \"\"];\nfunction DialItemComponent_0_ng_template_0_Template(rf, ctx) {}\nconst _c13 = function (a0, a1, a2) {\n  return {\n    $implicit: a0,\n    index: a1,\n    isFocused: a2\n  };\n};\nfunction DialItemComponent_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DialItemComponent_0_ng_template_0_Template, 0, 0, \"ng-template\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.dialItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c13, ctx_r0.item, ctx_r0.index, ctx_r0.isFocused));\n  }\n}\nfunction DialItemComponent_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.item.label);\n  }\n}\nfunction DialItemComponent_ng_container_1_kendo_icon_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon-wrapper\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"name\", ctx_r4.item.icon)(\"customFontClass\", ctx_r4.item.iconClass)(\"svgIcon\", ctx_r4.item.svgIcon);\n  }\n}\nfunction DialItemComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DialItemComponent_ng_container_1_span_1_Template, 2, 1, \"span\", 2);\n    i0.ɵɵtemplate(2, DialItemComponent_ng_container_1_kendo_icon_wrapper_2_Template, 1, 3, \"kendo-icon-wrapper\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.item.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.item.icon || ctx_r1.item.iconClass || ctx_r1.item.svgIcon);\n  }\n}\nconst _c14 = [\"kendoDialList\", \"\"];\nfunction DialListComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"li\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const idx_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", ctx_r0.dialItems[idx_r2])(\"index\", idx_r2)(\"dialItemTemplate\", ctx_r0.dialItemTemplate)(\"isFocused\", ctx_r0.isFocused(idx_r2))(\"ngClass\", item_r1.cssClass)(\"ngStyle\", item_r1.cssStyle)(\"align\", ctx_r0.align);\n  }\n}\nfunction FloatingActionButtonComponent_2_ng_template_0_Template(rf, ctx) {}\nfunction FloatingActionButtonComponent_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FloatingActionButtonComponent_2_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.fabTemplate == null ? null : ctx_r1.fabTemplate.templateRef);\n  }\n}\nfunction FloatingActionButtonComponent_ng_container_3_kendo_icon_wrapper_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon-wrapper\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"name\", ctx_r6.icon)(\"customFontClass\", ctx_r6.iconClass)(\"svgIcon\", ctx_r6.svgIcon);\n  }\n}\nfunction FloatingActionButtonComponent_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.text);\n  }\n}\nfunction FloatingActionButtonComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FloatingActionButtonComponent_ng_container_3_kendo_icon_wrapper_1_Template, 1, 3, \"kendo-icon-wrapper\", 5);\n    i0.ɵɵtemplate(2, FloatingActionButtonComponent_ng_container_3_span_2_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.icon || ctx_r2.iconClass || ctx_r2.svgIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.text);\n  }\n}\nfunction FloatingActionButtonComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 9);\n    i0.ɵɵlistener(\"click\", function FloatingActionButtonComponent_ng_template_4_Template_ul_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onItemClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r4.dialListId)(\"ngClass\", ctx_r4.dialClass)(\"dialItems\", ctx_r4.dialItems)(\"dialItemTemplate\", ctx_r4.dialItemTemplate == null ? null : ctx_r4.dialItemTemplate.templateRef)(\"align\", ctx_r4.align);\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r4.id);\n  }\n}\nconst _c15 = function (a0, a1) {\n  return {\n    keydown: a0,\n    click: a1\n  };\n};\nclass KendoButtonService {\n  constructor() {\n    this.buttonClicked = new Subject();\n    this.buttonClicked$ = this.buttonClicked.asObservable();\n  }\n  click(button) {\n    this.buttonClicked.next(button);\n  }\n}\nKendoButtonService.ɵfac = function KendoButtonService_Factory(t) {\n  return new (t || KendoButtonService)();\n};\nKendoButtonService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: KendoButtonService,\n  factory: KendoButtonService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KendoButtonService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n  name: '@progress/kendo-angular-buttons',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1694532892,\n  version: '13.5.0',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n/**\n * @hidden\n */\nconst resolvedPromise = Promise.resolve(null);\n/**\n * @hidden\n */\nconst isPresent = value => value !== null && value !== undefined;\n/**\n * @hidden\n */\nconst tick = f => resolvedPromise.then(f);\n/**\n * @hidden\n */\nfunction isDocumentNode(container) {\n  return container.nodeType === 9;\n}\n/**\n * @hidden\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n  const matches = Element.prototype.matches ? (el, sel) => el.matches(sel) : (el, sel) => el.msMatchesSelector(sel);\n  let node = element;\n  while (node && !isDocumentNode(node)) {\n    if (matches(node, selector)) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n}\n/**\n * @hidden\n */\nconst replaceMessagePlaceholder = (message, name, value) => message.replace(new RegExp(`\\{\\\\s*${name}\\\\s*\\}`, 'g'), value);\n/**\n * @hidden\n */\nconst SIZES = {\n  small: 'sm',\n  medium: 'md',\n  large: 'lg'\n};\nconst ROUNDNESS = {\n  small: 'sm',\n  medium: 'md',\n  large: 'lg',\n  full: 'full'\n};\n/**\n * @hidden\n *\n * Returns the styling classes to be added and removed\n */\nconst getStylingClasses = (componentType, stylingOption, previousValue, newValue) => {\n  switch (stylingOption) {\n    case 'size':\n      return {\n        toRemove: `k-${componentType}-${SIZES[previousValue]}`,\n        toAdd: newValue !== 'none' ? `k-${componentType}-${SIZES[newValue]}` : ''\n      };\n    case 'rounded':\n      return {\n        toRemove: `k-rounded-${ROUNDNESS[previousValue]}`,\n        toAdd: newValue !== 'none' ? `k-rounded-${ROUNDNESS[newValue]}` : ''\n      };\n    case 'fillMode':\n      return {\n        toRemove: `k-${componentType}-${previousValue}`,\n        toAdd: newValue !== 'none' ? `k-${componentType}-${newValue}` : ''\n      };\n    default:\n      break;\n  }\n};\n/**\n * @hidden\n *\n * Returns the themeColor classes to be added and removed\n */\nconst getThemeColorClasses = (componentType, prevFillMode, fillMode, previousValue, newValue) => {\n  return {\n    toRemove: `k-${componentType}-${prevFillMode}-${previousValue}`,\n    toAdd: newValue !== 'none' ? `k-${componentType}-${fillMode}-${newValue}` : ''\n  };\n};\nconst SPAN_TAG_NAME = 'SPAN';\nconst BUTTON_TAG_NAME = 'BUTTON';\nconst KENDO_BUTTON_TAG_NAME = 'KENDO-BUTTON';\nconst DEFAULT_ROUNDED$3 = 'medium';\nconst DEFAULT_SIZE$2 = 'medium';\nconst DEFAULT_THEME_COLOR$2 = 'base';\nconst DEFAULT_FILL_MODE$3 = 'solid';\n/**\n * Represents the Kendo UI Button component for Angular.\n */\nclass ButtonComponent {\n  constructor(element, renderer, service, localization, ngZone) {\n    this.renderer = renderer;\n    this.service = service;\n    this.ngZone = ngZone;\n    /**\n     * Provides visual styling that indicates if the Button is active.\n     *\n     * @default false\n     */\n    this.toggleable = false;\n    /**\n     * @hidden\n     */\n    this.role = 'button';\n    /**\n     * Fires each time the selected state of a toggleable button is changed.\n     *\n     * The event argument is the new selected state (boolean).\n     */\n    this.selectedChange = new EventEmitter();\n    /**\n     * Fires each time the user clicks the button.\n     */\n    this.click = new EventEmitter();\n    this.isDisabled = false;\n    this._size = DEFAULT_SIZE$2;\n    this._rounded = DEFAULT_ROUNDED$3;\n    this._fillMode = DEFAULT_FILL_MODE$3;\n    this._themeColor = DEFAULT_THEME_COLOR$2;\n    this._focused = false;\n    this.subs = new Subscription();\n    validatePackage(packageMetadata);\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.subs.add(localization.changes.subscribe(({\n      rtl\n    }) => this.direction = rtl ? 'rtl' : 'ltr'));\n    this.element = element.nativeElement;\n  }\n  /**\n   * Backwards-compatible alias\n   *\n   * @hidden\n   */\n  get togglable() {\n    return this.toggleable;\n  }\n  /**\n   * @hidden\n   */\n  set togglable(value) {\n    this.toggleable = value;\n  }\n  /**\n   * Sets the selected state of the Button.\n   *\n   * @default false\n   */\n  get selected() {\n    return this._selected || false;\n  }\n  set selected(value) {\n    this._selected = value;\n  }\n  /**\n   * @hidden\n   */\n  set tabIndex(index) {\n    this.element.tabIndex = index;\n  }\n  get tabIndex() {\n    return this.element.tabIndex;\n  }\n  /**\n   * Defines a CSS class&mdash;or multiple classes separated by spaces&mdash;\n   * which are applied to a `span` element inside the Button. Allows the usage of custom icons.\n   */\n  set iconClass(value) {\n    if (isDevMode() && value && (this.icon || this.svgIcon)) {\n      throw new Error('Setting both icon/svgIcon and iconClass options at the same time is not supported.');\n    }\n    this._iconClass = value;\n  }\n  get iconClass() {\n    return this._iconClass;\n  }\n  /**\n   * Defines the name for an existing font icon in the Kendo UI theme.\n   */\n  set icon(name) {\n    if (isDevMode() && name && this.iconClass) {\n      throw new Error('Setting both icon/svgIcon and iconClass options at the same time is not supported.');\n    }\n    this._icon = name;\n  }\n  get icon() {\n    return this._icon;\n  }\n  /**\n   * If set to `true`, it disables the Button.\n   *\n   * @default false\n   */\n  set disabled(disabled) {\n    //Required, because in FF focused buttons are not blurred on disabled\n    if (disabled && isDocumentAvailable() && isFirefox(navigator.userAgent)) {\n      this.blur();\n    }\n    this.isDisabled = disabled;\n    this.renderer.setProperty(this.element, 'disabled', disabled);\n  }\n  get disabled() {\n    return this.isDisabled;\n  }\n  /**\n   * The size property specifies the padding of the Button\n   * ([see example]({% slug appearance_button %}#toc-size)).\n   *\n   * @default 'medium'\n   */\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$2;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the Button\n   * ([see example]({% slug appearance_button %}#toc-rounded)).\n   *\n   * @default 'medium'\n   */\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$3;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the Button\n   * ([see example]({% slug appearance_button %}#toc-fillMode)).\n   *\n   * @default 'solid'\n   */\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$3;\n    this.handleClasses(newFillMode, 'fillMode');\n    this._fillMode = newFillMode;\n  }\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * The Button allows you to specify predefined theme colors.\n   * The theme color will be applied as a background and border color while also amending the text color accordingly\n   * ([see example]({% slug appearance_button %}#toc-themeColor)).\n   *\n   * @default 'base'\n   */\n  set themeColor(themeColor) {\n    const newThemeColor = themeColor ? themeColor : DEFAULT_THEME_COLOR$2;\n    this.handleThemeColor(newThemeColor);\n    this._themeColor = newThemeColor;\n  }\n  get themeColor() {\n    return this._themeColor;\n  }\n  /**\n   * Defines an SVGIcon to be rendered within the button.\n   */\n  set svgIcon(icon) {\n    if (isDevMode() && icon && this.iconClass) {\n      throw new Error('Setting both icon/svgIcon and iconClass options at the same time is not supported.');\n    }\n    this._svgIcon = icon;\n  }\n  get svgIcon() {\n    return this._svgIcon;\n  }\n  set isFocused(isFocused) {\n    this.toggleClass('k-focus', isFocused);\n    this._focused = isFocused;\n  }\n  get isFocused() {\n    return this._focused;\n  }\n  get classButton() {\n    return true;\n  }\n  get isToggleable() {\n    return this.toggleable;\n  }\n  get iconButtonClass() {\n    const hasIcon = this.icon || this.iconClass || this.imageUrl || this.svgIcon;\n    return hasIcon && !this.hasText;\n  }\n  get roleSetter() {\n    return this.role;\n  }\n  get classDisabled() {\n    return this.isDisabled;\n  }\n  get classActive() {\n    return this.selected;\n  }\n  get getDirection() {\n    return this.direction;\n  }\n  /**\n   * @hidden\n   */\n  onFocus() {\n    this.isFocused = true;\n  }\n  /**\n   * @hidden\n   */\n  onBlur() {\n    this.isFocused = false;\n  }\n  /**\n   * @hidden\n   */\n  set primary(value) {\n    this.themeColor = value ? 'primary' : 'base';\n  }\n  /**\n   * @hidden\n   */\n  set look(value) {\n    switch (value) {\n      case 'default':\n        this.fillMode = 'solid';\n        break;\n      default:\n        this.fillMode = value;\n        break;\n    }\n  }\n  /**\n   * Alias for ElementRef.nativeElement to workaround\n   * ViewChild() selectors that used to return the host element before v11.\n   *\n   * @hidden\n   */\n  get nativeElement() {\n    return this.element;\n  }\n  ngOnInit() {\n    const elementTagName = this.element.tagName;\n    const isSpanOrKendoButton = elementTagName === SPAN_TAG_NAME || elementTagName === KENDO_BUTTON_TAG_NAME;\n    if (!this.element.hasAttribute('role') && this.togglable) {\n      this.toggleAriaPressed(this.toggleable);\n    }\n    if (this.role) {\n      this.setAttribute('role', this.role);\n    }\n    if (isSpanOrKendoButton && !this.isDisabled) {\n      this.tabIndex = 0;\n    }\n    this.ngZone.runOutsideAngular(() => {\n      this.subs.add(this.renderer.listen(this.element, 'click', this._onButtonClick.bind(this)));\n      this.subs.add(this.renderer.listen(this.element, 'keydown', event => {\n        const isSpaceOrEnter = event.keyCode === Keys.Space || event.keyCode === Keys.Enter;\n        if (isSpanOrKendoButton && isSpaceOrEnter) {\n          this.ngZone.run(() => {\n            this.click.emit(event);\n          });\n          this._onButtonClick();\n        }\n      }));\n      this.subs.add(this.renderer.listen(this.element, 'mousedown', event => {\n        const elementTagName = this.element.tagName;\n        const isButton = elementTagName === BUTTON_TAG_NAME;\n        const isBrowserSafari = isDocumentAvailable() && isSafari(navigator.userAgent);\n        if (!this.isDisabled && isButton && isBrowserSafari) {\n          event.preventDefault();\n          this.element.focus();\n        }\n      }));\n    });\n  }\n  ngOnChanges(change) {\n    if (isChanged('togglable', change) || isChanged('toggleable', change)) {\n      this.toggleAriaPressed(this.toggleable);\n    }\n  }\n  ngAfterViewInit() {\n    const stylingOptions = ['size', 'rounded', 'fillMode'];\n    stylingOptions.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n  }\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n  /**\n   * @hidden\n   */\n  get hasText() {\n    return isDocumentAvailable() && this.element.textContent.trim().length > 0;\n  }\n  /**\n   * Focuses the Button component.\n   */\n  focus() {\n    if (isDocumentAvailable()) {\n      this.element.focus();\n      this.isFocused = true;\n    }\n  }\n  /**\n   * Blurs the Button component.\n   */\n  blur() {\n    if (isDocumentAvailable()) {\n      this.element.blur();\n      this.isFocused = false;\n    }\n  }\n  /**\n   * @hidden\n   */\n  setAttribute(attribute, value) {\n    this.renderer.setAttribute(this.element, attribute, value);\n  }\n  /**\n   * @hidden\n   */\n  removeAttribute(attribute) {\n    this.renderer.removeAttribute(this.element, attribute);\n  }\n  /**\n   * @hidden\n   *\n   * Internal setter that triggers selectedChange\n   */\n  setSelected(value) {\n    const changed = this.selected !== value;\n    this.selected = value;\n    this.setAttribute('aria-pressed', this.selected.toString());\n    this.toggleClass('k-selected', this.selected);\n    if (changed && hasObservers(this.selectedChange)) {\n      this.ngZone.run(() => {\n        this.selectedChange.emit(value);\n      });\n    }\n  }\n  toggleAriaPressed(shouldSet) {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n    if (shouldSet) {\n      this.setAttribute('aria-pressed', this.selected.toString());\n    } else {\n      this.removeAttribute('aria-pressed');\n    }\n  }\n  toggleClass(className, add) {\n    if (add) {\n      this.renderer.addClass(this.element, className);\n    } else {\n      this.renderer.removeClass(this.element, className);\n    }\n  }\n  _onButtonClick() {\n    if (!this.disabled && this.service) {\n      this.ngZone.run(() => {\n        this.service.click(this);\n      });\n    }\n    if (this.togglable && !this.service) {\n      this.setSelected(!this.selected);\n    }\n  }\n  handleClasses(value, input) {\n    const elem = this.element;\n    const classes = getStylingClasses('button', input, this[input], value);\n    if (input === 'fillMode') {\n      this.handleThemeColor(this.themeColor, this[input], value);\n    }\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n  handleThemeColor(value, prevFillMode, fillMode) {\n    const elem = this.element;\n    const removeFillMode = prevFillMode ? prevFillMode : this.fillMode;\n    const addFillMode = fillMode ? fillMode : this.fillMode;\n    const themeColorClass = getThemeColorClasses('button', removeFillMode, addFillMode, this.themeColor, value);\n    this.renderer.removeClass(elem, themeColorClass.toRemove);\n    if (addFillMode !== 'none' && fillMode !== 'none') {\n      if (themeColorClass.toAdd) {\n        this.renderer.addClass(elem, themeColorClass.toAdd);\n      }\n    }\n  }\n}\nButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n  return new (t || ButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(KendoButtonService, 8), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ButtonComponent,\n  selectors: [[\"button\", \"kendoButton\", \"\"], [\"span\", \"kendoButton\", \"\"], [\"kendo-button\"]],\n  hostVars: 13,\n  hostBindings: function ButtonComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function ButtonComponent_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function ButtonComponent_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.roleSetter)(\"aria-disabled\", ctx.classDisabled)(\"dir\", ctx.getDirection);\n      i0.ɵɵclassProp(\"k-button\", ctx.classButton)(\"k-toggle-button\", ctx.isToggleable)(\"k-icon-button\", ctx.iconButtonClass)(\"k-disabled\", ctx.classDisabled)(\"k-selected\", ctx.classActive);\n    }\n  },\n  inputs: {\n    toggleable: \"toggleable\",\n    togglable: \"togglable\",\n    selected: \"selected\",\n    tabIndex: \"tabIndex\",\n    imageUrl: \"imageUrl\",\n    iconClass: \"iconClass\",\n    icon: \"icon\",\n    disabled: \"disabled\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    themeColor: \"themeColor\",\n    svgIcon: \"svgIcon\",\n    role: \"role\",\n    primary: \"primary\",\n    look: \"look\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    click: \"click\"\n  },\n  exportAs: [\"kendoButton\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.button'\n  }]), i0.ɵɵNgOnChangesFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 5,\n  vars: 3,\n  consts: [[\"innerCssClass\", \"k-button-icon\", 3, \"name\", \"svgIcon\", 4, \"ngIf\"], [\"class\", \"k-button-icon k-icon\", 4, \"ngIf\"], [\"class\", \"k-button-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"k-button-text\"], [\"innerCssClass\", \"k-button-icon\", 3, \"name\", \"svgIcon\"], [1, \"k-button-icon\", \"k-icon\"], [\"role\", \"presentation\", 1, \"k-image\", 3, \"src\"], [1, \"k-button-icon\", 3, \"ngClass\"]],\n  template: function ButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, ButtonComponent_kendo_icon_wrapper_0_Template, 1, 2, \"kendo-icon-wrapper\", 0);\n      i0.ɵɵtemplate(1, ButtonComponent_span_1_Template, 2, 1, \"span\", 1);\n      i0.ɵɵtemplate(2, ButtonComponent_span_2_Template, 1, 1, \"span\", 2);\n      i0.ɵɵelementStart(3, \"span\", 3);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.icon || ctx.svgIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.imageUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.iconClass);\n    }\n  },\n  dependencies: [i2.IconWrapperComponent, i3.NgIf, i3.NgClass],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoButton',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.button'\n      }],\n      selector: 'button[kendoButton], span[kendoButton], kendo-button',\n      template: `\n        <kendo-icon-wrapper\n            *ngIf=\"icon || svgIcon\"\n            innerCssClass=\"k-button-icon\"\n            [name]=\"icon\"\n            [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n        <span *ngIf=\"imageUrl\" class=\"k-button-icon k-icon\">\n            <img [src]=\"imageUrl\" class=\"k-image\" role=\"presentation\" />\n        </span>\n        <span *ngIf=\"iconClass\" class=\"k-button-icon\" [ngClass]=\"iconClass\"></span>\n        <span class=\"k-button-text\"><ng-content></ng-content></span>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: KendoButtonService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    toggleable: [{\n      type: Input\n    }],\n    togglable: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    imageUrl: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    themeColor: [{\n      type: Input\n    }],\n    svgIcon: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    click: [{\n      type: Output\n    }],\n    classButton: [{\n      type: HostBinding,\n      args: ['class.k-button']\n    }],\n    isToggleable: [{\n      type: HostBinding,\n      args: ['class.k-toggle-button']\n    }],\n    iconButtonClass: [{\n      type: HostBinding,\n      args: ['class.k-icon-button']\n    }],\n    roleSetter: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    classDisabled: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }, {\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    classActive: [{\n      type: HostBinding,\n      args: ['class.k-selected']\n    }],\n    getDirection: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    primary: [{\n      type: Input\n    }],\n    look: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass PreventableEvent {\n  constructor() {\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses the built-in behavior that follows the event.\n   */\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * If the event is prevented by any of its subscribers, returns `true`.\n   *\n   * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n   */\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n}\n\n/**\n * @hidden\n */\nconst tabindex = 'tabindex';\n/**\n * Represents the Kendo UI ButtonGroup component for Angular.\n */\nclass ButtonGroupComponent {\n  constructor(service, localization, element) {\n    this.service = service;\n    this.element = element;\n    /**\n     * The selection mode of the ButtonGroup.\n     * @default 'multiple'\n     */\n    this.selection = 'multiple';\n    /**\n     * When this option is set to `true` (default), the component is a single tab-stop,\n     * and focus is moved through the inner buttons via the arrow keys.\n     *\n     * When the option is set to `false`, the inner buttons are part of the natural tab sequence of the page.\n     *\n     * @default true\n     */\n    this.navigable = true;\n    /**\n     * Fires every time keyboard navigation occurs.\n     */\n    this.navigate = new EventEmitter();\n    this._tabIndex = 0;\n    this.currentTabIndex = 0;\n    this.subs = new Subscription();\n    this.role = 'group';\n    this.focusHandler = () => {\n      this.currentTabIndex = -1;\n      const focusedIndex = this.buttons.toArray().findIndex(current => current.element.tabIndex !== -1);\n      const index = focusedIndex === -1 ? 0 : focusedIndex;\n      this.focus(this.buttons.filter((_current, i) => {\n        return i === index;\n      }));\n    };\n    validatePackage(packageMetadata);\n    this.subs.add(localization.changes.subscribe(({\n      rtl\n    }) => this.direction = rtl ? 'rtl' : 'ltr'));\n  }\n  /**\n   * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n   */\n  set tabIndex(value) {\n    this._tabIndex = value;\n    this.currentTabIndex = value;\n  }\n  get tabIndex() {\n    return this._tabIndex;\n  }\n  get wrapperClass() {\n    return true;\n  }\n  get disabledClass() {\n    return this.disabled;\n  }\n  get stretchedClass() {\n    return !!this.width;\n  }\n  get dir() {\n    return this.direction;\n  }\n  get ariaDisabled() {\n    return this.disabled;\n  }\n  get wrapperWidth() {\n    return this.width;\n  }\n  get wrapperTabIndex() {\n    return this.disabled ? undefined : this.navigable ? this.currentTabIndex : undefined;\n  }\n  ngOnInit() {\n    this.subs.add(this.service.buttonClicked$.subscribe(button => {\n      let newSelectionValue;\n      if (this.isSelectionSingle()) {\n        newSelectionValue = true;\n        this.deactivate(this.buttons.filter(current => current !== button));\n      } else {\n        if (this.navigable) {\n          this.defocus(this.buttons.toArray());\n        }\n        newSelectionValue = !button.selected;\n      }\n      if (button.togglable) {\n        button.setSelected(newSelectionValue);\n      }\n      if (this.navigable) {\n        button.setAttribute(tabindex, '0');\n      }\n    }));\n    this.handleSubs('focus', () => this.navigable, this.focusHandler);\n    this.handleSubs('keydown', () => this.navigable && !this.disabled, event => this.navigateFocus(event));\n    this.handleSubs('focusout', event => this.navigable && event.relatedTarget && event.relatedTarget.parentNode !== this.element.nativeElement, () => {\n      this.defocus(this.buttons.toArray());\n      this.currentTabIndex = this.tabIndex;\n    });\n    this.subs.add(fromEvent(this.element.nativeElement, 'focusout').pipe(filter(event => this.navigable && event.relatedTarget && event.relatedTarget.parentNode !== this.element.nativeElement)).subscribe(() => {\n      this.defocus(this.buttons.toArray());\n      this.currentTabIndex = this.tabIndex;\n    }));\n  }\n  ngOnChanges(changes) {\n    if (isChanged('disabled', changes)) {\n      this.buttons.forEach(button => {\n        if (isPresent(this.disabled)) {\n          button.disabled = this.disabled;\n        }\n      });\n    }\n    if (isChanged('navigable', changes)) {\n      if (changes['navigable'].currentValue) {\n        this.setButtonsTabIndex();\n        this.currentTabIndex = 0;\n      } else {\n        this.currentTabIndex = -1;\n        this.buttons.forEach(button => button.setAttribute(tabindex, '0'));\n      }\n    }\n  }\n  ngAfterContentInit() {\n    if (!this.navigable) {\n      return;\n    }\n    this.setButtonsTabIndex();\n  }\n  ngAfterViewChecked() {\n    if (this.buttons.length) {\n      this.buttons.first.renderer.addClass(this.buttons.first.element, 'k-group-start');\n      this.buttons.last.renderer.addClass(this.buttons.last.element, 'k-group-end');\n    }\n  }\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n  ngAfterContentChecked() {\n    this.verifySettings();\n  }\n  navigateFocus(event) {\n    const focusedIndex = this.buttons.toArray().findIndex(current => current.element.tabIndex !== -1);\n    const firstIndex = 0;\n    const lastIndex = this.buttons.length - 1;\n    const eventArgs = new PreventableEvent();\n    if (event.keyCode === Keys.ArrowRight && focusedIndex < lastIndex) {\n      this.navigate.emit(eventArgs);\n      if (!eventArgs.isDefaultPrevented()) {\n        this.defocus(this.buttons.toArray());\n        this.focus(this.buttons.filter((_current, index) => {\n          return index === focusedIndex + 1;\n        }));\n      }\n    }\n    if (event.keyCode === Keys.ArrowLeft && focusedIndex > firstIndex) {\n      this.navigate.emit(eventArgs);\n      if (!eventArgs.isDefaultPrevented()) {\n        this.defocus(this.buttons.toArray());\n        this.focus(this.buttons.filter((_current, index) => {\n          return index === focusedIndex - 1;\n        }));\n      }\n    }\n  }\n  deactivate(buttons) {\n    buttons.forEach(button => {\n      button.setSelected(false);\n      if (this.navigable) {\n        button.setAttribute(tabindex, '-1');\n      }\n    });\n  }\n  activate(buttons) {\n    buttons.forEach(button => {\n      button.setSelected(true);\n      if (this.navigable) {\n        button.setAttribute(tabindex, '0');\n      }\n      button.focus();\n    });\n  }\n  defocus(buttons) {\n    buttons.forEach(button => {\n      button.setAttribute(tabindex, '-1');\n    });\n  }\n  focus(buttons) {\n    buttons.forEach(button => {\n      button.setAttribute(tabindex, '0');\n      button.focus();\n    });\n  }\n  verifySettings() {\n    if (isDevMode()) {\n      if (this.isSelectionSingle() && this.buttons.filter(button => button.selected).length > 1) {\n        throw new Error('Having multiple selected buttons with single selection mode is not supported');\n      }\n    }\n  }\n  isSelectionSingle() {\n    return this.selection === 'single';\n  }\n  setButtonsTabIndex() {\n    this.buttons.forEach(button => {\n      if (button.selected) {\n        button.setAttribute(tabindex, '0');\n      } else {\n        button.setAttribute(tabindex, '-1');\n      }\n    });\n  }\n  handleSubs(eventName, predicate, handler) {\n    this.subs.add(fromEvent(this.element.nativeElement, eventName).pipe(filter(predicate)).subscribe(handler));\n  }\n}\nButtonGroupComponent.ɵfac = function ButtonGroupComponent_Factory(t) {\n  return new (t || ButtonGroupComponent)(i0.ɵɵdirectiveInject(KendoButtonService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nButtonGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ButtonGroupComponent,\n  selectors: [[\"kendo-buttongroup\"]],\n  contentQueries: function ButtonGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ButtonComponent, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttons = _t);\n    }\n  },\n  hostVars: 12,\n  hostBindings: function ButtonGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.role)(\"dir\", ctx.dir)(\"aria-disabled\", ctx.ariaDisabled)(\"tabindex\", ctx.wrapperTabIndex);\n      i0.ɵɵstyleProp(\"width\", ctx.wrapperWidth);\n      i0.ɵɵclassProp(\"k-button-group\", ctx.wrapperClass)(\"k-disabled\", ctx.disabledClass)(\"k-button-group-stretched\", ctx.stretchedClass);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    selection: \"selection\",\n    width: \"width\",\n    tabIndex: \"tabIndex\",\n    navigable: \"navigable\"\n  },\n  outputs: {\n    navigate: \"navigate\"\n  },\n  exportAs: [\"kendoButtonGroup\"],\n  features: [i0.ɵɵProvidersFeature([KendoButtonService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.buttongroup'\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 1,\n  vars: 0,\n  template: function ButtonGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c2);\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonGroupComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoButtonGroup',\n      providers: [KendoButtonService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.buttongroup'\n      }],\n      selector: 'kendo-buttongroup',\n      template: `\n        <ng-content select=\"[kendoButton], kendo-button\"></ng-content>\n    `\n    }]\n  }], function () {\n    return [{\n      type: KendoButtonService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    selection: [{\n      type: Input,\n      args: ['selection']\n    }],\n    width: [{\n      type: Input,\n      args: ['width']\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    navigable: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    buttons: [{\n      type: ContentChildren,\n      args: [ButtonComponent]\n    }],\n    wrapperClass: [{\n      type: HostBinding,\n      args: ['class.k-button-group']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    stretchedClass: [{\n      type: HostBinding,\n      args: ['class.k-button-group-stretched']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    ariaDisabled: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }],\n    wrapperWidth: [{\n      type: HostBinding,\n      args: ['style.width']\n    }],\n    wrapperTabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }]\n  });\n})();\n\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the Button directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Button module\n * import { ButtonModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ButtonModule], // import Button module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ButtonModule {}\nButtonModule.ɵfac = function ButtonModule_Factory(t) {\n  return new (t || ButtonModule)();\n};\nButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ButtonModule\n});\nButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[IconsModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ButtonComponent],\n      imports: [IconsModule],\n      exports: [ButtonComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ButtonGroupComponent`&mdash;The ButtonGroupComponent component class.\n */\nclass ButtonGroupModule {}\nButtonGroupModule.ɵfac = function ButtonGroupModule_Factory(t) {\n  return new (t || ButtonGroupModule)();\n};\nButtonGroupModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ButtonGroupModule\n});\nButtonGroupModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ButtonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonGroupModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ButtonGroupComponent],\n      exports: [ButtonGroupComponent],\n      imports: [CommonModule, ButtonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Used for rendering the list item content.\n *\n * To define the item template, nest a `<ng-template>` tag with the `kendo<ComponentName>ItemTemplate` directive inside the component tag.\n *\n * For the DropDownButton, use the `kendoDropDownButtonItemTemplate` directive.\n * For the SplitButton, use the `kendoSplitButtonItemTemplate` directive.\n *\n * The template context is set to the current component. To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-splitbutton [data]=\"listItems\">\n *    <ng-template kendoSplitButtonItemTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-splitbutton>\n *  <kendo-dropdownbutton [data]=\"listItems\">\n *    <ng-template kendoDropDownButtonItemTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-dropdownbutton>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<any> = [{\n *      text: 'item1',\n *      icon: 'arrow-rotate-cw',\n *      disabled: false,\n *      click: (dataItem: any) => {\n *          //action\n *      }\n *  }, {\n *      text: 'item2',\n *      icon: 'arrow-rotate-cw',\n *      disabled: false,\n *      click: (dataItem: any) => {\n *          //action\n *      }\n *  }]\n * }\n * ```\n *\n * For more examples, refer to the article on the [DropDownList templates]({% slug overview_ddl %}#templates).\n */\nclass ButtonItemTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nButtonItemTemplateDirective.ɵfac = function ButtonItemTemplateDirective_Factory(t) {\n  return new (t || ButtonItemTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nButtonItemTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ButtonItemTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownButtonItemTemplate\", \"\"], [\"\", \"kendoSplitButtonItemTemplate\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonItemTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownButtonItemTemplate],[kendoSplitButtonItemTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\n/**\n * @hidden\n */\nclass FocusService {\n  constructor() {\n    this.onFocus = new EventEmitter();\n  }\n  isFocused(index) {\n    return index === this.focused;\n  }\n  focus(index) {\n    if (this.isFocused(index)) {\n      return;\n    }\n    this.focused = index;\n    this.onFocus.emit(index);\n  }\n  resetFocus() {\n    this.focused = -1;\n  }\n  get focused() {\n    return this.focusedIndex;\n  }\n  set focused(index) {\n    this.focusedIndex = index;\n    this.onFocus.emit(index);\n  }\n}\nFocusService.ɵfac = function FocusService_Factory(t) {\n  return new (t || FocusService)();\n};\nFocusService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FocusService,\n  factory: FocusService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * @hidden\n */\nclass FocusableDirective {\n  constructor(focusService, elementRef, renderer) {\n    this.focusService = focusService;\n    this.renderer = renderer;\n    this.subs = new Subscription();\n    this.element = elementRef.nativeElement;\n    this.subscribeEvents();\n  }\n  ngOnInit() {\n    if (this.index === this.focusService.focused) {\n      this.renderer.addClass(this.element, 'k-focus');\n    } else {\n      this.renderer.removeClass(this.element, 'k-focus');\n    }\n  }\n  /**\n   * @hidden\n   */\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n  subscribeEvents() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n    this.subs.add(this.focusService.onFocus.subscribe(index => {\n      if (this.index === index) {\n        this.renderer.addClass(this.element, 'k-focus');\n        this.renderer.setAttribute(this.element, 'tabidnex', '0');\n        this.element.focus();\n      } else {\n        this.renderer.setAttribute(this.element, 'tabidnex', '-1');\n        this.renderer.removeClass(this.element, 'k-focus');\n      }\n    }));\n  }\n}\nFocusableDirective.ɵfac = function FocusableDirective_Factory(t) {\n  return new (t || FocusableDirective)(i0.ɵɵdirectiveInject(FocusService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nFocusableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FocusableDirective,\n  selectors: [[\"\", \"kendoButtonFocusable\", \"\"]],\n  inputs: {\n    index: \"index\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoButtonFocusable]'\n    }]\n  }], function () {\n    return [{\n      type: FocusService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    index: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass TemplateContextDirective {\n  constructor(viewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n  set templateContext(context) {\n    if (this.insertedViewRef) {\n      this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n      this.insertedViewRef = undefined;\n    }\n    if (context.templateRef) {\n      this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n    }\n  }\n}\nTemplateContextDirective.ɵfac = function TemplateContextDirective_Factory(t) {\n  return new (t || TemplateContextDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\nTemplateContextDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TemplateContextDirective,\n  selectors: [[\"\", \"templateContext\", \"\"]],\n  inputs: {\n    templateContext: \"templateContext\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateContextDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[templateContext]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    templateContext: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass ListComponent {\n  constructor() {\n    this.onItemClick = new EventEmitter();\n    this.onItemBlur = new EventEmitter();\n    this.sizeClass = '';\n    validatePackage(packageMetadata);\n  }\n  set size(size) {\n    if (size) {\n      this.sizeClass = `k-menu-group-${SIZES[size]}`;\n    } else {\n      this.sizeClass = '';\n    }\n  }\n  getText(dataItem) {\n    if (dataItem) {\n      return this.textField ? dataItem[this.textField] : dataItem.text || dataItem;\n    }\n    return undefined;\n  }\n  getIconClasses(dataItem) {\n    const icon = dataItem.icon ? 'k-icon k-i-' + dataItem.icon : undefined;\n    const classes = {};\n    classes[icon || dataItem.iconClass] = true;\n    return classes;\n  }\n  onClick(index) {\n    this.onItemClick.emit(index);\n  }\n  onBlur() {\n    this.onItemBlur.emit();\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"kendo-button-list\"]],\n  inputs: {\n    data: \"data\",\n    textField: \"textField\",\n    itemTemplate: \"itemTemplate\",\n    size: \"size\"\n  },\n  outputs: {\n    onItemClick: \"onItemClick\",\n    onItemBlur: \"onItemBlur\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"unselectable\", \"on\", \"role\", \"menu\", 1, \"k-group\", \"k-menu-group\", \"k-reset\", 3, \"ngClass\"], [\"role\", \"menuitem\", \"unselectable\", \"on\", \"kendoButtonFocusable\", \"\", \"tabindex\", \"-1\", \"class\", \"k-item k-menu-item\", 3, \"index\", \"click\", \"blur\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"menuitem\", \"unselectable\", \"on\", \"kendoButtonFocusable\", \"\", \"tabindex\", \"-1\", 1, \"k-item\", \"k-menu-item\", 3, \"index\", \"click\", \"blur\"], [3, \"ngIf\"], [1, \"k-link\", \"k-menu-link\"], [3, \"templateContext\"], [3, \"name\", \"svgIcon\", \"customFontClass\", 4, \"ngIf\"], [\"class\", \"k-image\", \"alt\", \"\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"k-menu-link-text\", 4, \"ngIf\"], [3, \"name\", \"svgIcon\", \"customFontClass\"], [\"alt\", \"\", 1, \"k-image\", 3, \"src\"], [1, \"k-menu-link-text\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0);\n      i0.ɵɵtemplate(1, ListComponent_li_1_Template, 3, 4, \"li\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.sizeClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.IconWrapperComponent, i3.NgClass, i3.NgForOf, FocusableDirective, i3.NgIf, TemplateContextDirective],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-button-list',\n      template: `\n        <ul class=\"k-group k-menu-group k-reset\" [ngClass]=\"sizeClass\" unselectable=\"on\" role=\"menu\">\n            <li role=\"menuitem\"\n                unselectable=\"on\"\n                kendoButtonFocusable\n                *ngFor=\"let dataItem of data; let index = index;\"\n                [index]=\"index\"\n                tabindex=\"-1\"\n                class=\"k-item k-menu-item\"\n                (click)=\"$event.stopImmediatePropagation(); onClick(index);\"\n                (blur)=\"onBlur()\"\n                [attr.aria-disabled]=\"dataItem.disabled ? true : false\">\n                <ng-template [ngIf]=\"itemTemplate?.templateRef\">\n                    <span class=\"k-link k-menu-link\" [class.k-disabled]=\"dataItem.disabled\">\n                        <ng-template\n                            [templateContext]=\"{ templateRef: itemTemplate?.templateRef, $implicit: dataItem }\"\n                        ></ng-template>\n                    </span>\n                </ng-template>\n                <ng-template [ngIf]=\"!itemTemplate?.templateRef\">\n                    <span class=\"k-link k-menu-link\" [class.k-disabled]=\"dataItem.disabled\">\n                        <kendo-icon-wrapper\n                            *ngIf=\"dataItem.icon || dataItem.iconClass || dataItem.svgIcon\"\n                            [name]=\"dataItem.icon\"\n                            [svgIcon]=\"dataItem.svgIcon\"\n                            [customFontClass]=\"dataItem.iconClass\"\n                        ></kendo-icon-wrapper>\n                        <img\n                            *ngIf=\"dataItem.imageUrl\"\n                            class=\"k-image\"\n                            [src]=\"dataItem.imageUrl\"\n                            alt=\"\"\n                        >\n                        <span *ngIf=\"getText(dataItem)\" class=\"k-menu-link-text\">\n                            {{ getText(dataItem) }}\n                        </span>\n                    </span>\n                </ng-template>\n            </li>\n        </ul>\n    `\n    }]\n  }], function () {\n    return [];\n  }, {\n    data: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    itemTemplate: [{\n      type: Input\n    }],\n    onItemClick: [{\n      type: Output\n    }],\n    onItemBlur: [{\n      type: Output\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\nconst EXPORTED_DIRECTIVES = [ListComponent, FocusableDirective, ButtonItemTemplateDirective, TemplateContextDirective];\n/**\n * @hidden\n */\nclass ListModule {}\nListModule.ɵfac = function ListModule_Factory(t) {\n  return new (t || ListModule)();\n};\nListModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ListModule\n});\nListModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, IconsModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [EXPORTED_DIRECTIVES],\n      exports: [EXPORTED_DIRECTIVES],\n      imports: [CommonModule, IconsModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * @hidden\n */\nvar KeyEvents;\n(function (KeyEvents) {\n  KeyEvents[KeyEvents[\"keydown\"] = 0] = \"keydown\";\n  KeyEvents[KeyEvents[\"keypress\"] = 1] = \"keypress\";\n  KeyEvents[KeyEvents[\"keyup\"] = 2] = \"keyup\";\n})(KeyEvents || (KeyEvents = {}));\n\n/**\n * @hidden\n */\nvar NavigationAction;\n(function (NavigationAction) {\n  // eslint-disable-next-line id-denylist\n  NavigationAction[NavigationAction[\"Undefined\"] = 0] = \"Undefined\";\n  NavigationAction[NavigationAction[\"Open\"] = 1] = \"Open\";\n  NavigationAction[NavigationAction[\"Close\"] = 2] = \"Close\";\n  NavigationAction[NavigationAction[\"Enter\"] = 3] = \"Enter\";\n  NavigationAction[NavigationAction[\"EnterPress\"] = 4] = \"EnterPress\";\n  NavigationAction[NavigationAction[\"EnterUp\"] = 5] = \"EnterUp\";\n  NavigationAction[NavigationAction[\"Tab\"] = 6] = \"Tab\";\n  NavigationAction[NavigationAction[\"Esc\"] = 7] = \"Esc\";\n  NavigationAction[NavigationAction[\"Navigate\"] = 8] = \"Navigate\";\n})(NavigationAction || (NavigationAction = {}));\n\n/**\n * @hidden\n */\nconst NAVIGATION_CONFIG = new InjectionToken('navigation.config');\n\n/**\n * @hidden\n */\nclass NavigationService {\n  constructor(config) {\n    this.navigate = new EventEmitter();\n    this.open = new EventEmitter();\n    this.close = new EventEmitter();\n    this.enter = new EventEmitter();\n    this.enterpress = new EventEmitter();\n    this.enterup = new EventEmitter();\n    this.tab = new EventEmitter();\n    this.esc = new EventEmitter();\n    this.useLeftRightArrows = config.useLeftRightArrows;\n  }\n  process(args) {\n    const keyCode = args.keyCode;\n    const keyEvent = args.keyEvent;\n    let index;\n    let action = NavigationAction.Undefined;\n    if (keyEvent === KeyEvents.keyup) {\n      if (this.isEnterOrSpace(keyCode)) {\n        action = NavigationAction.EnterUp;\n      }\n    } else {\n      if (args.altKey && keyCode === Keys.ArrowDown) {\n        action = NavigationAction.Open;\n      } else if (args.altKey && keyCode === Keys.ArrowUp) {\n        action = NavigationAction.Close;\n      } else if (this.isEnterOrSpace(keyCode)) {\n        action = NavigationAction.Enter;\n      } else if (keyCode === Keys.Escape) {\n        action = NavigationAction.Esc;\n      } else if (keyCode === Keys.Tab) {\n        action = NavigationAction.Tab;\n      } else if (keyCode === Keys.ArrowUp || this.useLeftRightArrows && keyCode === Keys.ArrowLeft) {\n        const step = args.flipNavigation ? 1 : -1;\n        const start = args.flipNavigation ? args.min : args.max;\n        const end = args.flipNavigation ? args.max : args.min;\n        index = this.next({\n          current: args.current,\n          start: start,\n          end: end,\n          step: step\n        });\n        action = NavigationAction.Navigate;\n      } else if (keyCode === Keys.ArrowDown || this.useLeftRightArrows && keyCode === Keys.ArrowRight) {\n        const step = args.flipNavigation ? -1 : 1;\n        const start = args.flipNavigation ? args.max : args.min;\n        const end = args.flipNavigation ? args.min : args.max;\n        index = this.next({\n          current: args.current,\n          start: start,\n          end: end,\n          step: step\n        });\n        action = NavigationAction.Navigate;\n      } else if (keyCode === Keys.Home) {\n        index = args.min;\n        action = NavigationAction.Navigate;\n      } else if (keyCode === Keys.End) {\n        index = args.max;\n        action = NavigationAction.Navigate;\n      }\n    }\n    if (action !== NavigationAction.Undefined) {\n      this[NavigationAction[action].toLowerCase()].emit({\n        index,\n        target: args.target\n      });\n    }\n    return action;\n  }\n  isEnterOrSpace(keyCode) {\n    return keyCode === Keys.Enter || keyCode === Keys.Space;\n  }\n  next(args) {\n    if (!isPresent(args.current)) {\n      return args.start;\n    } else {\n      return args.current !== args.end ? args.current + args.step : args.end;\n    }\n  }\n}\nNavigationService.ɵfac = function NavigationService_Factory(t) {\n  return new (t || NavigationService)(i0.ɵɵinject(NAVIGATION_CONFIG));\n};\nNavigationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NavigationService,\n  factory: NavigationService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NAVIGATION_CONFIG]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @hidden\n */\nclass PopupContainerService {}\nPopupContainerService.ɵfac = function PopupContainerService_Factory(t) {\n  return new (t || PopupContainerService)();\n};\nPopupContainerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PopupContainerService,\n  factory: PopupContainerService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PopupContainerService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * @hidden\n */\nclass ListButton {\n  constructor(focusService, navigationService, wrapperRef, _zone, popupService, elRef, localization, cdr, containerService) {\n    this.focusService = focusService;\n    this.navigationService = navigationService;\n    this.wrapperRef = wrapperRef;\n    this._zone = _zone;\n    this.popupService = popupService;\n    this.elRef = elRef;\n    this.cdr = cdr;\n    this.containerService = containerService;\n    this._open = false;\n    this._disabled = false;\n    this._active = false;\n    this._popupSettings = {\n      animate: true,\n      popupClass: ''\n    };\n    this.listId = guid();\n    this._isFocused = false;\n    this.subs = new Subscription();\n    this.popupSubs = new Subscription();\n    /**\n     * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    this.tabIndex = 0;\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel the event, the popup will remain closed.\n     */\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel the event, the popup will remain open.\n     */\n    this.close = new EventEmitter();\n    this.isClosePrevented = false;\n    validatePackage(packageMetadata);\n    this.focusService = focusService;\n    this.navigationService = navigationService;\n    this.wrapper = wrapperRef.nativeElement;\n    this.subs.add(localization.changes.subscribe(({\n      rtl\n    }) => this.direction = rtl ? 'rtl' : 'ltr'));\n    this.subscribeEvents();\n  }\n  /**\n   * Sets the disabled state of the DropDownButton.\n   */\n  set disabled(value) {\n    if (value && this.openState) {\n      this.openState = false;\n    }\n    this._disabled = value;\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * @hidden\n   */\n  get componentTabIndex() {\n    return this.disabled ? -1 : this.tabIndex;\n  }\n  get appendTo() {\n    const {\n      appendTo\n    } = this.popupSettings;\n    if (!appendTo || appendTo === 'root') {\n      return undefined;\n    }\n    return appendTo === 'component' ? this.containerService.container : appendTo;\n  }\n  /**\n   * Configures the popup of the DropDownButton.\n   *\n   * The available options are:\n   * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n   * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n   * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n   * - `align: \"left\" | \"center\" | \"right\"`&mdash;Specifies the alignment of the popup.\n   */\n  set popupSettings(settings) {\n    this._popupSettings = Object.assign({\n      animate: true,\n      popupClass: ''\n    }, settings);\n  }\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * @hidden\n   */\n  get anchorAlign() {\n    const align = {\n      horizontal: this.popupSettings.align || 'left',\n      vertical: 'bottom'\n    };\n    if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n      align.horizontal = 'right';\n    }\n    return align;\n  }\n  /**\n   * @hidden\n   */\n  get popupAlign() {\n    const align = {\n      horizontal: this.popupSettings.align || 'left',\n      vertical: 'top'\n    };\n    if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n      align.horizontal = 'right';\n    }\n    return align;\n  }\n  ngOnChanges(changes) {\n    if (isChanged(\"popupSettings\", changes) && isPresent(this.popupRef)) {\n      const popup = this.popupRef.popup.instance;\n      const newSettings = changes['popupSettings'].currentValue;\n      popup.popupClass = newSettings.popupClass;\n      popup.animate = newSettings.animate;\n      popup.popupAlign = this.popupAlign;\n    }\n  }\n  get popupClasses() {\n    const popupClasses = ['k-menu-popup'];\n    if (this._popupSettings.popupClass) {\n      popupClasses.push(this._popupSettings.popupClass);\n    }\n    return popupClasses.join(' ');\n  }\n  get openState() {\n    return this._open;\n  }\n  /**\n   * @hidden\n   */\n  set openState(open) {\n    if (this.disabled) {\n      return;\n    }\n    this._open = open;\n  }\n  /**\n   * Returns the current open state of the popup.\n   */\n  get isOpen() {\n    return this._open;\n  }\n  /**\n   * @hidden\n   */\n  togglePopupVisibility() {\n    if (this._disabled) {\n      return;\n    }\n    this._toggle(!this.openState, true);\n    if (!this.isClosePrevented) {\n      this.focusService.focus(this.openState ? 0 : -1);\n    }\n  }\n  /**\n   * @hidden\n   */\n  onItemClick(index) {\n    this.togglePopupVisibility();\n    if (this.isClosePrevented) {\n      this.emitItemClickHandler(index);\n      return;\n    }\n    if (isDocumentAvailable() && !this.isClosePrevented) {\n      this.focusButton();\n    }\n    this.emitItemClickHandler(index);\n  }\n  ngOnDestroy() {\n    this.openState = false;\n    this.subs.unsubscribe();\n    this.destroyPopup();\n  }\n  subscribeEvents() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n    this.subscribeListItemFocusEvent();\n    this.subscribeComponentBlurredEvent();\n    this.subscribeNavigationEvents();\n  }\n  subscribeListItemFocusEvent() {\n    this.subs.add(this.focusService.onFocus.subscribe(() => {\n      this._isFocused = true;\n    }));\n  }\n  subscribeComponentBlurredEvent() {\n    this._zone.runOutsideAngular(() => {\n      this.subs.add(this.navigationService.tab.pipe(filter(() => this._isFocused), tap(() => this.focusButton())).subscribe(this.handleTab.bind(this)));\n      this.subs.add(fromEvent(document, 'click').pipe(filter(event => !this.wrapperContains(event.target)), filter(() => this._isFocused)).subscribe(() => this._zone.run(() => this.blurWrapper())));\n    });\n  }\n  subscribeNavigationEvents() {\n    this.subs.add(this.navigationService.navigate.subscribe(this.onArrowKeyNavigate.bind(this)));\n    this.subs.add(this.navigationService.enterup.subscribe(this.onNavigationEnterUp.bind(this)));\n    this.subs.add(this.navigationService.open.subscribe(this.onNavigationOpen.bind(this)));\n    this.subs.add(merge(this.navigationService.close, this.navigationService.esc).subscribe(this.onNavigationClose.bind(this)));\n  }\n  /**\n   * Toggles the visibility of the popup.\n   * If the `toggle` method is used to open or close the popup, the `open` and `close` events will not be fired.\n   *\n   * @param open - The state of the popup.\n   */\n  toggle(open) {\n    if (this.disabled) {\n      return;\n    }\n    const value = open === undefined ? !this.openState : open;\n    this._toggle(value, false);\n  }\n  /**\n   * @hidden\n   */\n  keyDownHandler(event, isHost) {\n    this.keyHandler(event, null, isHost);\n  }\n  /**\n   * @hidden\n   */\n  keyUpHandler(event) {\n    this.keyHandler(event, KeyEvents.keyup);\n  }\n  /**\n   * @hidden\n   */\n  keyHandler(event, keyEvent, isHost) {\n    if (this._disabled) {\n      return;\n    }\n    const eventData = event;\n    if (!isHost) {\n      eventData.stopImmediatePropagation();\n    }\n    const focused = this.focusService.focused || 0;\n    const action = this.navigationService.process({\n      altKey: eventData.altKey,\n      current: focused,\n      keyCode: eventData.keyCode,\n      keyEvent: keyEvent,\n      max: this._data ? this._data.length - 1 : 0,\n      min: 0,\n      target: event.target\n    });\n    if (action !== NavigationAction.Undefined && action !== NavigationAction.Tab && (action !== NavigationAction.Enter || action === NavigationAction.Enter && this.openState)) {\n      if (!(event.keyCode === Keys.Space && action === NavigationAction.EnterUp)) {\n        eventData.preventDefault();\n      }\n    }\n  }\n  emitItemClickHandler(index) {\n    const dataItem = this._data[index];\n    if (this._itemClick) {\n      this._itemClick.emit(dataItem);\n    }\n    if (dataItem && dataItem.click && !dataItem.disabled) {\n      dataItem.click(dataItem);\n    }\n    this.focusService.focus(index);\n  }\n  focusWrapper() {\n    if (this.openState) {\n      this.togglePopupVisibility();\n      this.focusButton();\n    }\n  }\n  wrapperContains(element) {\n    return this.wrapper === element || this.wrapper.contains(element);\n  }\n  blurWrapper(emit = true) {\n    if (!this._isFocused) {\n      return;\n    }\n    if (this.openState) {\n      this.togglePopupVisibility();\n    }\n    this._isFocused = false;\n    if (emit) {\n      this._blur.emit();\n      this.cdr.markForCheck();\n    }\n  }\n  focusButton() {\n    if (this.button) {\n      this.button.nativeElement.focus();\n    }\n  }\n  handleTab() {\n    this.blurWrapper();\n  }\n  onNavigationEnterUp() {\n    if (!this._disabled && !this.openState) {\n      this._active = false;\n    }\n    if (this.openState) {\n      const focused = this.focusService.focused;\n      if (isPresent(focused) && focused !== -1) {\n        this.emitItemClickHandler(focused);\n      }\n    }\n    this.togglePopupVisibility();\n    if (!this.openState && isDocumentAvailable()) {\n      this.button.nativeElement.focus();\n    }\n  }\n  onNavigationOpen() {\n    if (!this._disabled && !this.openState) {\n      this.togglePopupVisibility();\n    }\n  }\n  onNavigationClose() {\n    if (this.openState && !this.isClosePrevented) {\n      this.togglePopupVisibility();\n      if (isDocumentAvailable()) {\n        this.button.nativeElement.focus();\n      }\n    }\n  }\n  onArrowKeyNavigate({\n    index\n  }) {\n    this.focusService.focus(index);\n  }\n  _toggle(open, emitEvent) {\n    if (this.openState === open) {\n      return;\n    }\n    const eventArgs = new PreventableEvent();\n    if (emitEvent) {\n      if (open && !this.openState) {\n        this.open.emit(eventArgs);\n      } else if (!open && this.openState) {\n        this.close.emit(eventArgs);\n      }\n      if (eventArgs.isDefaultPrevented()) {\n        this.isClosePrevented = true;\n        return;\n      }\n    }\n    this.openState = open;\n    this.destroyPopup();\n    if (this.openState) {\n      this.createPopup();\n    }\n  }\n  createPopup() {\n    this.popupRef = this.popupService.open({\n      anchor: this.elRef,\n      anchorAlign: this.anchorAlign,\n      animate: this.popupSettings.animate,\n      appendTo: this.appendTo,\n      content: this.containerService.template,\n      popupAlign: this.popupAlign,\n      popupClass: this.popupClasses\n    });\n    this.popupSubs = this.popupRef.popupAnchorViewportLeave.subscribe(() => {\n      this.togglePopupVisibility();\n    });\n  }\n  destroyPopup() {\n    if (this.popupRef) {\n      this.popupRef.close();\n      this.popupRef = null;\n      this.popupSubs.unsubscribe();\n      this.isClosePrevented = false;\n    }\n  }\n}\nListButton.ɵfac = function ListButton_Factory(t) {\n  return new (t || ListButton)(i0.ɵɵdirectiveInject(FocusService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3$1.PopupService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PopupContainerService));\n};\nListButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ListButton,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    disabled: \"disabled\",\n    tabIndex: \"tabIndex\",\n    buttonClass: \"buttonClass\",\n    popupSettings: \"popupSettings\"\n  },\n  outputs: {\n    open: \"open\",\n    close: \"close\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function ListButton_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListButton, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: FocusService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3$1.PopupService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: PopupContainerService\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    buttonClass: [{\n      type: Input\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    popupSettings: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass Messages extends ComponentMessages {}\nMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵMessages_BaseFactory;\n  return function Messages_Factory(t) {\n    return (ɵMessages_BaseFactory || (ɵMessages_BaseFactory = i0.ɵɵgetInheritedFactory(Messages)))(t || Messages);\n  };\n}();\nMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Messages,\n  selectors: [[\"kendo-splitbutton-messages-base\"]],\n  inputs: {\n    splitButtonLabel: \"splitButtonLabel\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Messages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-splitbutton-messages-base'\n    }]\n  }], null, {\n    splitButtonLabel: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass LocalizedSplitButtonMessagesDirective extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nLocalizedSplitButtonMessagesDirective.ɵfac = function LocalizedSplitButtonMessagesDirective_Factory(t) {\n  return new (t || LocalizedSplitButtonMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\nLocalizedSplitButtonMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedSplitButtonMessagesDirective,\n  selectors: [[\"\", \"kendoSplitButtonLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => LocalizedSplitButtonMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedSplitButtonMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(() => LocalizedSplitButtonMessagesDirective)\n      }],\n      selector: '[kendoSplitButtonLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\nconst NAVIGATION_SETTINGS$2 = {\n  useLeftRightArrows: true\n};\nconst NAVIGATION_SETTINGS_PROVIDER$2 = {\n  provide: NAVIGATION_CONFIG,\n  useValue: NAVIGATION_SETTINGS$2\n};\nconst DEFAULT_ROUNDED$2 = 'medium';\nconst DEFAULT_FILL_MODE$2 = 'solid';\n/**\n * Represents the Kendo UI SplitButton component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-splitbutton [data]=\"data\" icon=\"clipboard\"\n *      (itemClick)=\"onSplitButtonItemClick($event)\"\n *      (buttonClick)=\"onSplitButtonClick()\">Paste</kendo-splitbutton>\n * `\n * })\n *\n * class AppComponent {\n *   public data: Array<any> = [{\n *       text: 'Keep Text Only',\n *       icon: 'clipboard-text',\n *       click: () => { console.log('Keep Text Only click handler'); }\n *   }, {\n *       text: 'Paste as HTML',\n *       icon: 'clipboard-code'\n *   }, {\n *       text: 'Paste Markdown',\n *       icon: 'clipboard-markdown'\n *   }, {\n *       text: 'Set Default Paste'\n *   }];\n *\n *   public onSplitButtonClick(dataItem: any): void {\n *       console.log('Paste');\n *   }\n *\n *   public onSplitButtonItemClick(dataItem: any): void {\n *       if (dataItem) {\n *           console.log(dataItem.text);\n *       }\n *   }\n * }\n * ```\n */\nclass SplitButtonComponent extends ListButton {\n  constructor(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr, renderer, containerService) {\n    super(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr, containerService);\n    this.localization = localization;\n    this.renderer = renderer;\n    /**\n     * Sets the text of the SplitButton.\n     */\n    this.text = '';\n    /**\n     * Defines an icon to be rendered next to the button text.\n     * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n     */\n    this.icon = '';\n    /**\n     * Defines the type attribute of the main button\n     */\n    this.type = 'button';\n    /**\n     * Defines the location of an image to be displayed next to the button text\n     * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n     */\n    this.imageUrl = '';\n    /**\n     * The size property specifies the padding of the SplitButton\n     * ([see example]({% slug api_buttons_splitbuttoncomponent %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    this.size = 'medium';\n    /**\n     * The SplitButton allows you to specify predefined theme colors.\n     * The theme color will be applied as a background and border color while also amending the text color accordingly\n     * ([see example]({% slug api_buttons_splitbuttoncomponent %}#toc-themeColor)).\n     *\n     * The possible values are:\n     * * `base` &mdash;Applies coloring based on the `base` theme color. (default)\n     * * `primary` &mdash;Applies coloring based on the `primary` theme color.\n     * * `secondary`&mdash;Applies coloring based on the `secondary` theme color.\n     * * `tertiary`&mdash; Applies coloring based on the `tertiary` theme color.\n     * * `info`&mdash;Applies coloring based on the `info` theme color.\n     * * `success`&mdash; Applies coloring based on the `success` theme color.\n     * * `warning`&mdash; Applies coloring based on the `warning` theme color.\n     * * `error`&mdash; Applies coloring based on the `error` theme color.\n     * * `dark`&mdash; Applies coloring based on the `dark` theme color.\n     * * `light`&mdash; Applies coloring based on the `light` theme color.\n     * * `inverse`&mdash; Applies coloring based on the `inverse` theme color.\n     * * `none`&mdash; Removes the built in theme color.\n     */\n    this.themeColor = 'base';\n    /**\n     * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    this.tabIndex = 0;\n    /**\n     * Specifies the name of the [font icon]({% slug icons %}#toc-list-of-font-icons) that will\n     * be rendered for the button which opens the popup.\n     */\n    this.arrowButtonIcon = 'caret-alt-down';\n    /**\n     * Specifies the [`SVGIcon`](slug:api_icons_svgicon) that will\n     * be rendered for the button which opens the popup.\n     */\n    this.arrowButtonSvgIcon = caretAltDownIcon;\n    /**\n     * Fires each time the user clicks the main button.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-splitbutton (buttonClick)=\"onSplitButtonClick()\" [data]=\"data\">\n     *            Reply\n     *        </kendo-splitbutton>\n     *    `\n     * })\n     * class AppComponent {\n     *    public data: Array<any> = ['Reply All', 'Forward', 'Reply & Delete'];\n     *\n     *    public onSplitButtonClick(): void {\n     *      console.log('SplitButton click');\n     *    }\n     * }\n     * ```\n     *\n     */\n    this.buttonClick = new EventEmitter();\n    /**\n     * Fires each time the user clicks on the drop-down list. The event data contains the data item bound to the clicked list item.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *     selector: 'my-app',\n     *    template: `\n     *        <kendo-splitbutton (itemClick)=\"onSplitButtonItemClick($event)\" [data]=\"data\">\n     *          Reply\n     *      </kendo-splitbutton>\n     *    `\n     * })\n     * class AppComponent {\n     *    public data: Array<any> = ['Reply All', 'Forward', 'Reply & Delete'];\n     *\n     *   public onSplitButtonItemClick(dataItem?: string): void {\n     *        if (dataItem) {\n     *            console.log(dataItem);\n     *       }\n     *    }\n     * }\n     * ```\n     *\n     */\n    this.itemClick = new EventEmitter();\n    /**\n     * Fires each time the SplitButton gets focused.\n     */\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the SplitButton gets blurred.\n     */\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel the event, the popup will remain closed.\n     */\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel the event, the popup will remain open.\n     */\n    this.close = new EventEmitter();\n    /**\n     * @hidden\n     */\n    this.activeArrow = false;\n    this.listId = guid();\n    this.buttonText = '';\n    this.arrowButtonClicked = false;\n    this._rounded = DEFAULT_ROUNDED$2;\n    this._fillMode = DEFAULT_FILL_MODE$2;\n    this._itemClick = this.itemClick;\n    this._blur = this.onBlur;\n  }\n  /**\n   * The rounded property specifies the border radius of the SplitButton\n   * ([see example]({% slug api_buttons_splitbuttoncomponent %}#toc-rounded)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   */\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$2;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the SplitButton\n   * ([see example]({% slug api_buttons_splitbuttoncomponent %}#toc-fillMode)).\n   *\n   * The available values are:\n   * * `solid` (default)\n   * * `flat`\n   * * `outline`\n   * * `link`\n   */\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$2;\n    this._fillMode = fillMode === 'clear' ? 'flat' : newFillMode;\n  }\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * When set to `true`, disables a SplitButton item\n   * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n   */\n  set disabled(value) {\n    if (this.isOpen) {\n      this.toggle(false);\n    }\n    this._disabled = value;\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Configures the popup of the SplitButton.\n   *\n   * The available options are:\n   * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n   * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n   * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n   * - `align: \"left\" | \"center\" | \"right\"`&mdash;Specifies the alignment of the popup.\n   */\n  set popupSettings(settings) {\n    this._popupSettings = Object.assign({\n      animate: true,\n      popupClass: ''\n    }, settings);\n  }\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * Sets the data of the SplitButton.\n   *\n   * > The data has to be provided in an array-like list.\n   */\n  set data(data) {\n    this._data = data || [];\n  }\n  get data() {\n    if (!this._data) {\n      this.data = [];\n    }\n    return this._data;\n  }\n  /**\n   * @hidden\n   */\n  get hasContent() {\n    return this.button?.nativeElement.childElementCount > 0;\n  }\n  /**\n   * @hidden\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * @hidden\n   */\n  get componentTabIndex() {\n    return this.disabled ? -1 : this.tabIndex;\n  }\n  set isFocused(value) {\n    this._isFocused = value;\n  }\n  get isFocused() {\n    return this._isFocused && !this._disabled && isDocumentAvailable() && this.wrapperContains(document.activeElement);\n  }\n  get widgetClasses() {\n    return true;\n  }\n  get dir() {\n    return this.direction;\n  }\n  /**\n   * @hidden\n   */\n  get ariaLabel() {\n    const localizationMsg = this.localization.get('splitButtonLabel') || '';\n    return replaceMessagePlaceholder(localizationMsg, 'buttonText', this.buttonText);\n  }\n  /**\n   * @hidden\n   */\n  onButtonFocus(event) {\n    if (!this._disabled) {\n      // eslint-disable-next-line no-unused-expressions\n      !this._isFocused && this.onFocus.emit();\n      this._isFocused = true;\n      this.focusService.resetFocus();\n      const relatedTargetInList = event.relatedTarget && closest(event.relatedTarget, '.k-popup kendo-button-list');\n      if (this.openState && !relatedTargetInList) {\n        this.focusService.focus(0);\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n  onArrowButtonClick() {\n    this.togglePopupVisibility();\n    this.arrowButtonClicked = false;\n  }\n  /**\n   * @hidden\n   */\n  toggleButtonActiveState(enable) {\n    this._active = enable;\n  }\n  /**\n   * @hidden\n   */\n  toggleArrowButtonActiveState(enable) {\n    this.arrowButtonClicked = true;\n    this.activeArrow = enable;\n  }\n  /**\n   * @hidden\n   */\n  onButtonClick() {\n    this.buttonClick.emit();\n  }\n  /**\n   * @hidden\n   */\n  onButtonBlur() {\n    if (!this.isOpen && !this.arrowButtonClicked) {\n      this.blurWrapper();\n    }\n  }\n  /**\n   * @hidden\n   */\n  keydown(event) {\n    this.keyDownHandler(event, true);\n    if (event.keyCode === Keys.Space) {\n      this._active = true;\n    }\n  }\n  /**\n   * @hidden\n   */\n  keyup(event) {\n    this._active = false;\n    if (event.keyCode !== Keys.Space) {\n      this.keyUpHandler(event);\n    }\n  }\n  /**\n   * @hidden\n   */\n  ngAfterViewInit() {\n    this.containerService.container = this.containerRef;\n    this.containerService.template = this.popupTemplate;\n    this.updateButtonText();\n    this.handleClasses(this.rounded, 'rounded');\n  }\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('text')) {\n      this.updateButtonText();\n    }\n    if (anyChanged(['text', 'icon', 'svgIcon', 'iconClass', 'imageUrl'], changes)) {\n      this.toggleButtonIconClass();\n    }\n    if (isChanged('popupSettings', changes) && isPresent(this.popupRef)) {\n      const popup = this.popupRef.popup.instance;\n      const newSettings = changes['popupSettings'].currentValue;\n      popup.popupClass = newSettings.popupClass;\n      popup.animate = newSettings.animate;\n      popup.popupAlign = this.popupAlign;\n    }\n  }\n  /**\n   * @hidden\n   */\n  onNavigationEnterUp(args) {\n    if (args.target !== this.button.nativeElement) {\n      super.onNavigationEnterUp();\n    }\n  }\n  /**\n   * @hidden\n   */\n  togglePopupVisibility() {\n    if (isDocumentAvailable() && this.wrapperContains(document.activeElement) && this.arrowButtonClicked) {\n      this.button.nativeElement.focus();\n    }\n    super.togglePopupVisibility();\n  }\n  /**\n   * @hidden\n   */\n  wrapperContains(element) {\n    return this.wrapper === element || this.wrapper.contains(element) || this.popupRef && this.popupRef.popupElement.contains(element);\n  }\n  /**\n   * @hidden\n   */\n  get anchorAlign() {\n    const align = {\n      horizontal: this.popupSettings.align || 'left',\n      vertical: 'bottom'\n    };\n    if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n      align.horizontal = 'right';\n    }\n    return align;\n  }\n  /**\n   * @hidden\n   */\n  get popupAlign() {\n    const align = {\n      horizontal: this.popupSettings.align || 'left',\n      vertical: 'top'\n    };\n    if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n      align.horizontal = 'right';\n    }\n    return align;\n  }\n  /**\n   * @hidden\n   */\n  get isIconButton() {\n    const hasIcon = this.icon || this.svgIcon || this.iconClass || this.imageUrl;\n    const hasTextContent = isDocumentAvailable() && this.button?.nativeElement.textContent.trim().length > 0;\n    return hasIcon && !hasTextContent;\n  }\n  /**\n   * Focuses the SplitButton component.\n   */\n  focus() {\n    if (isDocumentAvailable()) {\n      this.button.nativeElement.focus();\n    }\n  }\n  /**\n   * Blurs the SplitButton component.\n   */\n  blur() {\n    if (isDocumentAvailable()) {\n      this.button.nativeElement.blur();\n      this.blurWrapper();\n    }\n  }\n  /**\n   * Returns the current open state of the popup.\n   */\n  get isOpen() {\n    return this.openState;\n  }\n  updateButtonText() {\n    if (isDocumentAvailable()) {\n      const innerText = this.wrapper.innerText.split('\\n').join('').trim();\n      //setTimeout is needed because of `Expression has changed after it was checked.` error;\n      setTimeout(() => this.buttonText = innerText, 0);\n    }\n  }\n  handleClasses(value, input) {\n    const elem = this.wrapperRef.nativeElement;\n    const classes = getStylingClasses('button', input, this[input], value);\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n  toggleButtonIconClass() {\n    this.button.nativeElement.classList[this.isIconButton ? 'add' : 'remove']('k-button-icon');\n  }\n}\nSplitButtonComponent.ɵfac = function SplitButtonComponent_Factory(t) {\n  return new (t || SplitButtonComponent)(i0.ɵɵdirectiveInject(FocusService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3$1.PopupService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PopupContainerService));\n};\nSplitButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SplitButtonComponent,\n  selectors: [[\"kendo-splitbutton\"]],\n  contentQueries: function SplitButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ButtonItemTemplateDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n    }\n  },\n  viewQuery: function SplitButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 5, ElementRef);\n      i0.ɵɵviewQuery(_c6, 5, ElementRef);\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.arrowButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  hostVars: 7,\n  hostBindings: function SplitButtonComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function SplitButtonComponent_keydown_HostBindingHandler($event) {\n        return ctx.keydown($event);\n      })(\"keyup\", function SplitButtonComponent_keyup_HostBindingHandler($event) {\n        return ctx.keyup($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.dir);\n      i0.ɵɵclassProp(\"k-focus\", ctx.isFocused)(\"k-split-button\", ctx.widgetClasses)(\"k-button-group\", ctx.widgetClasses);\n    }\n  },\n  inputs: {\n    text: \"text\",\n    icon: \"icon\",\n    svgIcon: \"svgIcon\",\n    iconClass: \"iconClass\",\n    type: \"type\",\n    imageUrl: \"imageUrl\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    themeColor: \"themeColor\",\n    disabled: \"disabled\",\n    popupSettings: \"popupSettings\",\n    tabIndex: \"tabIndex\",\n    textField: \"textField\",\n    data: \"data\",\n    buttonClass: \"buttonClass\",\n    arrowButtonClass: \"arrowButtonClass\",\n    arrowButtonIcon: \"arrowButtonIcon\",\n    arrowButtonSvgIcon: \"arrowButtonSvgIcon\"\n  },\n  outputs: {\n    buttonClick: \"buttonClick\",\n    itemClick: \"itemClick\",\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    open: \"open\",\n    close: \"close\"\n  },\n  exportAs: [\"kendoSplitButton\"],\n  features: [i0.ɵɵProvidersFeature([FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER$2, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.splitbutton'\n  }, PopupContainerService]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 12,\n  vars: 32,\n  consts: function () {\n    let i18n_9;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text for the SplitButton aria-label\n       * @meaning kendo.splitbutton.splitButtonLabel\n       */\n      const MSG_D__WORK_TESTTASK_TESTTASK_CLIENTAPP_NODE_MODULES__PROGRESS_KENDO_ANGULAR_BUTTONS_FESM2020_PROGRESS_KENDO_ANGULAR_BUTTONS_MJS_10 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      }, {\n        original_code: {\n          \"interpolation\": \"{{ '{buttonText} splitbutton' }}\"\n        }\n      });\n      i18n_9 = MSG_D__WORK_TESTTASK_TESTTASK_CLIENTAPP_NODE_MODULES__PROGRESS_KENDO_ANGULAR_BUTTONS_FESM2020_PROGRESS_KENDO_ANGULAR_BUTTONS_MJS_10;\n    } else {\n      i18n_9 = $localize`:kendo.splitbutton.splitButtonLabel|The text for the SplitButton aria-label:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n    return [[\"kendoSplitButtonLocalizedMessages\", \"\", 6, \"splitButtonLabel\"], [\"splitButtonLabel\", i18n_9], [\"kendoButton\", \"\", 3, \"type\", \"tabindex\", \"disabled\", \"size\", \"rounded\", \"fillMode\", \"themeColor\", \"icon\", \"svgIcon\", \"iconClass\", \"imageUrl\", \"ngClass\", \"focus\", \"click\", \"blur\", \"mousedown\", \"mouseup\"], [\"button\", \"\"], [\"class\", \"k-button-text\", 4, \"ngIf\"], [\"kendoButton\", \"\", \"type\", \"button\", \"aria-hidden\", \"true\", 1, \"k-split-button-arrow\", 3, \"ngClass\", \"disabled\", \"icon\", \"svgIcon\", \"size\", \"rounded\", \"fillMode\", \"themeColor\", \"tabindex\", \"click\", \"mousedown\", \"mouseup\"], [\"arrowButton\", \"\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [1, \"k-button-text\"], [3, \"id\", \"data\", \"textField\", \"itemTemplate\", \"size\", \"onItemClick\", \"keydown\", \"keyup\"]];\n  },\n  template: function SplitButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵi18nAttributes(1, 1);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementStart(2, \"button\", 2, 3);\n      i0.ɵɵlistener(\"focus\", function SplitButtonComponent_Template_button_focus_2_listener($event) {\n        return ctx.onButtonFocus($event);\n      })(\"click\", function SplitButtonComponent_Template_button_click_2_listener() {\n        return ctx.onButtonClick();\n      })(\"blur\", function SplitButtonComponent_Template_button_blur_2_listener() {\n        return ctx.onButtonBlur();\n      })(\"mousedown\", function SplitButtonComponent_Template_button_mousedown_2_listener() {\n        return ctx.toggleButtonActiveState(true);\n      })(\"mouseup\", function SplitButtonComponent_Template_button_mouseup_2_listener() {\n        return ctx.toggleButtonActiveState(false);\n      });\n      i0.ɵɵtemplate(4, SplitButtonComponent_span_4_Template, 2, 1, \"span\", 4);\n      i0.ɵɵprojection(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5, 6);\n      i0.ɵɵlistener(\"click\", function SplitButtonComponent_Template_button_click_6_listener() {\n        return ctx.onArrowButtonClick();\n      })(\"mousedown\", function SplitButtonComponent_Template_button_mousedown_6_listener() {\n        return ctx.toggleArrowButtonActiveState(true);\n      })(\"mouseup\", function SplitButtonComponent_Template_button_mouseup_6_listener() {\n        return ctx.toggleArrowButtonActiveState(false);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, SplitButtonComponent_ng_template_8_Template, 1, 6, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementContainer(10, null, 8);\n    }\n    if (rf & 2) {\n      i0.ɵɵi18nExp(\"{buttonText} splitbutton\");\n      i0.ɵɵi18nApply(1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"k-active\", ctx.active);\n      i0.ɵɵproperty(\"type\", ctx.type)(\"tabindex\", ctx.componentTabIndex)(\"disabled\", ctx.disabled)(\"size\", ctx.size)(\"rounded\", ctx.rounded)(\"fillMode\", ctx.fillMode)(\"themeColor\", ctx.themeColor)(\"icon\", ctx.icon)(\"svgIcon\", ctx.svgIcon)(\"iconClass\", ctx.iconClass)(\"imageUrl\", ctx.imageUrl)(\"ngClass\", ctx.buttonClass);\n      i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-expanded\", ctx.openState)(\"aria-haspopup\", true)(\"aria-owns\", ctx.listId)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.text);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"k-active\", ctx.activeArrow);\n      i0.ɵɵproperty(\"ngClass\", ctx.arrowButtonClass)(\"disabled\", ctx.disabled)(\"icon\", ctx.arrowButtonIcon)(\"svgIcon\", ctx.arrowButtonSvgIcon)(\"size\", ctx.size)(\"rounded\", ctx.rounded)(\"fillMode\", ctx.fillMode)(\"themeColor\", ctx.themeColor)(\"tabindex\", -1);\n    }\n  },\n  dependencies: [ButtonComponent, ListComponent, LocalizedSplitButtonMessagesDirective, i3.NgClass, i3.NgIf],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitButtonComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoSplitButton',\n      providers: [FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER$2, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.splitbutton'\n      }, PopupContainerService],\n      selector: 'kendo-splitbutton',\n      template: `\n        <ng-container kendoSplitButtonLocalizedMessages\n            i18n-splitButtonLabel=\"kendo.splitbutton.splitButtonLabel|The text for the SplitButton aria-label\"\n            splitButtonLabel=\"{{ '{buttonText} splitbutton' }}\">\n        </ng-container>\n        <button\n            kendoButton\n            #button\n            [type]=\"type\"\n            [tabindex]=\"componentTabIndex\"\n            [disabled]=\"disabled\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"themeColor\"\n            [icon]=\"icon\"\n            [svgIcon]=\"svgIcon\"\n            [class.k-active]=\"active\"\n            [iconClass]=\"iconClass\"\n            [imageUrl]=\"imageUrl\"\n            [ngClass]=\"buttonClass\"\n            (focus)=\"onButtonFocus($event)\"\n            (click)=\"onButtonClick()\"\n            (blur)=\"onButtonBlur()\"\n            (mousedown)=\"toggleButtonActiveState(true)\"\n            (mouseup)=\"toggleButtonActiveState(false)\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"openState\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-owns]=\"listId\"\n            [attr.aria-label]=\"ariaLabel\"\n        >\n            <span *ngIf=\"text\" class=\"k-button-text\">\n                {{ text }}\n            </span><ng-content></ng-content>\n        </button>\n        <button kendoButton #arrowButton type=\"button\"\n            class=\"k-split-button-arrow\"\n            [class.k-active]=\"activeArrow\"\n            [ngClass]=\"arrowButtonClass\"\n            [disabled]=\"disabled\"\n            [icon]=\"arrowButtonIcon\"\n            [svgIcon]=\"arrowButtonSvgIcon\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"themeColor\"\n            [tabindex]=\"-1\"\n            aria-hidden=\"true\"\n            (click)=\"onArrowButtonClick()\"\n            (mousedown)=\"toggleArrowButtonActiveState(true)\"\n            (mouseup)=\"toggleArrowButtonActiveState(false)\"\n        ></button>\n        <ng-template #popupTemplate>\n            <kendo-button-list\n                [id]=\"listId\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [itemTemplate]=\"itemTemplate\"\n                (onItemClick)=\"onItemClick($event)\"\n                (keydown)=\"keyDownHandler($event)\"\n                (keyup)=\"keyUpHandler($event)\"\n                [attr.dir]=\"dir\"\n                [size]=\"size\"\n            >\n            </kendo-button-list>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FocusService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3$1.PopupService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: PopupContainerService\n    }];\n  }, {\n    text: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    svgIcon: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    imageUrl: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    themeColor: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    buttonClass: [{\n      type: Input\n    }],\n    arrowButtonClass: [{\n      type: Input\n    }],\n    arrowButtonIcon: [{\n      type: Input\n    }],\n    arrowButtonSvgIcon: [{\n      type: Input\n    }],\n    buttonClick: [{\n      type: Output\n    }],\n    itemClick: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    itemTemplate: [{\n      type: ContentChild,\n      args: [ButtonItemTemplateDirective]\n    }],\n    button: [{\n      type: ViewChild,\n      args: ['button', {\n        read: ElementRef\n      }]\n    }],\n    arrowButton: [{\n      type: ViewChild,\n      args: ['arrowButton', {\n        read: ElementRef\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate']\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    isFocused: [{\n      type: HostBinding,\n      args: ['class.k-focus']\n    }],\n    widgetClasses: [{\n      type: HostBinding,\n      args: ['class.k-split-button']\n    }, {\n      type: HostBinding,\n      args: ['class.k-button-group']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    keydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    keyup: [{\n      type: HostListener,\n      args: ['keyup', ['$event']]\n    }]\n  });\n})();\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug rtl_buttons %}).\n */\nclass SplitButtonCustomMessagesComponent extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n  get override() {\n    return true;\n  }\n}\nSplitButtonCustomMessagesComponent.ɵfac = function SplitButtonCustomMessagesComponent_Factory(t) {\n  return new (t || SplitButtonCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\nSplitButtonCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SplitButtonCustomMessagesComponent,\n  selectors: [[\"kendo-splitbutton-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => SplitButtonCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function SplitButtonCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitButtonCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(() => SplitButtonCustomMessagesComponent)\n      }],\n      selector: 'kendo-splitbutton-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `SplitButtonComponent`&mdash;The SplitButtonComponent component class.\n */\nclass SplitButtonModule {}\nSplitButtonModule.ɵfac = function SplitButtonModule_Factory(t) {\n  return new (t || SplitButtonModule)();\n};\nSplitButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SplitButtonModule\n});\nSplitButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, PopupModule, ButtonModule, ListModule], ListModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitButtonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SplitButtonComponent, LocalizedSplitButtonMessagesDirective, SplitButtonCustomMessagesComponent],\n      exports: [SplitButtonComponent, ListModule, LocalizedSplitButtonMessagesDirective, SplitButtonCustomMessagesComponent],\n      imports: [CommonModule, PopupModule, ButtonModule, ListModule]\n    }]\n  }], null, null);\n})();\nconst NAVIGATION_SETTINGS$1 = {\n  useLeftRightArrows: true\n};\nconst NAVIGATION_SETTINGS_PROVIDER$1 = {\n  provide: NAVIGATION_CONFIG,\n  useValue: NAVIGATION_SETTINGS$1\n};\nconst DEFAULT_FILL_MODE$1 = 'solid';\n/**\n * Represents the Kendo UI DropDownButton component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownbutton [data]=\"data\">\n *    User Settings\n *  </kendo-dropdownbutton>\n * `\n * })\n * class AppComponent {\n *   public data: Array<any> = [{\n *       text: 'My Profile'\n *   }, {\n *       text: 'Friend Requests'\n *   }, {\n *       text: 'Account Settings'\n *   }, {\n *       text: 'Support'\n *   }, {\n *       text: 'Log Out'\n *   }];\n * }\n * ```\n */\nclass DropDownButtonComponent extends ListButton {\n  constructor(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr, containerService) {\n    super(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr, containerService);\n    this.containerService = containerService;\n    /**\n     * Defines the name of an existing icon in the Kendo UI theme.\n     */\n    this.icon = '';\n    /**\n     * Defines the list of CSS classes which are used for styling the Button with custom icons.\n     */\n    this.iconClass = '';\n    /**\n     * Defines a URL for styling the button with a custom image.\n     */\n    this.imageUrl = '';\n    /**\n     * The size property specifies the padding of the DropDownButton\n     * ([see example]({% slug api_buttons_dropdownbuttoncomponent %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    this.size = 'medium';\n    /**\n     * The rounded property specifies the border radius of the DropDownButton\n     * ([see example]({% slug api_buttons_dropdownbuttoncomponent %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     */\n    this.rounded = 'medium';\n    /**\n     * The DropDownButton allows you to specify predefined theme colors.\n     * The theme color will be applied as a background and border color while also amending the text color accordingly\n     * ([see example]({% slug api_buttons_dropdownbuttoncomponent %}#toc-themeColor)).\n     *\n     * The possible values are:\n     * * `base` &mdash;Applies coloring based on the `base` theme color. (default)\n     * * `primary` &mdash;Applies coloring based on the `primary` theme color.\n     * * `secondary`&mdash;Applies coloring based on the `secondary` theme color.\n     * * `tertiary`&mdash; Applies coloring based on the `tertiary` theme color.\n     * * `info`&mdash;Applies coloring based on the `info` theme color.\n     * * `success`&mdash; Applies coloring based on the `success` theme color.\n     * * `warning`&mdash; Applies coloring based on the `warning` theme color.\n     * * `error`&mdash; Applies coloring based on the `error` theme color.\n     * * `dark`&mdash; Applies coloring based on the `dark` theme color.\n     * * `light`&mdash; Applies coloring based on the `light` theme color.\n     * * `inverse`&mdash; Applies coloring based on the `inverse` theme color.\n     * * `none` &mdash;Removes the default CSS class (no class would be rendered).\n     */\n    this.themeColor = 'base';\n    /**\n     * Fires each time the user clicks on a drop-down list item. The event data contains the data item bound to the clicked list item.\n     */\n    this.itemClick = new EventEmitter();\n    /**\n     * Fires each time the DropDownButton gets focused.\n     */\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the DropDownButton gets blurred.\n     */\n    this.onBlur = new EventEmitter();\n    this.listId = guid();\n    this.buttonId = guid();\n    this._fillMode = DEFAULT_FILL_MODE$1;\n    this._itemClick = this.itemClick;\n    this._blur = this.onBlur;\n  }\n  /**\n   * Sets or gets the data of the DropDownButton.\n   *\n   * > The data has to be provided in an array-like list.\n   */\n  set data(data) {\n    this._data = data || [];\n  }\n  get data() {\n    return this._data;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the DropDownButton\n   * ([see example]({% slug api_buttons_dropdownbuttoncomponent %}#toc-fillMode)).\n   *\n   * The available values are:\n   * * `solid` (default)\n   * * `flat`\n   * * `outline`\n   * * `link`\n   * * `none`\n   */\n  set fillMode(fillMode) {\n    this._fillMode = fillMode === 'clear' ? 'flat' : fillMode;\n  }\n  get fillMode() {\n    return this._fillMode;\n  }\n  get focused() {\n    return this._isFocused && !this._disabled;\n  }\n  get widgetClasses() {\n    return true;\n  }\n  get dir() {\n    return this.direction;\n  }\n  /**\n   * @hidden\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * @hidden\n   */\n  keydown(event) {\n    this.keyDownHandler(event, true);\n    if (event.keyCode === Keys.Space || event.keyCode === Keys.Enter) {\n      this._active = true;\n    }\n    if (event.keyCode === Keys.Enter) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * @hidden\n   */\n  keyup(event) {\n    this.keyUpHandler(event);\n    this._active = false;\n  }\n  /**\n   * @hidden\n   */\n  mousedown(event) {\n    if (this._disabled) {\n      event.preventDefault();\n    }\n    this._active = true;\n  }\n  /**\n   * @hidden\n   */\n  mouseup(event) {\n    if (this._disabled) {\n      event.preventDefault();\n    }\n    this._active = false;\n  }\n  /**\n   * @hidden\n   */\n  openPopup() {\n    this._isFocused = true;\n    this.togglePopupVisibility();\n  }\n  /**\n   * @hidden\n   */\n  onButtonBlur() {\n    if (!this.openState) {\n      this.blurWrapper();\n    }\n  }\n  /**\n   * Focuses the DropDownButton component.\n   */\n  focus() {\n    if (isDocumentAvailable()) {\n      this.button.nativeElement.focus();\n    }\n  }\n  /**\n   * Blurs the DropDownButton component.\n   */\n  blur() {\n    if (isDocumentAvailable()) {\n      this.button.nativeElement.blur();\n      this.blurWrapper();\n    }\n  }\n  ngAfterViewInit() {\n    this.containerService.container = this.container;\n    this.containerService.template = this.popupTemplate;\n  }\n  /**\n   * @hidden\n   */\n  handleFocus(event) {\n    if (!this._disabled) {\n      // eslint-disable-next-line no-unused-expressions\n      !this._isFocused && this.onFocus.emit();\n      this._isFocused = true;\n      this.focusService.resetFocus();\n      const relatedTargetInList = event.relatedTarget && closest(event.relatedTarget, '.k-popup kendo-button-list');\n      if (this.openState && !relatedTargetInList) {\n        this.focusService.focus(0);\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n  wrapperContains(element) {\n    return this.wrapper === element || this.wrapper.contains(element) || this.popupRef && this.popupRef.popupElement.contains(element);\n  }\n}\nDropDownButtonComponent.ɵfac = function DropDownButtonComponent_Factory(t) {\n  return new (t || DropDownButtonComponent)(i0.ɵɵdirectiveInject(FocusService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3$1.PopupService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PopupContainerService));\n};\nDropDownButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropDownButtonComponent,\n  selectors: [[\"kendo-dropdownbutton\"]],\n  contentQueries: function DropDownButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ButtonItemTemplateDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n    }\n  },\n  viewQuery: function DropDownButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 5, ElementRef);\n      i0.ɵɵviewQuery(_c11, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n    }\n  },\n  hostVars: 5,\n  hostBindings: function DropDownButtonComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function DropDownButtonComponent_keydown_HostBindingHandler($event) {\n        return ctx.keydown($event);\n      })(\"keyup\", function DropDownButtonComponent_keyup_HostBindingHandler($event) {\n        return ctx.keyup($event);\n      })(\"mousedown\", function DropDownButtonComponent_mousedown_HostBindingHandler($event) {\n        return ctx.mousedown($event);\n      })(\"mouseup\", function DropDownButtonComponent_mouseup_HostBindingHandler($event) {\n        return ctx.mouseup($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.dir);\n      i0.ɵɵclassProp(\"k-focus\", ctx.focused)(\"k-dropdown-button\", ctx.widgetClasses);\n    }\n  },\n  inputs: {\n    icon: \"icon\",\n    svgIcon: \"svgIcon\",\n    iconClass: \"iconClass\",\n    imageUrl: \"imageUrl\",\n    textField: \"textField\",\n    data: \"data\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    themeColor: \"themeColor\"\n  },\n  outputs: {\n    itemClick: \"itemClick\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoDropDownButton\"],\n  features: [i0.ɵɵProvidersFeature([FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER$1, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.dropdownbutton'\n  }, PopupContainerService]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 7,\n  vars: 18,\n  consts: [[\"kendoButton\", \"\", \"type\", \"button\", 3, \"id\", \"tabindex\", \"disabled\", \"icon\", \"svgIcon\", \"iconClass\", \"imageUrl\", \"ngClass\", \"size\", \"rounded\", \"fillMode\", \"themeColor\", \"click\", \"focus\", \"blur\"], [\"button\", \"\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [3, \"id\", \"data\", \"textField\", \"itemTemplate\", \"size\", \"onItemClick\", \"keydown\", \"keyup\"], [\"buttonList\", \"\"]],\n  template: function DropDownButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function DropDownButtonComponent_Template_button_click_0_listener() {\n        return ctx.openPopup();\n      })(\"focus\", function DropDownButtonComponent_Template_button_focus_0_listener($event) {\n        return ctx.handleFocus($event);\n      })(\"blur\", function DropDownButtonComponent_Template_button_blur_0_listener() {\n        return ctx.onButtonBlur();\n      });\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, DropDownButtonComponent_ng_template_3_Template, 2, 7, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementContainer(5, null, 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-active\", ctx.active);\n      i0.ɵɵproperty(\"id\", ctx.buttonId)(\"tabindex\", ctx.componentTabIndex)(\"disabled\", ctx.disabled)(\"icon\", ctx.icon)(\"svgIcon\", ctx.svgIcon)(\"iconClass\", ctx.iconClass)(\"imageUrl\", ctx.imageUrl)(\"ngClass\", ctx.buttonClass)(\"size\", ctx.size)(\"rounded\", ctx.rounded)(\"fillMode\", ctx.fillMode)(\"themeColor\", ctx.fillMode ? ctx.themeColor : null);\n      i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-expanded\", ctx.openState)(\"aria-haspopup\", true)(\"aria-controls\", ctx.listId);\n    }\n  },\n  dependencies: [ButtonComponent, ListComponent, i3.NgClass],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownButtonComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoDropDownButton',\n      providers: [FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER$1, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.dropdownbutton'\n      }, PopupContainerService],\n      selector: 'kendo-dropdownbutton',\n      template: `\n        <button kendoButton #button\n            type=\"button\"\n            [id]=\"buttonId\"\n            [tabindex]=\"componentTabIndex\"\n            [class.k-active]=\"active\"\n            [disabled]=\"disabled\"\n            [icon]=\"icon\"\n            [svgIcon]=\"svgIcon\"\n            [iconClass]=\"iconClass\"\n            [imageUrl]=\"imageUrl\"\n            [ngClass]=\"buttonClass\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"fillMode ? themeColor : null\"\n            (click)=\"openPopup()\"\n            (focus)=\"handleFocus($event)\"\n            (blur)=\"onButtonBlur()\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"openState\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-controls]=\"listId\"\n        >\n            <ng-content></ng-content>\n        </button>\n        <ng-template #popupTemplate>\n            <kendo-button-list\n                #buttonList\n                [id]=\"listId\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [itemTemplate]=\"itemTemplate\"\n                (onItemClick)=\"onItemClick($event)\"\n                (keydown)=\"keyDownHandler($event)\"\n                (keyup)=\"keyUpHandler($event)\"\n                [attr.dir]=\"dir\"\n                [attr.aria-labelledby]=\"buttonId\"\n                [size]=\"size\"\n            >\n            </kendo-button-list>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FocusService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3$1.PopupService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: PopupContainerService\n    }];\n  }, {\n    icon: [{\n      type: Input\n    }],\n    svgIcon: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    imageUrl: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    themeColor: [{\n      type: Input\n    }],\n    itemClick: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    focused: [{\n      type: HostBinding,\n      args: ['class.k-focus']\n    }],\n    widgetClasses: [{\n      type: HostBinding,\n      args: ['class.k-dropdown-button']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    itemTemplate: [{\n      type: ContentChild,\n      args: [ButtonItemTemplateDirective]\n    }],\n    button: [{\n      type: ViewChild,\n      args: ['button', {\n        read: ElementRef\n      }]\n    }],\n    buttonList: [{\n      type: ViewChild,\n      args: ['buttonList']\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate']\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    keydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    keyup: [{\n      type: HostListener,\n      args: ['keyup', ['$event']]\n    }],\n    mousedown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    mouseup: [{\n      type: HostListener,\n      args: ['mouseup', ['$event']]\n    }]\n  });\n})();\n\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `DropDownButtonComponent`&mdash;The DropDownButtonComponent component class.\n */\nclass DropDownButtonModule {}\nDropDownButtonModule.ɵfac = function DropDownButtonModule_Factory(t) {\n  return new (t || DropDownButtonModule)();\n};\nDropDownButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropDownButtonModule\n});\nDropDownButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, PopupModule, ListModule, ButtonModule], ListModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownButtonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DropDownButtonComponent],\n      exports: [DropDownButtonComponent, ListModule],\n      imports: [CommonModule, PopupModule, ListModule, ButtonModule]\n    }]\n  }], null, null);\n})();\nconst DEFAULT_SIZE$1 = 'medium';\nconst DEFAULT_ROUNDED$1 = 'medium';\nconst DEFAULT_THEME_COLOR$1 = 'base';\nconst DEFAULT_FILL_MODE = 'solid';\n/**\n * Displays a Chip that represents an input, attribute or an action.\n */\nclass ChipComponent {\n  constructor(element, renderer, ngZone, localizationService) {\n    this.element = element;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.localizationService = localizationService;\n    /**\n     * Specifies the selected state of the Chip.\n     * @default false\n     */\n    this.selected = false;\n    /**\n     * Specifies if the Chip will be removable or not.\n     * If the property is set to `true`, the Chip renders a remove icon.\n     * @default false\n     */\n    this.removable = false;\n    /**\n     * If set to `true`, the Chip will be disabled.\n     * @default false\n     */\n    this.disabled = false;\n    /**\n     * Fires each time the user clicks the remove icon of the Chip.\n     */\n    this.remove = new EventEmitter();\n    /**\n     * Fires each time the user clicks the content of the Chip.\n     */\n    this.contentClick = new EventEmitter();\n    this.tabIndex = 0;\n    this.hostClass = true;\n    /**\n     * @hidden\n     */\n    this.defaultRemoveIcon = xCircleIcon;\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    this._themeColor = 'base';\n    this.focused = false;\n    this.subs = new Subscription();\n    validatePackage(packageMetadata);\n    this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n  }\n  /**\n   * The size property specifies the padding of the Chip\n   * ([see example]({% slug appearance_chip %}#toc-size)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$1;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the Chip\n   * ([see example]({% slug appearance_chip %}#toc-rounded)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   */\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$1;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the Chip\n   * ([see example]({% slug appearance_chip %}#toc-fillMode)).\n   *\n   * The possible values are:\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   */\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE;\n    this.handleClasses(newFillMode, 'fillMode');\n    this._fillMode = newFillMode;\n  }\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * The Chip allows you to specify predefined theme colors.\n   * The theme color will be applied as a background and border color while also amending the text color accordingly\n   * ([see example]({% slug appearance_chip %}#toc-themeColor)).\n   *\n   * The possible values are:\n   * * `base` (default)\n   * * `info`\n   * * `success`\n   * * `warning`\n   * * `error`\n   * * `none`\n   */\n  set themeColor(themeColor) {\n    const newThemeColor = themeColor ? themeColor : DEFAULT_THEME_COLOR$1;\n    this.handleThemeColor(newThemeColor);\n    this._themeColor = newThemeColor;\n  }\n  get themeColor() {\n    return this._themeColor;\n  }\n  get hasIconClass() {\n    return Boolean(this.icon || this.iconClass || this.avatarClass);\n  }\n  get disabledClass() {\n    return this.disabled;\n  }\n  get selectedClass() {\n    return this.selected;\n  }\n  get focusedClass() {\n    return this.focused;\n  }\n  ngOnInit() {\n    this.subs.add(this.localizationService.changes.subscribe(({\n      rtl\n    }) => this.direction = rtl ? 'rtl' : 'ltr'));\n    this.renderer.setAttribute(this.element.nativeElement, 'role', 'button');\n  }\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n  ngOnChanges(changes) {\n    if (changes && changes['selected']) {\n      const hasAriaSelected = this.element.nativeElement.hasAttribute('aria-selected');\n      if (!hasAriaSelected) {\n        this.renderer.setAttribute(this.element.nativeElement, 'aria-pressed', `${this.selected}`);\n      }\n    }\n  }\n  ngAfterViewInit() {\n    const chip = this.element.nativeElement;\n    const stylingOptions = ['size', 'rounded', 'fillMode'];\n    stylingOptions.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n    this.attachElementEventHandlers(chip);\n  }\n  /**\n   * @hidden\n   */\n  get kendoIconClass() {\n    this.verifyIconSettings([this.iconClass, this.avatarClass]);\n    return `k-i-${this.icon}`;\n  }\n  /**\n   * @hidden\n   */\n  get customIconClass() {\n    this.verifyIconSettings([this.icon, this.avatarClass]);\n    return this.iconClass;\n  }\n  /**\n   * @hidden\n   */\n  get chipAvatarClass() {\n    this.verifyIconSettings([this.icon, this.iconClass]);\n    return this.avatarClass;\n  }\n  /**\n   * @hidden\n   */\n  get removeIconClass() {\n    return this.removeIcon ? this.removeIcon : 'k-i-x-circle';\n  }\n  /**\n   * Focuses the Chip component.\n   */\n  focus() {\n    if (isDocumentAvailable()) {\n      this.element.nativeElement.focus();\n    }\n  }\n  /**\n   * Blurs the Chip component.\n   */\n  blur() {\n    if (isDocumentAvailable()) {\n      this.element.nativeElement.blur();\n    }\n  }\n  /**\n   * @hidden\n   */\n  onRemoveClick(e) {\n    if (this.removable) {\n      this.remove.emit({\n        sender: this,\n        originalEvent: e\n      });\n    }\n  }\n  attachElementEventHandlers(chip) {\n    this.ngZone.runOutsideAngular(() => {\n      this.subs.add(this.renderer.listen(chip, 'focus', () => {\n        this.renderer.addClass(chip, 'k-focus');\n      }));\n      this.subs.add(this.renderer.listen(chip, 'blur', () => {\n        this.renderer.removeClass(chip, 'k-focus');\n      }));\n      this.subs.add(this.renderer.listen(chip, 'click', e => {\n        const isRemoveClicked = closest(e.target, '.k-chip-remove-action');\n        if (!isRemoveClicked) {\n          this.ngZone.run(() => {\n            this.contentClick.emit({\n              sender: this,\n              originalEvent: e\n            });\n          });\n        }\n      }));\n      this.subs.add(this.renderer.listen(chip, 'keydown', this.keyDownHandler.bind(this)));\n    });\n  }\n  /**\n   * @hidden\n   */\n  verifyIconSettings(iconsToCheck) {\n    if (isDevMode()) {\n      if (iconsToCheck.filter(icon => icon !== null && icon !== undefined).length > 0) {\n        this.renderer.removeClass(this.element.nativeElement, 'k-chip-has-icon');\n        throw new Error('Invalid configuration: Having multiple icons is not supported. Only a single icon on a chip can be displayed.');\n      }\n    }\n  }\n  handleClasses(value, input) {\n    const elem = this.element.nativeElement;\n    const classes = getStylingClasses('chip', input, this[input], value);\n    if (input === 'fillMode') {\n      this.handleThemeColor(this.themeColor, this[input], value);\n    }\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n  handleThemeColor(value, prevFillMode, fillMode) {\n    const elem = this.element.nativeElement;\n    const removeFillMode = prevFillMode ? prevFillMode : this.fillMode;\n    const addFillMode = fillMode ? fillMode : this.fillMode;\n    const themeColorClass = getThemeColorClasses('chip', removeFillMode, addFillMode, this.themeColor, value);\n    this.renderer.removeClass(elem, themeColorClass.toRemove);\n    if (addFillMode !== 'none' && fillMode !== 'none') {\n      if (themeColorClass.toAdd) {\n        this.renderer.addClass(elem, themeColorClass.toAdd);\n      }\n    }\n  }\n  keyDownHandler(e) {\n    const isEnterOrSpace = e.keyCode === Keys.Enter || e.keyCode === Keys.Space;\n    const isDeleteOrBackspace = e.keyCode === Keys.Delete || e.keyCode === Keys.Backspace;\n    if (this.disabled) {\n      return;\n    }\n    if (isEnterOrSpace) {\n      this.ngZone.run(() => {\n        this.contentClick.emit({\n          sender: this,\n          originalEvent: e\n        });\n      });\n    } else if (isDeleteOrBackspace && this.removable) {\n      this.ngZone.run(() => {\n        this.remove.emit({\n          sender: this,\n          originalEvent: e\n        });\n      });\n    }\n  }\n}\nChipComponent.ɵfac = function ChipComponent_Factory(t) {\n  return new (t || ChipComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\nChipComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChipComponent,\n  selectors: [[\"kendo-chip\"]],\n  hostVars: 13,\n  hostBindings: function ChipComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.tabIndex)(\"aria-disabled\", ctx.disabledClass)(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-chip\", ctx.hostClass)(\"k-chip-has-icon\", ctx.hasIconClass)(\"k-disabled\", ctx.disabledClass)(\"k-selected\", ctx.selectedClass)(\"k-focus\", ctx.focusedClass);\n    }\n  },\n  inputs: {\n    label: \"label\",\n    icon: \"icon\",\n    svgIcon: \"svgIcon\",\n    iconClass: \"iconClass\",\n    avatarClass: \"avatarClass\",\n    selected: \"selected\",\n    removable: \"removable\",\n    removeIcon: \"removeIcon\",\n    removeSvgIcon: \"removeSvgIcon\",\n    disabled: \"disabled\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    themeColor: \"themeColor\"\n  },\n  outputs: {\n    remove: \"remove\",\n    contentClick: \"contentClick\"\n  },\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.chip'\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 8,\n  vars: 6,\n  consts: [[\"size\", \"small\", \"innerCssClass\", \"k-chip-icon\", 3, \"name\", \"svgIcon\", 4, \"ngIf\"], [\"size\", \"small\", \"innerCssClass\", \"k-chip-icon\", 3, \"customFontClass\", 4, \"ngIf\"], [\"class\", \"k-chip-avatar k-avatar k-avatar-md k-avatar-solid k-avatar-solid-primary k-rounded-full\", 4, \"ngIf\"], [1, \"k-chip-content\"], [\"class\", \"k-chip-label\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"k-chip-actions\"], [\"class\", \"k-chip-action k-chip-remove-action\", 3, \"click\", 4, \"ngIf\"], [\"size\", \"small\", \"innerCssClass\", \"k-chip-icon\", 3, \"name\", \"svgIcon\"], [\"size\", \"small\", \"innerCssClass\", \"k-chip-icon\", 3, \"customFontClass\"], [1, \"k-chip-avatar\", \"k-avatar\", \"k-avatar-md\", \"k-avatar-solid\", \"k-avatar-solid-primary\", \"k-rounded-full\"], [1, \"k-avatar-image\", 3, \"ngClass\"], [1, \"k-chip-label\"], [1, \"k-chip-action\", \"k-chip-remove-action\", 3, \"click\"], [\"name\", \"x-circle\", \"size\", \"small\", 3, \"svgIcon\", \"customFontClass\"]],\n  template: function ChipComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, ChipComponent_kendo_icon_wrapper_0_Template, 1, 2, \"kendo-icon-wrapper\", 0);\n      i0.ɵɵtemplate(1, ChipComponent_kendo_icon_wrapper_1_Template, 1, 1, \"kendo-icon-wrapper\", 1);\n      i0.ɵɵtemplate(2, ChipComponent_span_2_Template, 2, 1, \"span\", 2);\n      i0.ɵɵelementStart(3, \"span\", 3);\n      i0.ɵɵtemplate(4, ChipComponent_span_4_Template, 2, 1, \"span\", 4);\n      i0.ɵɵtemplate(5, ChipComponent_ng_content_5_Template, 1, 0, \"ng-content\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"span\", 6);\n      i0.ɵɵtemplate(7, ChipComponent_span_7_Template, 2, 2, \"span\", 7);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.icon || ctx.svgIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.iconClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.avatarClass);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.label);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.removable);\n    }\n  },\n  dependencies: [i2.IconWrapperComponent, i3.NgIf, i3.NgClass],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChipComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-chip',\n      template: `\n        <kendo-icon-wrapper\n            *ngIf=\"icon || svgIcon\"\n            size=\"small\"\n            innerCssClass=\"k-chip-icon\"\n            [name]=\"icon\"\n            [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n\n        <kendo-icon-wrapper\n            *ngIf=\"iconClass\"\n            size=\"small\"\n            innerCssClass=\"k-chip-icon\"\n            [customFontClass]=\"customIconClass\"></kendo-icon-wrapper>\n\n        <span\n            *ngIf=\"avatarClass\"\n            class=\"k-chip-avatar k-avatar k-avatar-md k-avatar-solid k-avatar-solid-primary k-rounded-full\">\n            <span class=\"k-avatar-image\" [ngClass]=\"chipAvatarClass\"></span>\n        </span>\n\n        <span class=\"k-chip-content\">\n            <span class=\"k-chip-label\" *ngIf=\"label\">\n                {{ label }}\n            </span>\n            <ng-content *ngIf=\"!label\"></ng-content>\n        </span>\n\n        <span class=\"k-chip-actions\">\n            <span class=\"k-chip-action k-chip-remove-action\"\n                *ngIf=\"removable\"\n                (click)=\"onRemoveClick($event)\">\n                <kendo-icon-wrapper\n                    name=\"x-circle\"\n                    size=\"small\"\n                    [svgIcon]=\"defaultRemoveIcon || removeSvgIcon\"\n                    [customFontClass]=\"removeIcon\"></kendo-icon-wrapper>\n\n            </span>\n        </span>\n    `,\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.chip'\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    label: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    svgIcon: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    avatarClass: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    removeIcon: [{\n      type: Input\n    }],\n    removeSvgIcon: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    themeColor: [{\n      type: Input\n    }],\n    remove: [{\n      type: Output\n    }],\n    contentClick: [{\n      type: Output\n    }],\n    tabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-chip']\n    }],\n    hasIconClass: [{\n      type: HostBinding,\n      args: ['class.k-chip-has-icon']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }, {\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    selectedClass: [{\n      type: HostBinding,\n      args: ['class.k-selected']\n    }],\n    focusedClass: [{\n      type: HostBinding,\n      args: ['class.k-focus']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }]\n  });\n})();\nclass ChipListComponent {\n  constructor(localizationService, renderer, element, ngZone) {\n    this.localizationService = localizationService;\n    this.renderer = renderer;\n    this.element = element;\n    this.ngZone = ngZone;\n    this.hostClass = true;\n    this.orientation = 'horizontal';\n    /**\n     * Sets the selection mode of the ChipList.\n     *\n     * The available values are:\n     * * `none` (default)\n     * * `single`\n     * * `multiple`\n     */\n    this.selection = 'none';\n    /**\n     * Fires each time when the ChipList selection is changed.\n     */\n    this.selectedChange = new EventEmitter();\n    /**\n     * Fires each time the user clicks on the remove icon of the Chip.\n     */\n    this.remove = new EventEmitter();\n    /**\n     * @hidden\n     */\n    this.role = 'listbox';\n    this._size = 'medium';\n    this.subs = new Subscription();\n    this._navigable = false;\n    this.currentActiveIndex = 0;\n    validatePackage(packageMetadata);\n    this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n  }\n  /**\n   * The size property specifies the gap between the Chips in the ChipList\n   * ([see example]({% slug appearance_chiplist %}#toc-size)).\n   *\n   * The possible values are:\n   * * `'small'`\n   * * `'medium'` (default)\n   * * `'large'`\n   * * `none`\n   */\n  set size(size) {\n    const sizeValue = size ? size : 'medium';\n    this.handleClasses(sizeValue, 'size');\n    this._size = sizeValue;\n  }\n  get size() {\n    return this._size;\n  }\n  get single() {\n    return this.selection === 'single';\n  }\n  get multiple() {\n    return this.selection === 'multiple';\n  }\n  /**\n   * @hidden\n   */\n  onClick($event) {\n    const target = $event.target;\n    const isRemoveClicked = closest(target, '.k-chip-remove-action');\n    const clickedChip = closest(target, '.k-chip');\n    const chip = this.chips.find(chip => clickedChip === chip.element.nativeElement);\n    this.currentActiveIndex = this.chips.toArray().indexOf(chip);\n    chip && chip.focus();\n    if (isRemoveClicked && clickedChip) {\n      const removeEventArgs = {\n        sender: this,\n        originalEvent: $event,\n        removedChip: chip\n      };\n      this.remove.emit(removeEventArgs);\n    }\n    if (this.selection !== 'none' && clickedChip && !isRemoveClicked) {\n      this.setSelection(chip);\n    }\n  }\n  /**\n   * When set to `true`, keyboard navigation is available through arrow keys and roving tabindex. Otherwise, all chips\n   * are part of the default tabbing sequence of the page.\n   *\n   * @default false\n   */\n  set navigable(value) {\n    this._navigable = value;\n    this.chips?.forEach(c => this.renderer.setAttribute(c.element.nativeElement, 'tabindex', value ? '-1' : '0'));\n    this.chips?.first && this.renderer.setAttribute(this.chips.first.element.nativeElement, 'tabindex', '0');\n  }\n  get navigable() {\n    return this._navigable;\n  }\n  ngOnInit() {\n    this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({\n      rtl\n    }) => this.direction = rtl ? 'rtl' : 'ltr');\n  }\n  ngAfterViewInit() {\n    const stylingInputs = ['size'];\n    stylingInputs.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n    this.attachElementEventHandlers();\n  }\n  ngAfterContentInit() {\n    this.updateChips();\n    this.subs.add(this.chips?.changes.subscribe(() => this.updateChips()));\n  }\n  ngOnDestroy() {\n    if (this.dynamicRTLSubscription) {\n      this.dynamicRTLSubscription.unsubscribe();\n    }\n    this.subs.unsubscribe();\n  }\n  selectedChips() {\n    return this.chips.reduce((acc, cur, idx) => {\n      return cur.selected ? acc.concat(idx) : acc;\n    }, []);\n  }\n  /**\n   * Updates the selection on click of a Chip. Emits events.\n   */\n  setSelection(chip) {\n    if (this.selection === 'single') {\n      this.clearSelection(chip);\n    }\n    chip.selected = !chip.selected;\n    const chipEl = chip.element.nativeElement;\n    this.renderer.setAttribute(chipEl, 'aria-selected', `${chip.selected}`);\n    this.selectedChange.emit(this.selectedChips());\n  }\n  clearSelection(chip) {\n    this.chips.forEach(c => {\n      if (chip !== c) {\n        c.selected = false;\n        this.renderer.setAttribute(c.element.nativeElement, 'aria-selected', 'false');\n      }\n    });\n  }\n  handleClasses(value, input) {\n    const elem = this.element.nativeElement;\n    const classes = getStylingClasses('chip-list', input, this[input], value);\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n  attachElementEventHandlers() {\n    const chiplist = this.element.nativeElement;\n    this.ngZone.runOutsideAngular(() => {\n      this.subs.add(this.renderer.listen(chiplist, 'keydown', this.keyDownHandler.bind(this)));\n    });\n  }\n  keyDownHandler(e) {\n    const isEnterOrSpace = e.keyCode === Keys.Enter || e.keyCode === Keys.Space;\n    const isDeleteOrBackspace = e.keyCode === Keys.Delete || e.keyCode === Keys.Backspace;\n    const isLeftArrow = e.keyCode === Keys.ArrowLeft;\n    const isRightArrow = e.keyCode === Keys.ArrowRight;\n    if (isEnterOrSpace) {\n      const target = e.target;\n      const clickedChip = closest(target, '.k-chip');\n      const chip = this.chips.find(chip => clickedChip === chip.element.nativeElement);\n      this.currentActiveIndex = this.chips.toArray().findIndex(chip => clickedChip === chip.element.nativeElement);\n      if (this.selection !== 'none' && clickedChip) {\n        this.ngZone.run(() => {\n          this.setSelection(chip);\n        });\n      }\n    } else if (isDeleteOrBackspace) {\n      const target = e.target;\n      const clickedChip = closest(target, '.k-chip');\n      const chip = this.chips.find(chip => clickedChip === chip.element.nativeElement);\n      if (clickedChip) {\n        const removeEventArgs = {\n          sender: this,\n          originalEvent: e,\n          removedChip: chip\n        };\n        this.ngZone.run(() => {\n          this.remove.emit(removeEventArgs);\n        });\n      }\n    } else if (isLeftArrow) {\n      this.handleArrowKeys('left');\n    } else if (isRightArrow) {\n      this.handleArrowKeys('right');\n    }\n  }\n  handleArrowKeys(direction) {\n    if (!this.navigable) {\n      return;\n    }\n    const directionDelta = direction === 'left' ? -1 : 1;\n    this.currentActiveIndex = this.currentActiveIndex + directionDelta;\n    if (this.currentActiveIndex >= this.chips.length) {\n      this.currentActiveIndex = 0;\n    } else if (this.currentActiveIndex < 0) {\n      this.currentActiveIndex = this.chips.length - 1;\n    }\n    this.chips.forEach((chip, idx) => {\n      this.renderer.removeAttribute(chip.element.nativeElement, 'tabindex');\n      if (idx === this.currentActiveIndex) {\n        this.renderer.setAttribute(chip.element.nativeElement, 'tabindex', '0');\n        chip.focus();\n      }\n    });\n  }\n  updateChips() {\n    this.normalizeActiveIndex();\n    this.chips.forEach((chip, idx) => {\n      const chipEl = chip.element.nativeElement;\n      this.renderer.removeAttribute(chip.element.nativeElement, 'tabindex');\n      if (idx === this.currentActiveIndex) {\n        this.renderer.setAttribute(chip.element.nativeElement, 'tabindex', '0');\n        if (isDocumentAvailable() && document.activeElement.closest('.k-chip-list')) {\n          chip.focus();\n        }\n      }\n      this.role === 'listbox' && this.renderer.setAttribute(chipEl, 'role', 'option');\n      if (chip.removable) {\n        this.renderer.setAttribute(chipEl, 'aria-keyshortcuts', 'Enter Delete');\n      }\n      this.renderer.removeAttribute(chipEl, 'aria-pressed');\n      this.renderer.setAttribute(chipEl, 'aria-selected', `${chip.selected}`);\n    });\n  }\n  normalizeActiveIndex() {\n    if (this.currentActiveIndex >= this.chips.length) {\n      this.currentActiveIndex = Math.max(this.chips.length - 1, 0);\n    }\n  }\n}\nChipListComponent.ɵfac = function ChipListComponent_Factory(t) {\n  return new (t || ChipListComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nChipListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChipListComponent,\n  selectors: [[\"kendo-chiplist\"], [\"kendo-chip-list\"]],\n  contentQueries: function ChipListComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ChipComponent, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chips = _t);\n    }\n  },\n  hostVars: 10,\n  hostBindings: function ChipListComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function ChipListComponent_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-orientation\", ctx.orientation)(\"dir\", ctx.direction)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role);\n      i0.ɵɵclassProp(\"k-chip-list\", ctx.hostClass)(\"k-selection-single\", ctx.single)(\"k-selection-multiple\", ctx.multiple);\n    }\n  },\n  inputs: {\n    selection: \"selection\",\n    size: \"size\",\n    role: \"role\",\n    navigable: \"navigable\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    remove: \"remove\"\n  },\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.chiplist'\n  }])],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function ChipListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChipListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-chiplist, kendo-chip-list',\n      template: `\n        <ng-content></ng-content>\n    `,\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.chiplist'\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-chip-list']\n    }],\n    orientation: [{\n      type: HostBinding,\n      args: ['attr.aria-orientation']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    selection: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    remove: [{\n      type: Output\n    }],\n    chips: [{\n      type: ContentChildren,\n      args: [ChipComponent]\n    }],\n    single: [{\n      type: HostBinding,\n      args: ['class.k-selection-single']\n    }],\n    multiple: [{\n      type: HostBinding,\n      args: ['attr.aria-multiselectable']\n    }, {\n      type: HostBinding,\n      args: ['class.k-selection-multiple']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }, {\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    navigable: [{\n      type: Input\n    }]\n  });\n})();\nconst exportedModules$1 = [ChipComponent, ChipListComponent];\nconst declarations$1 = [...exportedModules$1];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Chip and ChipList components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Chip module\n * import { ChipModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ChipModule], // import Chip module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * ```\n */\nclass ChipModule {}\nChipModule.ɵfac = function ChipModule_Factory(t) {\n  return new (t || ChipModule)();\n};\nChipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChipModule\n});\nChipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, IconsModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations$1],\n      exports: [exportedModules$1],\n      imports: [CommonModule, IconsModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * @hidden\n */\nfunction getAnchorAlign(fabAlign, rtl) {\n  const align = {\n    horizontal: rtl ? 'right' : 'left',\n    vertical: 'bottom'\n  };\n  if (fabAlign.horizontal === 'end') {\n    align.horizontal = rtl ? 'left' : 'right';\n  }\n  if (fabAlign.vertical === 'bottom') {\n    align.vertical = 'top';\n  }\n  if (fabAlign.vertical === 'bottom' && fabAlign.horizontal === 'end') {\n    align.horizontal = rtl ? 'left' : 'right';\n    align.vertical = 'top';\n  }\n  return align;\n}\n/**\n * @hidden\n */\nfunction getPopupAlign(fabAlign, rtl) {\n  const align = {\n    horizontal: rtl ? 'right' : 'left',\n    vertical: 'top'\n  };\n  if (fabAlign.horizontal === 'end') {\n    align.horizontal = rtl ? 'left' : 'right';\n  }\n  if (fabAlign.vertical === 'bottom') {\n    align.vertical = 'bottom';\n  }\n  if (fabAlign.vertical === 'bottom' && fabAlign.horizontal === 'end') {\n    align.horizontal = rtl ? 'left' : 'right';\n    align.vertical = 'bottom';\n  }\n  return align;\n}\n\n/**\n * @hidden\n */\nfunction openAnimation(animationSettings) {\n  const isBottom = animationSettings.align.vertical === 'bottom';\n  const duration = animationSettings.duration;\n  const gap = animationSettings.gap;\n  return sequence([query(`.k-fab-item`, [style({\n    opacity: 0,\n    transform: `translateY(${isBottom ? '8px' : '-8px'})`\n  }), stagger(gap, [animate(`${duration}ms ease-in`, style({\n    opacity: '*',\n    transform: 'translateY(0)'\n  }))])], {\n    optional: true\n  })]);\n}\n/**\n * @hidden\n */\nfunction closeAnimation(animationSettings) {\n  const isBottom = animationSettings.align.vertical === 'bottom';\n  const duration = animationSettings.duration;\n  const gap = animationSettings.gap;\n  return sequence([query(`.k-fab-item`, [style({\n    opacity: '*',\n    transform: 'translateY(0)'\n  }), stagger(-gap, [animate(`${duration}ms ease-in`, style({\n    opacity: 0,\n    transform: `translateY(${isBottom ? '8px' : '-8px'})`\n  }))])], {\n    optional: true\n  })]);\n}\n\n/**\n * Represents a template that defines the content of the whole dial item.\n * To define the template, nest an `<ng-template>` tag\n * with the `kendoDialItemTemplate` directive inside the `<kendo-floatingactionbutton>` tag\n * ([see example]({% slug templates_floatingactionbutton %}#toc-dial-item-template)).\n */\nclass DialItemTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nDialItemTemplateDirective.ɵfac = function DialItemTemplateDirective_Factory(t) {\n  return new (t || DialItemTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\nDialItemTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DialItemTemplateDirective,\n  selectors: [[\"\", \"kendoDialItemTemplate\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialItemTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDialItemTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Represents a template that defines the content of the FloatingActionButton.\n * To define the template, nest an `<ng-template>` tag\n * with the `kendoFloatingActionButtonTemplate` directive inside the `<kendo-floatingactionbutton>` tag\n * ([see example]({% slug templates_floatingactionbutton %}#toc-floatingactionbutton-template)).\n */\nclass FloatingActionButtonTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nFloatingActionButtonTemplateDirective.ɵfac = function FloatingActionButtonTemplateDirective_Factory(t) {\n  return new (t || FloatingActionButtonTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\nFloatingActionButtonTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FloatingActionButtonTemplateDirective,\n  selectors: [[\"\", \"kendoFloatingActionButtonTemplate\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatingActionButtonTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFloatingActionButtonTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @hidden\n */\nclass DialItemComponent {\n  constructor(element, renderer, localisationService) {\n    this.element = element;\n    this.renderer = renderer;\n    this.localisationService = localisationService;\n    this.hostClass = true;\n    this.role = 'menuitem';\n  }\n  get disabledClass() {\n    return this.item.disabled;\n  }\n  get title() {\n    const label = this.item.label;\n    return label || this.itemTitle;\n  }\n  get indexAttr() {\n    return this.index;\n  }\n  get iconClasses() {\n    const classes = [];\n    if (this.item.iconClass) {\n      classes.push(`${this.item.iconClass}`);\n    }\n    if (this.item.icon) {\n      classes.push(`k-fab-item-icon k-icon k-i-${this.item.icon}`);\n    }\n    return classes;\n  }\n  get itemTitle() {\n    const icon = this.item.icon;\n    const itemTitle = this.item.itemTitle;\n    return icon && itemTitle ? itemTitle : icon;\n  }\n  ngAfterViewInit() {\n    const element = this.element.nativeElement;\n    const rtl = this.localisationService.rtl;\n    const hAlign = this.align.horizontal;\n    this.renderer.addClass(element, this.getTextDirectionClass(rtl, hAlign));\n  }\n  getTextDirectionClass(rtl, hAlign) {\n    const dir = rtl ? 'rtl' : 'ltr';\n    const align = hAlign === 'end' ? 'end' : 'start';\n    const directions = {\n      rtl: {\n        end: 'k-text-left',\n        start: 'k-text-right'\n      },\n      ltr: {\n        start: 'k-text-left',\n        end: 'k-text-right'\n      }\n    };\n    return directions[dir][align];\n  }\n}\nDialItemComponent.ɵfac = function DialItemComponent_Factory(t) {\n  return new (t || DialItemComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\nDialItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DialItemComponent,\n  selectors: [[\"\", \"kendoDialItem\", \"\"]],\n  hostVars: 9,\n  hostBindings: function DialItemComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.role)(\"aria-disabled\", ctx.disabledClass)(\"title\", ctx.title)(\"aria-label\", ctx.title)(\"data-fab-item-index\", ctx.indexAttr);\n      i0.ɵɵclassProp(\"k-fab-item\", ctx.hostClass)(\"k-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    cssClass: \"cssClass\",\n    cssStyle: \"cssStyle\",\n    isFocused: \"isFocused\",\n    index: \"index\",\n    item: \"item\",\n    dialItemTemplate: \"dialItemTemplate\",\n    align: \"align\"\n  },\n  attrs: _c12,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"k-fab-item-text\", 4, \"ngIf\"], [\"innerCssClass\", \"k-fab-item-icon\", 3, \"name\", \"customFontClass\", \"svgIcon\", 4, \"ngIf\"], [1, \"k-fab-item-text\"], [\"innerCssClass\", \"k-fab-item-icon\", 3, \"name\", \"customFontClass\", \"svgIcon\"]],\n  template: function DialItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DialItemComponent_0_Template, 1, 6, null, 0);\n      i0.ɵɵtemplate(1, DialItemComponent_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.dialItemTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dialItemTemplate);\n    }\n  },\n  dependencies: [i2.IconWrapperComponent, i3.NgIf, i3.NgTemplateOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialItemComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: '[kendoDialItem]',\n      template: `\n        <ng-template *ngIf=\"dialItemTemplate\"\n            [ngTemplateOutlet]=\"dialItemTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: item, index: index, isFocused: isFocused }\"\n        >\n        </ng-template>\n\n        <ng-container *ngIf=\"!dialItemTemplate\">\n            <span *ngIf=\"item.label\" class=\"k-fab-item-text\">{{ item.label }}</span>\n            <kendo-icon-wrapper\n                *ngIf=\"item.icon || item.iconClass || item.svgIcon\"\n                [name]=\"item.icon\"\n                innerCssClass=\"k-fab-item-icon\"\n                [customFontClass]=\"item.iconClass\"\n                [svgIcon]=\"item.svgIcon\"></kendo-icon-wrapper>\n        </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-fab-item']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }, {\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    title: [{\n      type: HostBinding,\n      args: ['attr.title']\n    }, {\n      type: HostBinding,\n      args: ['attr.aria-label']\n    }],\n    indexAttr: [{\n      type: HostBinding,\n      args: ['attr.data-fab-item-index']\n    }],\n    cssClass: [{\n      type: Input\n    }],\n    cssStyle: [{\n      type: Input\n    }],\n    isFocused: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    item: [{\n      type: Input\n    }],\n    dialItemTemplate: [{\n      type: Input\n    }],\n    align: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass DialListComponent {\n  constructor(focusService, cdr) {\n    this.focusService = focusService;\n    this.cdr = cdr;\n    this.hostClass = true;\n    this.subscriptions = new Subscription();\n    this.subscriptions.add(this.focusService.onFocus.subscribe(() => this.cdr.detectChanges()));\n  }\n  get bottomClass() {\n    return this.align.vertical === 'top' || this.align.vertical === 'middle';\n  }\n  get topClass() {\n    return this.align.vertical === 'bottom';\n  }\n  isFocused(index) {\n    return this.focusService.isFocused(index);\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\nDialListComponent.ɵfac = function DialListComponent_Factory(t) {\n  return new (t || DialListComponent)(i0.ɵɵdirectiveInject(FocusService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDialListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DialListComponent,\n  selectors: [[\"\", \"kendoDialList\", \"\"]],\n  hostVars: 6,\n  hostBindings: function DialListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-fab-items\", ctx.hostClass)(\"k-fab-items-bottom\", ctx.bottomClass)(\"k-fab-items-top\", ctx.topClass);\n    }\n  },\n  inputs: {\n    dialItems: \"dialItems\",\n    dialItemTemplate: \"dialItemTemplate\",\n    align: \"align\"\n  },\n  attrs: _c14,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"kendoButtonFocusable\", \"\", \"kendoDialItem\", \"\", 3, \"item\", \"index\", \"dialItemTemplate\", \"isFocused\", \"ngClass\", \"ngStyle\", \"align\"]],\n  template: function DialListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DialListComponent_ng_container_0_Template, 2, 7, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.dialItems);\n    }\n  },\n  dependencies: [DialItemComponent, i3.NgForOf, FocusableDirective, i3.NgClass, i3.NgStyle],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialListComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: '[kendoDialList]',\n      template: `\n        <ng-container *ngFor='let item of dialItems; let idx = index'>\n            <li\n                kendoButtonFocusable\n                kendoDialItem\n                [item]=\"dialItems[idx]\"\n                [index]=\"idx\"\n                [dialItemTemplate]=\"dialItemTemplate\"\n                [isFocused]=\"isFocused(idx)\"\n                [ngClass]='item.cssClass'\n                [ngStyle]='item.cssStyle'\n                [align]=\"align\"\n            >\n            </li>\n        </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FocusService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-fab-items']\n    }],\n    bottomClass: [{\n      type: HostBinding,\n      args: ['class.k-fab-items-bottom']\n    }],\n    topClass: [{\n      type: HostBinding,\n      args: ['class.k-fab-items-top']\n    }],\n    dialItems: [{\n      type: Input\n    }],\n    dialItemTemplate: [{\n      type: Input\n    }],\n    align: [{\n      type: Input\n    }]\n  });\n})();\nconst NAVIGATION_SETTINGS = {\n  useLeftRightArrows: false\n};\nconst NAVIGATION_SETTINGS_PROVIDER = {\n  provide: NAVIGATION_CONFIG,\n  useValue: NAVIGATION_SETTINGS\n};\nconst SIZE_CLASSES = {\n  small: 'k-fab-sm',\n  medium: 'k-fab-md',\n  large: 'k-fab-lg'\n};\nconst ROUNDED_CLASSES = {\n  small: 'k-rounded-sm',\n  medium: 'k-rounded-md',\n  large: 'k-rounded-lg',\n  full: 'k-rounded-full'\n};\nconst FILLMODE_CLASS = 'k-fab-solid';\nconst DEFAULT_DURATION = 180;\nconst DEFAULT_ITEM_GAP = 90;\nconst DEFAULT_OFFSET = '16px';\nconst DEFAULT_ROUNDED = 'full';\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_THEME_COLOR = 'primary';\n/**\n *\n * Represents the [Kendo UI FloatingActionButton component for Angular]({% slug overview_floatingactionbutton %}).\n * Used to specify the primary or the most common action in an application.\n *\n */\nclass FloatingActionButtonComponent {\n  constructor(renderer, element, focusService, navigationService, ngZone, popupService, builder, localizationService) {\n    this.renderer = renderer;\n    this.element = element;\n    this.focusService = focusService;\n    this.navigationService = navigationService;\n    this.ngZone = ngZone;\n    this.popupService = popupService;\n    this.builder = builder;\n    this.localizationService = localizationService;\n    /**\n     * Specifies the positionMode of the FloatingActionButton\n     * ([see example]({% slug positioning_floatingactionbutton %}#toc-positionMode)).\n     *\n     * * The possible values are:\n     * * `absolute`&mdash;Positions the FloatingActionButton absolutely to its first positioned parent element.\n     * * `fixed` (Default)&mdash;Positions the FloatingActionButton relative to the viewport. It always stays in the same place even if the page is scrolled.\n     */\n    this.positionMode = 'fixed';\n    /**\n     * Specifies the animation settings of the FloatingActionButton dial items.\n     * ([see example]({% slug dialitems_floatingactionbutton %}#toc-animation)).\n     *\n     * The possible values are:\n     * * Boolean\n     *    * (Default) `true`&mdash;Applies the default [`DialItemAnimation`]({% slug api_buttons_dialitemanimation %}) settings.\n     *    * `false`\n     * * `DialItemAnimation`\n     *    * `duration`&mdash;Specifies the animation duration in milliseconds for each dial item. Defaults to `180ms`.\n     *    * `gap`&mdash;Specifies the animation duration gap in milliseconds after each dial item is animated. Defaults to `90ms`.\n     */\n    this.dialItemAnimation = true;\n    /**\n     * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the FloatingActionButton.\n     */\n    this.tabIndex = 0;\n    /**\n     * Specifies the collection of the dial items that will be rendered in the FloatingActionButton popup.\n     */\n    this.dialItems = [];\n    /**\n     * Fires each time the FloatingActionButton gets blurred.\n     */\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time the FloatingActionButton gets focused.\n     */\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time a dial item is clicked.\n     */\n    this.dialItemClick = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel the event, the popup will remain closed\n     * ([more information and example]({% slug overview_floatingactionbutton %}#toc-events)).\n     */\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel the event, the popup will remain open\n     * ([more information and example]({% slug overview_floatingactionbutton %}#toc-events)).\n     */\n    this.close = new EventEmitter();\n    /**\n     * @hidden\n     */\n    this.id = `k-${guid()}`;\n    /**\n     * @hidden\n     */\n    this.dialListId = `k-dial-list-${guid()}`;\n    this._themeColor = DEFAULT_THEME_COLOR;\n    this._size = DEFAULT_SIZE;\n    this._rounded = DEFAULT_ROUNDED;\n    this._disabled = false;\n    this._align = {\n      horizontal: 'end',\n      vertical: 'bottom'\n    };\n    this._offset = {\n      x: DEFAULT_OFFSET,\n      y: DEFAULT_OFFSET\n    };\n    this.subscriptions = new Subscription();\n    this.rtl = false;\n    this.animationEnd = new EventEmitter();\n    this.initialSetup = true;\n    validatePackage(packageMetadata);\n    this.subscribeNavigationEvents();\n    this.subscriptions.add(this.localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.rtl = rtl;\n      this.direction = this.rtl ? 'rtl' : 'ltr';\n    }));\n  }\n  get fixedClass() {\n    return this.positionMode === 'fixed';\n  }\n  get absoluteClass() {\n    return this.positionMode === 'absolute';\n  }\n  /**\n   * Specifies the theme color of the FloatingActionButton\n   * ([see example]({% slug appearance_floatingactionbutton %}#toc-themeColor)).\n   * The theme color will be applied as background color of the component.\n   *\n   * The possible values are:\n   * * `primary` (Default)&mdash;Applies coloring based on the `primary` theme color.\n   * * `secondary`&mdash;Applies coloring based on the `secondary` theme color.\n   * * `tertiary`&mdash; Applies coloring based on the `tertiary` theme color.\n   * * `info`&mdash;Applies coloring based on the `info` theme color.\n   * * `success`&mdash; Applies coloring based on the `success` theme color.\n   * * `warning`&mdash; Applies coloring based on the `warning` theme color.\n   * * `error`&mdash; Applies coloring based on the `error` theme color.\n   * * `dark`&mdash; Applies coloring based on the `dark` theme color.\n   * * `light`&mdash; Applies coloring based on the `light` theme color.\n   * * `inverse`&mdash; Applies coloring based on the `inverse` theme color.\n   * * `none`&mdash; Removes the built in theme color.\n   */\n  set themeColor(themeColor) {\n    const newThemeColor = themeColor ? themeColor : DEFAULT_THEME_COLOR;\n    this.handleClasses(newThemeColor, 'themeColor');\n    this._themeColor = newThemeColor;\n  }\n  get themeColor() {\n    return this._themeColor;\n  }\n  /**\n   * Specifies the size of the FloatingActionButton\n   * ([see example]({% slug appearance_floatingactionbutton %}#toc-size)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (Default)\n   * * `large`\n   * * `none`\n   */\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the FloatingActionButton.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium`\n   * * `large`\n   * * `full` (default)\n   * * `none`\n   */\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * Specifies whether the FloatingActionButton is disabled.\n   */\n  set disabled(disabled) {\n    this._disabled = disabled;\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Specifies the horizontal and vertical alignment of the FloatingActionButton\n   * ([see example]({% slug positioning_floatingactionbutton %}#toc-align)).\n   *\n   * The possible values are:\n   * * `{ horizontal: 'start'|'center'|'end', vertical: 'top'|'middle'|'bottom' }`\n   *\n   * The default value is:\n   * * `{ horizontal: 'end', vertical: 'bottom' }`\n   *\n   */\n  set align(align) {\n    this._align = Object.assign(this._align, align);\n  }\n  get align() {\n    return this._align;\n  }\n  /**\n   * Specifies the horizontal and vertical offset position of the FloatingActionButton\n   * ([see example]({% slug positioning_floatingactionbutton %}#toc-offset)).\n   *\n   * * The default value is:\n   * * `{ x: '16px', y: '16px' }`\n   */\n  set offset(offset) {\n    this._offset = Object.assign(this._offset, offset);\n    this.offsetStyles();\n  }\n  get offset() {\n    return this._offset;\n  }\n  /**\n   * @hidden\n   */\n  get componentTabIndex() {\n    return this.disabled ? -1 : this.tabIndex;\n  }\n  ngAfterViewInit() {\n    ['size', 'rounded', 'themeColor'].forEach(option => this.handleClasses(this[option], option));\n    this.renderer.addClass(this.element.nativeElement, this.alignClass());\n    this.offsetStyles();\n    this.initialSetup = false;\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  /**\n   * Indicates whether the FloatingActionButton is currently open.\n   */\n  get isOpen() {\n    return isPresent(this.popupRef);\n  }\n  /**\n   * Focuses the FloatingActionButton.\n   */\n  focus() {\n    if (isDocumentAvailable()) {\n      this.button.nativeElement.focus();\n    }\n  }\n  /**\n   * Blurs the FloatingActionButton.\n   */\n  blur() {\n    if (isDocumentAvailable()) {\n      this.button.nativeElement.blur();\n    }\n  }\n  /**\n   * Toggles the visibility of the FloatingActionButton dial items popup.\n   *\n   * If you use the `toggleDial` method to open or close the dial items,\n   * the `open` and `close` events do not fire ([more information and examples]({% slug openstate_floatingactionbutton %}#toc-events)).\n   *\n   * @param open - The state of dial items popup.\n   */\n  toggleDial(open) {\n    if (this.disabled || !this.hasDialItems) {\n      return;\n    }\n    const shouldOpen = isPresent(open) ? open : !this.isOpen;\n    if (this.disabled || shouldOpen === this.isOpen) {\n      return;\n    }\n    if (shouldOpen) {\n      setTimeout(() => this.openDial());\n    } else {\n      this.closeDial();\n    }\n  }\n  /**\n   * @hidden\n   */\n  get ariaExpanded() {\n    return this.hasDialItems ? this.isOpen : null;\n  }\n  /**\n   * @hidden\n   */\n  get ariaHasPopup() {\n    return this.hasDialItems ? 'menu' : null;\n  }\n  /**\n   * @hidden\n   */\n  get ariaControls() {\n    return this.hasDialItems ? this.dialListId : null;\n  }\n  /**\n   * @hidden\n   */\n  get iconClasses() {\n    const classes = [];\n    if (this.iconClass) {\n      classes.push(`${this.iconClass}`);\n    }\n    if (this.icon) {\n      classes.push(`k-fab-icon k-icon k-i-${this.icon}`);\n    }\n    return classes;\n  }\n  /**\n   * @hidden\n   */\n  clickHandler() {\n    if (this.disabled || !this.hasDialItems) {\n      return;\n    }\n    this.ngZone.run(() => {\n      const shouldOpen = !this.isOpen;\n      this.toggleDialWithEvents(shouldOpen);\n    });\n  }\n  /**\n   * @hidden\n   */\n  keyDownHandler(event) {\n    this.keyHandler(event);\n  }\n  /**\n   * @hidden\n   */\n  keyHandler(event, keyEvent) {\n    if (this.disabled) {\n      return;\n    }\n    const focused = this.focusService.focused || 0;\n    const keyCode = event.keyCode;\n    const action = this.navigationService.process({\n      altKey: event.altKey,\n      current: focused,\n      keyCode,\n      keyEvent: keyEvent,\n      max: this.dialItems ? this.dialItems.length - 1 : 0,\n      min: 0,\n      flipNavigation: this.align.vertical === 'bottom'\n    });\n    if (action !== NavigationAction.Undefined && action !== NavigationAction.Tab) {\n      event.preventDefault();\n    }\n    if (action === NavigationAction.EnterUp && !this.hasDialItems) {\n      this.button.nativeElement.click();\n    } else if (action === NavigationAction.Open || action === NavigationAction.Close) {\n      const toggleDial = action === NavigationAction.Open;\n      this.ngZone.run(() => {\n        this.toggleDialWithEvents(toggleDial);\n      });\n    }\n  }\n  /**\n   * @hidden\n   */\n  onItemClick(event) {\n    const item = closest(event.target, '.k-fab-item');\n    if (!item) {\n      return;\n    }\n    const index = parseInt(item.getAttribute('data-fab-item-index'));\n    this.emitItemClick(index);\n  }\n  /**\n   * @hidden\n   */\n  focusHandler() {\n    if (!this.disabled) {\n      this.onFocus.emit();\n    }\n  }\n  /**\n   * @hidden\n   */\n  blurHandler() {\n    this.onBlur.emit();\n    this.toggleDialWithEvents(false);\n  }\n  handleClasses(inputValue, input) {\n    if (isPresent(this.button) && (this[input] !== inputValue || this.initialSetup)) {\n      const button = this.button.nativeElement;\n      const classesToRemove = {\n        themeColor: `${FILLMODE_CLASS}-${this.themeColor}`,\n        size: SIZE_CLASSES[this.size],\n        rounded: ROUNDED_CLASSES[this.rounded]\n      };\n      const classesToAdd = {\n        themeColor: inputValue !== 'none' ? `${FILLMODE_CLASS}-${inputValue}` : '',\n        size: SIZE_CLASSES[inputValue],\n        rounded: ROUNDED_CLASSES[inputValue]\n      };\n      this.renderer.removeClass(button, classesToRemove[input]);\n      if (classesToAdd[input]) {\n        this.renderer.addClass(button, classesToAdd[input]);\n      }\n    }\n  }\n  onEnterPressed() {\n    const index = this.focusService.focused;\n    this.emitItemClick(index);\n  }\n  emitItemClick(index) {\n    const item = this.dialItems[index];\n    if (item && !item.disabled) {\n      const clickEventArgs = {\n        item: item,\n        index: index\n      };\n      this.dialItemClick.emit(clickEventArgs);\n      this.toggleDialWithEvents(false);\n      this.focusService.focused = index;\n    }\n  }\n  subscribeNavigationEvents() {\n    this.subscriptions.add(this.navigationService.navigate.subscribe(this.onArrowKeyNavigate.bind(this)));\n    this.subscriptions.add(this.navigationService.enter.subscribe(this.onNavigationEnterPress.bind(this)));\n    this.subscriptions.add(merge(this.navigationService.close, this.navigationService.esc).subscribe(this.onNavigationClose.bind(this)));\n  }\n  onArrowKeyNavigate({\n    index\n  }) {\n    this.focusService.focus(index);\n  }\n  onNavigationEnterPress() {\n    this.ngZone.run(() => {\n      if (this.isOpen) {\n        const focusedIndex = this.focusService.focused;\n        const focusedItem = this.dialItems[focusedIndex];\n        if (focusedItem && focusedItem.disabled) {\n          return;\n        }\n        if (isPresent(focusedIndex) && focusedIndex !== -1) {\n          this.onEnterPressed();\n          return;\n        }\n      }\n      if (!this.isOpen && isDocumentAvailable()) {\n        this.toggleDialWithEvents(true);\n        this.button.nativeElement.focus();\n      }\n    });\n  }\n  onNavigationClose() {\n    if (this.isOpen) {\n      this.ngZone.run(() => {\n        this.toggleDialWithEvents(false);\n        if (isDocumentAvailable()) {\n          this.button.nativeElement.focus();\n        }\n      });\n    }\n  }\n  alignClass() {\n    return `k-pos-${this.align.vertical}-${this.align.horizontal}`;\n  }\n  toggleDialWithEvents(open) {\n    if (open === this.isOpen) {\n      return;\n    }\n    const event = new PreventableEvent();\n    if (open) {\n      this.open.emit(event);\n    } else {\n      this.close.emit(event);\n    }\n    if (event.isDefaultPrevented()) {\n      return;\n    }\n    if (open) {\n      this.openDial();\n    } else {\n      this.closeDial();\n    }\n  }\n  openPopup() {\n    if (this.isOpen) {\n      return;\n    }\n    const isIconFab = this.icon && !this.text;\n    const rtl = this.rtl;\n    const align = this.align;\n    this.popupRef = this.popupService.open({\n      anchor: this.element.nativeElement,\n      animate: false,\n      content: this.popupTemplate,\n      anchorAlign: getAnchorAlign(align, rtl),\n      popupAlign: getPopupAlign(align, rtl),\n      popupClass: 'k-fab-popup k-popup-transparent'\n    });\n    const popupElement = this.popupRef.popupElement;\n    this.renderer.setStyle(popupElement, 'box-shadow', 'none');\n    if (isIconFab) {\n      this.subscriptions.add(this.popupRef.popupOpen.subscribe(() => this.positionPopup()));\n    }\n    this.ngZone.runOutsideAngular(() => {\n      this.popupMouseDownListener = this.renderer.listen(popupElement, 'mousedown', event => {\n        event.preventDefault();\n      });\n    });\n    this.popupRef.popupAnchorViewportLeave.subscribe(() => this.toggleDialWithEvents(false));\n  }\n  closePopup() {\n    if (this.isOpen) {\n      if (this.popupMouseDownListener) {\n        this.popupMouseDownListener();\n      }\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n  }\n  openDial() {\n    this.openPopup();\n    this.focusService.focus(0);\n    if (this.dialItemAnimation && this.isValidAnimation()) {\n      this.playAnimation(true);\n    }\n    this.renderer.setAttribute(this.button.nativeElement, 'aria-expanded', 'true');\n  }\n  closeDial() {\n    if (this.dialItemAnimation && this.isValidAnimation()) {\n      this.playAnimation(false);\n      this.animationEnd.pipe(take(1)).subscribe(() => this.closePopup());\n    } else {\n      this.closePopup();\n    }\n    this.renderer.setAttribute(this.button.nativeElement, 'aria-expanded', 'false');\n  }\n  isValidAnimation() {\n    const animation = this.dialItemAnimation;\n    if (typeof animation !== 'boolean') {\n      return animation.duration !== 0;\n    }\n    return true;\n  }\n  positionPopup() {\n    if (this.dialItemTemplate) {\n      return;\n    }\n    if (!this.popupRef) {\n      return;\n    }\n    const fab = this.element.nativeElement;\n    const fabWidth = fab.getBoundingClientRect().width;\n    const popupEl = this.popupRef.popupElement;\n    const icon = popupEl.querySelector('.k-fab-item-icon');\n    if (!icon) {\n      return;\n    }\n    const iconWidth = icon.getBoundingClientRect().width;\n    const left = fabWidth / 2 - iconWidth / 2;\n    const popupLeft = popupEl.getBoundingClientRect().left;\n    const isEndAlign = this.align.horizontal === 'end';\n    const leftValue = isEndAlign ? popupLeft - left : left + popupLeft;\n    const rtlLeftValue = isEndAlign ? left + popupLeft : popupLeft - left;\n    popupEl.style.left = this.rtl ? `${rtlLeftValue}px` : `${leftValue}px`;\n  }\n  offsetStyles() {\n    const hostElement = this.element.nativeElement;\n    this.renderer.setStyle(hostElement, this.horizontalPosition, this.horizontalOffset);\n    this.renderer.setStyle(hostElement, this.verticalPosition, this.verticalOffset);\n  }\n  get hasDialItems() {\n    return isPresent(this.dialItems) && this.dialItems.length !== 0;\n  }\n  /**\n   * Gets the CSS prop name of the selected vertical position (`top`/`bottom`);\n   */\n  get verticalPosition() {\n    return {\n      top: 'top',\n      middle: 'top',\n      bottom: 'bottom'\n    }[this.align.vertical];\n  }\n  /**\n   * Gets the offset according to the selected vertical position.\n   */\n  get verticalOffset() {\n    if (this.align.vertical === 'middle') {\n      return this.offset.y === DEFAULT_OFFSET ? '50%' : `calc(50% + ${this.offset.y})`;\n    }\n    return this.offset.y;\n  }\n  /**\n   * Gets the CSS prop name of the selected horizontal position (`left`/`right`);\n   */\n  get horizontalPosition() {\n    const {\n      horizontal\n    } = this.align;\n    return {\n      end: this.rtl ? 'left' : 'right',\n      center: 'left',\n      start: this.rtl ? 'right' : 'left'\n    }[horizontal];\n  }\n  /**\n   * Gets the offset according to the selected horizontal position.\n   */\n  get horizontalOffset() {\n    if (this.align.horizontal === 'center') {\n      return this.offset.x === DEFAULT_OFFSET ? '50%' : `calc(50% + ${this.offset.x})`;\n    }\n    return this.offset.x;\n  }\n  playerFor(element, animation) {\n    const factory = this.builder.build(animation);\n    return factory.create(element);\n  }\n  playAnimation(open) {\n    const durationSettings = this.durationSettings();\n    const animationSettings = {\n      duration: durationSettings.duration,\n      gap: durationSettings.gap,\n      align: this.align\n    };\n    const animation = open ? openAnimation(animationSettings) : closeAnimation(animationSettings);\n    let player = this.playerFor(this.popupRef.popupElement, animation);\n    player.play();\n    player.onDone(() => {\n      if (player) {\n        this.animationEnd.emit();\n        player.destroy();\n        player = null;\n      }\n    });\n  }\n  durationSettings() {\n    return {\n      duration: this.animationDuration(),\n      gap: this.animationGap()\n    };\n  }\n  animationGap() {\n    const animation = this.dialItemAnimation;\n    if (typeof animation !== 'boolean' && isPresent(animation.gap)) {\n      return animation.gap;\n    }\n    return DEFAULT_ITEM_GAP;\n  }\n  animationDuration() {\n    const animation = this.dialItemAnimation;\n    if (typeof animation !== 'boolean' && isPresent(animation.duration)) {\n      return animation.duration;\n    }\n    return DEFAULT_DURATION;\n  }\n}\nFloatingActionButtonComponent.ɵfac = function FloatingActionButtonComponent_Factory(t) {\n  return new (t || FloatingActionButtonComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3$1.PopupService), i0.ɵɵdirectiveInject(i4.AnimationBuilder), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\nFloatingActionButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FloatingActionButtonComponent,\n  selectors: [[\"kendo-floatingactionbutton\"]],\n  contentQueries: function FloatingActionButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DialItemTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FloatingActionButtonTemplateDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialItemTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fabTemplate = _t.first);\n    }\n  },\n  viewQuery: function FloatingActionButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c7, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n    }\n  },\n  hostVars: 5,\n  hostBindings: function FloatingActionButtonComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-pos-fixed\", ctx.fixedClass)(\"k-pos-absolute\", ctx.absoluteClass);\n    }\n  },\n  inputs: {\n    themeColor: \"themeColor\",\n    size: \"size\",\n    rounded: \"rounded\",\n    disabled: \"disabled\",\n    align: \"align\",\n    offset: \"offset\",\n    positionMode: \"positionMode\",\n    icon: \"icon\",\n    svgIcon: \"svgIcon\",\n    iconClass: \"iconClass\",\n    buttonClass: \"buttonClass\",\n    dialClass: \"dialClass\",\n    text: \"text\",\n    dialItemAnimation: \"dialItemAnimation\",\n    tabIndex: \"tabIndex\",\n    dialItems: \"dialItems\"\n  },\n  outputs: {\n    onBlur: \"blur\",\n    onFocus: \"focus\",\n    dialItemClick: \"dialItemClick\",\n    open: \"open\",\n    close: \"close\"\n  },\n  features: [i0.ɵɵProvidersFeature([FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.floatingactionbutton'\n  }])],\n  decls: 6,\n  vars: 17,\n  consts: [[\"type\", \"button\", 1, \"k-fab\", \"k-fab-solid\", 3, \"tabIndex\", \"ngClass\", \"disabled\", \"kendoEventsOutsideAngular\", \"scope\", \"focus\", \"blur\"], [\"button\", \"\"], [4, \"ngIf\"], [\"popupTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [\"innerCssClass\", \"k-fab-icon\", 3, \"name\", \"customFontClass\", \"svgIcon\", 4, \"ngIf\"], [\"class\", \"k-fab-text\", 4, \"ngIf\"], [\"innerCssClass\", \"k-fab-icon\", 3, \"name\", \"customFontClass\", \"svgIcon\"], [1, \"k-fab-text\"], [\"kendoDialList\", \"\", \"role\", \"menu\", 3, \"id\", \"ngClass\", \"dialItems\", \"dialItemTemplate\", \"align\", \"click\"]],\n  template: function FloatingActionButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"focus\", function FloatingActionButtonComponent_Template_button_focus_0_listener() {\n        return ctx.focusHandler();\n      })(\"blur\", function FloatingActionButtonComponent_Template_button_blur_0_listener() {\n        return ctx.blurHandler();\n      });\n      i0.ɵɵtemplate(2, FloatingActionButtonComponent_2_Template, 1, 1, null, 2);\n      i0.ɵɵtemplate(3, FloatingActionButtonComponent_ng_container_3_Template, 3, 2, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FloatingActionButtonComponent_ng_template_4_Template, 1, 6, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-disabled\", ctx.disabled);\n      i0.ɵɵproperty(\"tabIndex\", ctx.componentTabIndex)(\"ngClass\", ctx.buttonClass)(\"disabled\", ctx.disabled)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(14, _c15, ctx.keyDownHandler, ctx.clickHandler))(\"scope\", ctx);\n      i0.ɵɵattribute(\"id\", ctx.id)(\"aria-disabled\", ctx.disabled)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-haspopup\", ctx.ariaHasPopup)(\"aria-controls\", ctx.ariaControls);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.fabTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.fabTemplate);\n    }\n  },\n  dependencies: [i2.IconWrapperComponent, DialListComponent, i3.NgClass, i9.EventsOutsideAngularDirective, i3.NgIf, i3.NgTemplateOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatingActionButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-floatingactionbutton',\n      providers: [FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.floatingactionbutton'\n      }],\n      template: `\n        <button\n            #button\n            [attr.id]=\"id\"\n            [tabIndex]=\"componentTabIndex\"\n            type=\"button\"\n            class=\"k-fab k-fab-solid\"\n            [class.k-disabled]=\"disabled\"\n            [ngClass]=\"buttonClass\"\n            [disabled]=\"disabled\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"ariaExpanded\"\n            [attr.aria-haspopup]=\"ariaHasPopup\"\n            [attr.aria-controls]=\"ariaControls\"\n            (focus)=\"focusHandler()\"\n            (blur)=\"blurHandler()\"\n            [kendoEventsOutsideAngular]=\"{\n                keydown: keyDownHandler,\n                click: clickHandler\n            }\"\n            [scope]=\"this\"\n        >\n            <ng-template *ngIf=\"fabTemplate\"\n                [ngTemplateOutlet]=\"fabTemplate?.templateRef\"\n            >\n            </ng-template>\n\n            <ng-container *ngIf=\"!fabTemplate\">\n                <kendo-icon-wrapper\n                    *ngIf=\"icon || iconClass || svgIcon\"\n                    [name]=\"icon\"\n                    innerCssClass=\"k-fab-icon\"\n                    [customFontClass]=\"iconClass\"\n                    [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n                <span *ngIf=\"text\" class=\"k-fab-text\">{{ text }}</span>\n            </ng-container>\n        </button>\n\n        <ng-template #popupTemplate>\n            <ul\n                kendoDialList\n                role=\"menu\"\n                [id]=\"dialListId\"\n                [ngClass]=\"dialClass\"\n                [dialItems]=\"dialItems\"\n                [dialItemTemplate]='dialItemTemplate?.templateRef'\n                [align]=\"align\"\n                [attr.aria-labelledby]=\"id\"\n                (click)=\"onItemClick($event)\"\n            >\n            </ul>\n        </ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: FocusService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3$1.PopupService\n    }, {\n      type: i4.AnimationBuilder\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    fixedClass: [{\n      type: HostBinding,\n      args: ['class.k-pos-fixed']\n    }],\n    absoluteClass: [{\n      type: HostBinding,\n      args: ['class.k-pos-absolute']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    button: [{\n      type: ViewChild,\n      args: ['button', {\n        static: true\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        static: true\n      }]\n    }],\n    dialItemTemplate: [{\n      type: ContentChild,\n      args: [DialItemTemplateDirective, {\n        static: false\n      }]\n    }],\n    fabTemplate: [{\n      type: ContentChild,\n      args: [FloatingActionButtonTemplateDirective, {\n        static: false\n      }]\n    }],\n    themeColor: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    align: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    positionMode: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    svgIcon: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    buttonClass: [{\n      type: Input\n    }],\n    dialClass: [{\n      type: Input\n    }],\n    text: [{\n      type: Input\n    }],\n    dialItemAnimation: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    dialItems: [{\n      type: Input\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    dialItemClick: [{\n      type: Output,\n      args: ['dialItemClick']\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }]\n  });\n})();\nconst exportedModules = [FloatingActionButtonComponent, DialItemTemplateDirective, FloatingActionButtonTemplateDirective];\nconst declarations = [...exportedModules, DialListComponent, DialItemComponent];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the FloatingActionButton component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the FloatingActionButton module\n * import { FloatingActionButtonModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, FloatingActionButtonModule], // import FloatingActionButton module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * ```\n */\nclass FloatingActionButtonModule {}\nFloatingActionButtonModule.ɵfac = function FloatingActionButtonModule_Factory(t) {\n  return new (t || FloatingActionButtonModule)();\n};\nFloatingActionButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FloatingActionButtonModule\n});\nFloatingActionButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, PopupModule, ListModule, EventsModule, IconsModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatingActionButtonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations],\n      exports: [exportedModules],\n      imports: [CommonModule, PopupModule, ListModule, EventsModule, IconsModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the Buttons components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Buttons module\n * import { ButtonsModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ButtonsModule], // import Buttons module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ButtonsModule {}\nButtonsModule.ɵfac = function ButtonsModule_Factory(t) {\n  return new (t || ButtonsModule)();\n};\nButtonsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ButtonsModule\n});\nButtonsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [ButtonGroupModule, ButtonModule, SplitButtonModule, DropDownButtonModule, ChipModule, FloatingActionButtonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ButtonGroupModule, ButtonModule, SplitButtonModule, DropDownButtonModule, ChipModule, FloatingActionButtonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ButtonComponent as Button, ButtonComponent, ButtonComponent as ButtonDirective, ButtonGroupComponent as ButtonGroup, ButtonGroupComponent, ButtonGroupModule, ButtonItemTemplateDirective, ButtonModule, ButtonsModule, ChipComponent, ChipListComponent, ChipModule, DialItemTemplateDirective, DropDownButtonComponent as DropDownButton, DropDownButtonComponent, DropDownButtonModule, FloatingActionButtonComponent, FloatingActionButtonModule, FloatingActionButtonTemplateDirective, FocusableDirective, ListComponent, ListModule, LocalizedSplitButtonMessagesDirective, PreventableEvent, SplitButtonComponent as SplitButton, SplitButtonComponent, SplitButtonCustomMessagesComponent, SplitButtonModule, TemplateContextDirective };","map":{"version":3,"names":["i0","Injectable","EventEmitter","isDevMode","Component","Optional","Input","Output","HostBinding","HostListener","ContentChildren","NgModule","Directive","InjectionToken","Inject","forwardRef","ElementRef","ViewContainerRef","ContentChild","ViewChild","Subject","Subscription","fromEvent","merge","i9","isDocumentAvailable","isFirefox","Keys","isSafari","isChanged","hasObservers","guid","anyChanged","EventsModule","i1","LocalizationService","L10N_PREFIX","ComponentMessages","validatePackage","i2","IconsModule","i3","CommonModule","filter","tap","take","i3$1","PopupModule","caretAltDownIcon","xCircleIcon","i4","sequence","query","style","stagger","animate","KendoButtonService","constructor","buttonClicked","buttonClicked$","asObservable","click","button","next","ɵfac","ɵprov","type","packageMetadata","name","productName","productCodes","publishDate","version","licensingDocsUrl","resolvedPromise","Promise","resolve","isPresent","value","undefined","tick","f","then","isDocumentNode","container","nodeType","closest","element","selector","matches","Element","prototype","el","sel","msMatchesSelector","node","parentNode","replaceMessagePlaceholder","message","replace","RegExp","SIZES","small","medium","large","ROUNDNESS","full","getStylingClasses","componentType","stylingOption","previousValue","newValue","toRemove","toAdd","getThemeColorClasses","prevFillMode","fillMode","SPAN_TAG_NAME","BUTTON_TAG_NAME","KENDO_BUTTON_TAG_NAME","DEFAULT_ROUNDED$3","DEFAULT_SIZE$2","DEFAULT_THEME_COLOR$2","DEFAULT_FILL_MODE$3","ButtonComponent","renderer","service","localization","ngZone","toggleable","role","selectedChange","isDisabled","_size","_rounded","_fillMode","_themeColor","_focused","subs","direction","rtl","add","changes","subscribe","nativeElement","togglable","selected","_selected","tabIndex","index","iconClass","icon","svgIcon","Error","_iconClass","_icon","disabled","navigator","userAgent","blur","setProperty","size","newSize","handleClasses","rounded","newRounded","newFillMode","themeColor","newThemeColor","handleThemeColor","_svgIcon","isFocused","toggleClass","classButton","isToggleable","iconButtonClass","hasIcon","imageUrl","hasText","roleSetter","classDisabled","classActive","getDirection","onFocus","onBlur","primary","look","ngOnInit","elementTagName","tagName","isSpanOrKendoButton","hasAttribute","toggleAriaPressed","setAttribute","runOutsideAngular","listen","_onButtonClick","bind","event","isSpaceOrEnter","keyCode","Space","Enter","run","emit","isButton","isBrowserSafari","preventDefault","focus","ngOnChanges","change","ngAfterViewInit","stylingOptions","forEach","input","ngOnDestroy","unsubscribe","textContent","trim","length","attribute","removeAttribute","setSelected","changed","toString","shouldSet","className","addClass","removeClass","elem","classes","removeFillMode","addFillMode","themeColorClass","Renderer2","NgZone","ɵcmp","provide","useValue","IconWrapperComponent","NgIf","NgClass","args","exportAs","providers","template","decorators","PreventableEvent","prevented","isDefaultPrevented","tabindex","ButtonGroupComponent","selection","navigable","navigate","_tabIndex","currentTabIndex","focusHandler","focusedIndex","buttons","toArray","findIndex","current","_current","i","wrapperClass","disabledClass","stretchedClass","width","dir","ariaDisabled","wrapperWidth","wrapperTabIndex","newSelectionValue","isSelectionSingle","deactivate","defocus","handleSubs","navigateFocus","relatedTarget","pipe","currentValue","setButtonsTabIndex","ngAfterContentInit","ngAfterViewChecked","first","last","ngAfterContentChecked","verifySettings","firstIndex","lastIndex","eventArgs","ArrowRight","ArrowLeft","activate","eventName","predicate","handler","ButtonModule","ɵmod","ɵinj","declarations","imports","exports","ButtonGroupModule","ButtonItemTemplateDirective","templateRef","TemplateRef","ɵdir","FocusService","focused","resetFocus","FocusableDirective","focusService","elementRef","subscribeEvents","TemplateContextDirective","viewContainerRef","templateContext","context","insertedViewRef","remove","indexOf","createEmbeddedView","ListComponent","onItemClick","onItemBlur","sizeClass","getText","dataItem","textField","text","getIconClasses","onClick","NgForOf","data","itemTemplate","EXPORTED_DIRECTIVES","ListModule","KeyEvents","NavigationAction","NAVIGATION_CONFIG","NavigationService","config","open","close","enter","enterpress","enterup","tab","esc","useLeftRightArrows","process","keyEvent","action","Undefined","keyup","isEnterOrSpace","EnterUp","altKey","ArrowDown","Open","ArrowUp","Close","Escape","Esc","Tab","step","flipNavigation","start","min","max","end","Navigate","Home","End","toLowerCase","target","PopupContainerService","ListButton","navigationService","wrapperRef","_zone","popupService","elRef","cdr","containerService","_open","_disabled","_active","_popupSettings","popupClass","listId","_isFocused","popupSubs","isClosePrevented","wrapper","openState","componentTabIndex","appendTo","popupSettings","settings","Object","assign","anchorAlign","align","horizontal","vertical","popupAlign","popupRef","popup","instance","newSettings","popupClasses","push","join","isOpen","togglePopupVisibility","_toggle","emitItemClickHandler","focusButton","destroyPopup","subscribeListItemFocusEvent","subscribeComponentBlurredEvent","subscribeNavigationEvents","handleTab","document","wrapperContains","blurWrapper","onArrowKeyNavigate","onNavigationEnterUp","onNavigationOpen","onNavigationClose","toggle","keyDownHandler","isHost","keyHandler","keyUpHandler","eventData","stopImmediatePropagation","_data","_itemClick","focusWrapper","contains","_blur","markForCheck","emitEvent","createPopup","anchor","content","popupAnchorViewportLeave","PopupService","ChangeDetectorRef","buttonClass","Messages","splitButtonLabel","LocalizedSplitButtonMessagesDirective","useExisting","NAVIGATION_SETTINGS$2","NAVIGATION_SETTINGS_PROVIDER$2","DEFAULT_ROUNDED$2","DEFAULT_FILL_MODE$2","SplitButtonComponent","zone","arrowButtonIcon","arrowButtonSvgIcon","buttonClick","itemClick","activeArrow","buttonText","arrowButtonClicked","hasContent","childElementCount","active","activeElement","widgetClasses","ariaLabel","localizationMsg","get","onButtonFocus","relatedTargetInList","onArrowButtonClick","toggleButtonActiveState","enable","toggleArrowButtonActiveState","onButtonClick","onButtonBlur","keydown","containerRef","popupTemplate","updateButtonText","hasOwnProperty","toggleButtonIconClass","popupElement","isIconButton","hasTextContent","innerText","split","setTimeout","classList","arrowButtonClass","read","arrowButton","SplitButtonCustomMessagesComponent","override","SplitButtonModule","NAVIGATION_SETTINGS$1","NAVIGATION_SETTINGS_PROVIDER$1","DEFAULT_FILL_MODE$1","DropDownButtonComponent","buttonId","mousedown","mouseup","openPopup","handleFocus","buttonList","DropDownButtonModule","DEFAULT_SIZE$1","DEFAULT_ROUNDED$1","DEFAULT_THEME_COLOR$1","DEFAULT_FILL_MODE","ChipComponent","localizationService","removable","contentClick","hostClass","defaultRemoveIcon","hasIconClass","Boolean","avatarClass","selectedClass","focusedClass","hasAriaSelected","chip","attachElementEventHandlers","kendoIconClass","verifyIconSettings","customIconClass","chipAvatarClass","removeIconClass","removeIcon","onRemoveClick","e","sender","originalEvent","isRemoveClicked","iconsToCheck","isDeleteOrBackspace","Delete","Backspace","label","removeSvgIcon","ChipListComponent","orientation","_navigable","currentActiveIndex","sizeValue","single","multiple","$event","clickedChip","chips","find","removeEventArgs","removedChip","setSelection","c","dynamicRTLSubscription","stylingInputs","updateChips","selectedChips","reduce","acc","cur","idx","concat","clearSelection","chipEl","chiplist","isLeftArrow","isRightArrow","handleArrowKeys","directionDelta","normalizeActiveIndex","Math","exportedModules$1","declarations$1","ChipModule","getAnchorAlign","fabAlign","getPopupAlign","openAnimation","animationSettings","isBottom","duration","gap","opacity","transform","optional","closeAnimation","DialItemTemplateDirective","FloatingActionButtonTemplateDirective","DialItemComponent","localisationService","item","title","itemTitle","indexAttr","iconClasses","hAlign","getTextDirectionClass","directions","ltr","NgTemplateOutlet","cssClass","cssStyle","dialItemTemplate","DialListComponent","subscriptions","detectChanges","bottomClass","topClass","NgStyle","dialItems","NAVIGATION_SETTINGS","NAVIGATION_SETTINGS_PROVIDER","SIZE_CLASSES","ROUNDED_CLASSES","FILLMODE_CLASS","DEFAULT_DURATION","DEFAULT_ITEM_GAP","DEFAULT_OFFSET","DEFAULT_ROUNDED","DEFAULT_SIZE","DEFAULT_THEME_COLOR","FloatingActionButtonComponent","builder","positionMode","dialItemAnimation","dialItemClick","id","dialListId","_align","_offset","x","y","animationEnd","initialSetup","fixedClass","absoluteClass","offset","offsetStyles","option","alignClass","toggleDial","hasDialItems","shouldOpen","openDial","closeDial","ariaExpanded","ariaHasPopup","ariaControls","clickHandler","toggleDialWithEvents","parseInt","getAttribute","emitItemClick","blurHandler","inputValue","classesToRemove","classesToAdd","onEnterPressed","clickEventArgs","onNavigationEnterPress","focusedItem","isIconFab","setStyle","popupOpen","positionPopup","popupMouseDownListener","closePopup","isValidAnimation","playAnimation","animation","fab","fabWidth","getBoundingClientRect","popupEl","querySelector","iconWidth","left","popupLeft","isEndAlign","leftValue","rtlLeftValue","hostElement","horizontalPosition","horizontalOffset","verticalPosition","verticalOffset","top","middle","bottom","center","playerFor","factory","build","create","durationSettings","player","play","onDone","destroy","animationDuration","animationGap","AnimationBuilder","EventsOutsideAngularDirective","static","fabTemplate","dialClass","exportedModules","FloatingActionButtonModule","ButtonsModule","Button","ButtonDirective","ButtonGroup","DropDownButton","SplitButton"],"sources":["D:/Work/TestTask/TestTask/ClientApp/node_modules/@progress/kendo-angular-buttons/fesm2020/progress-kendo-angular-buttons.mjs"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2023 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, isDevMode, Component, Optional, Input, Output, HostBinding, HostListener, ContentChildren, NgModule, Directive, InjectionToken, Inject, forwardRef, ElementRef, ViewContainerRef, ContentChild, ViewChild } from '@angular/core';\nimport { Subject, Subscription, fromEvent, merge } from 'rxjs';\nimport * as i9 from '@progress/kendo-angular-common';\nimport { isDocumentAvailable, isFirefox, Keys, isSafari, isChanged, hasObservers, guid, anyChanged, EventsModule } from '@progress/kendo-angular-common';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { LocalizationService, L10N_PREFIX, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i2 from '@progress/kendo-angular-icons';\nimport { IconsModule } from '@progress/kendo-angular-icons';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { filter, tap, take } from 'rxjs/operators';\nimport * as i3$1 from '@progress/kendo-angular-popup';\nimport { PopupModule } from '@progress/kendo-angular-popup';\nimport { caretAltDownIcon, xCircleIcon } from '@progress/kendo-svg-icons';\nimport * as i4 from '@angular/animations';\nimport { sequence, query, style, stagger, animate } from '@angular/animations';\n\n/**\n * @hidden\n */\nclass KendoButtonService {\n    constructor() {\n        this.buttonClicked = new Subject();\n        this.buttonClicked$ = this.buttonClicked.asObservable();\n    }\n    click(button) {\n        this.buttonClicked.next(button);\n    }\n}\nKendoButtonService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: KendoButtonService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nKendoButtonService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: KendoButtonService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: KendoButtonService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-buttons',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1694532892,\n    version: '13.5.0',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n/**\n * @hidden\n */\nconst resolvedPromise = Promise.resolve(null);\n/**\n * @hidden\n */\nconst isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nconst tick = (f) => (resolvedPromise.then(f));\n/**\n * @hidden\n */\nfunction isDocumentNode(container) {\n    return container.nodeType === 9;\n}\n/**\n * @hidden\n */\nfunction closest(element, selector) {\n    if (element.closest) {\n        return element.closest(selector);\n    }\n    const matches = Element.prototype.matches ?\n        (el, sel) => el.matches(sel)\n        : (el, sel) => el.msMatchesSelector(sel);\n    let node = element;\n    while (node && !isDocumentNode(node)) {\n        if (matches(node, selector)) {\n            return node;\n        }\n        node = node.parentNode;\n    }\n}\n/**\n * @hidden\n */\nconst replaceMessagePlaceholder = (message, name, value) => message.replace(new RegExp(`\\{\\\\s*${name}\\\\s*\\}`, 'g'), value);\n/**\n * @hidden\n */\nconst SIZES = {\n    small: 'sm',\n    medium: 'md',\n    large: 'lg'\n};\nconst ROUNDNESS = {\n    small: 'sm',\n    medium: 'md',\n    large: 'lg',\n    full: 'full'\n};\n/**\n * @hidden\n *\n * Returns the styling classes to be added and removed\n */\nconst getStylingClasses = (componentType, stylingOption, previousValue, newValue) => {\n    switch (stylingOption) {\n        case 'size':\n            return {\n                toRemove: `k-${componentType}-${SIZES[previousValue]}`,\n                toAdd: newValue !== 'none' ? `k-${componentType}-${SIZES[newValue]}` : ''\n            };\n        case 'rounded':\n            return {\n                toRemove: `k-rounded-${ROUNDNESS[previousValue]}`,\n                toAdd: newValue !== 'none' ? `k-rounded-${ROUNDNESS[newValue]}` : ''\n            };\n        case 'fillMode':\n            return {\n                toRemove: `k-${componentType}-${previousValue}`,\n                toAdd: newValue !== 'none' ? `k-${componentType}-${newValue}` : ''\n            };\n        default:\n            break;\n    }\n};\n/**\n * @hidden\n *\n * Returns the themeColor classes to be added and removed\n */\nconst getThemeColorClasses = (componentType, prevFillMode, fillMode, previousValue, newValue) => {\n    return {\n        toRemove: `k-${componentType}-${prevFillMode}-${previousValue}`,\n        toAdd: newValue !== 'none' ? `k-${componentType}-${fillMode}-${newValue}` : ''\n    };\n};\n\nconst SPAN_TAG_NAME = 'SPAN';\nconst BUTTON_TAG_NAME = 'BUTTON';\nconst KENDO_BUTTON_TAG_NAME = 'KENDO-BUTTON';\nconst DEFAULT_ROUNDED$3 = 'medium';\nconst DEFAULT_SIZE$2 = 'medium';\nconst DEFAULT_THEME_COLOR$2 = 'base';\nconst DEFAULT_FILL_MODE$3 = 'solid';\n/**\n * Represents the Kendo UI Button component for Angular.\n */\nclass ButtonComponent {\n    constructor(element, renderer, service, localization, ngZone) {\n        this.renderer = renderer;\n        this.service = service;\n        this.ngZone = ngZone;\n        /**\n         * Provides visual styling that indicates if the Button is active.\n         *\n         * @default false\n         */\n        this.toggleable = false;\n        /**\n         * @hidden\n         */\n        this.role = 'button';\n        /**\n         * Fires each time the selected state of a toggleable button is changed.\n         *\n         * The event argument is the new selected state (boolean).\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Fires each time the user clicks the button.\n         */\n        this.click = new EventEmitter();\n        this.isDisabled = false;\n        this._size = DEFAULT_SIZE$2;\n        this._rounded = DEFAULT_ROUNDED$3;\n        this._fillMode = DEFAULT_FILL_MODE$3;\n        this._themeColor = DEFAULT_THEME_COLOR$2;\n        this._focused = false;\n        this.subs = new Subscription();\n        validatePackage(packageMetadata);\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.subs.add(localization.changes.subscribe(({ rtl }) => (this.direction = rtl ? 'rtl' : 'ltr')));\n        this.element = element.nativeElement;\n    }\n    /**\n     * Backwards-compatible alias\n     *\n     * @hidden\n     */\n    get togglable() {\n        return this.toggleable;\n    }\n    /**\n     * @hidden\n     */\n    set togglable(value) {\n        this.toggleable = value;\n    }\n    /**\n     * Sets the selected state of the Button.\n     *\n     * @default false\n     */\n    get selected() {\n        return this._selected || false;\n    }\n    set selected(value) {\n        this._selected = value;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(index) {\n        this.element.tabIndex = index;\n    }\n    get tabIndex() {\n        return this.element.tabIndex;\n    }\n    /**\n     * Defines a CSS class&mdash;or multiple classes separated by spaces&mdash;\n     * which are applied to a `span` element inside the Button. Allows the usage of custom icons.\n     */\n    set iconClass(value) {\n        if (isDevMode() && value && (this.icon || this.svgIcon)) {\n            throw new Error('Setting both icon/svgIcon and iconClass options at the same time is not supported.');\n        }\n        this._iconClass = value;\n    }\n    get iconClass() {\n        return this._iconClass;\n    }\n    /**\n     * Defines the name for an existing font icon in the Kendo UI theme.\n     */\n    set icon(name) {\n        if (isDevMode() && name && this.iconClass) {\n            throw new Error('Setting both icon/svgIcon and iconClass options at the same time is not supported.');\n        }\n        this._icon = name;\n    }\n    ;\n    get icon() {\n        return this._icon;\n    }\n    /**\n     * If set to `true`, it disables the Button.\n     *\n     * @default false\n     */\n    set disabled(disabled) {\n        //Required, because in FF focused buttons are not blurred on disabled\n        if (disabled && isDocumentAvailable() && isFirefox(navigator.userAgent)) {\n            this.blur();\n        }\n        this.isDisabled = disabled;\n        this.renderer.setProperty(this.element, 'disabled', disabled);\n    }\n    get disabled() {\n        return this.isDisabled;\n    }\n    /**\n     * The size property specifies the padding of the Button\n     * ([see example]({% slug appearance_button %}#toc-size)).\n     *\n     * @default 'medium'\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$2;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the Button\n     * ([see example]({% slug appearance_button %}#toc-rounded)).\n     *\n     * @default 'medium'\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$3;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the Button\n     * ([see example]({% slug appearance_button %}#toc-fillMode)).\n     *\n     * @default 'solid'\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$3;\n        this.handleClasses(newFillMode, 'fillMode');\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * The Button allows you to specify predefined theme colors.\n     * The theme color will be applied as a background and border color while also amending the text color accordingly\n     * ([see example]({% slug appearance_button %}#toc-themeColor)).\n     *\n     * @default 'base'\n     */\n    set themeColor(themeColor) {\n        const newThemeColor = themeColor ? themeColor : DEFAULT_THEME_COLOR$2;\n        this.handleThemeColor(newThemeColor);\n        this._themeColor = newThemeColor;\n    }\n    get themeColor() {\n        return this._themeColor;\n    }\n    /**\n     * Defines an SVGIcon to be rendered within the button.\n     */\n    set svgIcon(icon) {\n        if (isDevMode() && icon && this.iconClass) {\n            throw new Error('Setting both icon/svgIcon and iconClass options at the same time is not supported.');\n        }\n        this._svgIcon = icon;\n    }\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set isFocused(isFocused) {\n        this.toggleClass('k-focus', isFocused);\n        this._focused = isFocused;\n    }\n    get isFocused() {\n        return this._focused;\n    }\n    get classButton() {\n        return true;\n    }\n    get isToggleable() {\n        return this.toggleable;\n    }\n    get iconButtonClass() {\n        const hasIcon = this.icon || this.iconClass || this.imageUrl || this.svgIcon;\n        return hasIcon && !this.hasText;\n    }\n    get roleSetter() {\n        return this.role;\n    }\n    get classDisabled() {\n        return this.isDisabled;\n    }\n    get classActive() {\n        return this.selected;\n    }\n    get getDirection() {\n        return this.direction;\n    }\n    /**\n     * @hidden\n     */\n    onFocus() {\n        this.isFocused = true;\n    }\n    /**\n     * @hidden\n     */\n    onBlur() {\n        this.isFocused = false;\n    }\n    /**\n     * @hidden\n     */\n    set primary(value) {\n        this.themeColor = value ? 'primary' : 'base';\n    }\n    /**\n     * @hidden\n     */\n    set look(value) {\n        switch (value) {\n            case 'default':\n                this.fillMode = 'solid';\n                break;\n            default:\n                this.fillMode = value;\n                break;\n        }\n    }\n    /**\n     * Alias for ElementRef.nativeElement to workaround\n     * ViewChild() selectors that used to return the host element before v11.\n     *\n     * @hidden\n     */\n    get nativeElement() {\n        return this.element;\n    }\n    ngOnInit() {\n        const elementTagName = this.element.tagName;\n        const isSpanOrKendoButton = elementTagName === SPAN_TAG_NAME || elementTagName === KENDO_BUTTON_TAG_NAME;\n        if (!this.element.hasAttribute('role') && this.togglable) {\n            this.toggleAriaPressed(this.toggleable);\n        }\n        if (this.role) {\n            this.setAttribute('role', this.role);\n        }\n        if (isSpanOrKendoButton && !this.isDisabled) {\n            this.tabIndex = 0;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.subs.add(this.renderer.listen(this.element, 'click', this._onButtonClick.bind(this)));\n            this.subs.add(this.renderer.listen(this.element, 'keydown', (event) => {\n                const isSpaceOrEnter = event.keyCode === Keys.Space || event.keyCode === Keys.Enter;\n                if (isSpanOrKendoButton && isSpaceOrEnter) {\n                    this.ngZone.run(() => {\n                        this.click.emit(event);\n                    });\n                    this._onButtonClick();\n                }\n            }));\n            this.subs.add(this.renderer.listen(this.element, 'mousedown', (event) => {\n                const elementTagName = this.element.tagName;\n                const isButton = elementTagName === BUTTON_TAG_NAME;\n                const isBrowserSafari = isDocumentAvailable() && isSafari(navigator.userAgent);\n                if (!this.isDisabled && isButton && isBrowserSafari) {\n                    event.preventDefault();\n                    this.element.focus();\n                }\n            }));\n        });\n    }\n    ngOnChanges(change) {\n        if (isChanged('togglable', change) || isChanged('toggleable', change)) {\n            this.toggleAriaPressed(this.toggleable);\n        }\n    }\n    ngAfterViewInit() {\n        const stylingOptions = ['size', 'rounded', 'fillMode'];\n        stylingOptions.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n    }\n    ngOnDestroy() {\n        this.subs.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    get hasText() {\n        return isDocumentAvailable() && this.element.textContent.trim().length > 0;\n    }\n    /**\n     * Focuses the Button component.\n     */\n    focus() {\n        if (isDocumentAvailable()) {\n            this.element.focus();\n            this.isFocused = true;\n        }\n    }\n    /**\n     * Blurs the Button component.\n     */\n    blur() {\n        if (isDocumentAvailable()) {\n            this.element.blur();\n            this.isFocused = false;\n        }\n    }\n    /**\n     * @hidden\n     */\n    setAttribute(attribute, value) {\n        this.renderer.setAttribute(this.element, attribute, value);\n    }\n    /**\n     * @hidden\n     */\n    removeAttribute(attribute) {\n        this.renderer.removeAttribute(this.element, attribute);\n    }\n    /**\n     * @hidden\n     *\n     * Internal setter that triggers selectedChange\n     */\n    setSelected(value) {\n        const changed = this.selected !== value;\n        this.selected = value;\n        this.setAttribute('aria-pressed', this.selected.toString());\n        this.toggleClass('k-selected', this.selected);\n        if (changed && hasObservers(this.selectedChange)) {\n            this.ngZone.run(() => {\n                this.selectedChange.emit(value);\n            });\n        }\n    }\n    toggleAriaPressed(shouldSet) {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        if (shouldSet) {\n            this.setAttribute('aria-pressed', this.selected.toString());\n        }\n        else {\n            this.removeAttribute('aria-pressed');\n        }\n    }\n    toggleClass(className, add) {\n        if (add) {\n            this.renderer.addClass(this.element, className);\n        }\n        else {\n            this.renderer.removeClass(this.element, className);\n        }\n    }\n    _onButtonClick() {\n        if (!this.disabled && this.service) {\n            this.ngZone.run(() => {\n                this.service.click(this);\n            });\n        }\n        if (this.togglable && !this.service) {\n            this.setSelected(!this.selected);\n        }\n    }\n    handleClasses(value, input) {\n        const elem = this.element;\n        const classes = getStylingClasses('button', input, this[input], value);\n        if (input === 'fillMode') {\n            this.handleThemeColor(this.themeColor, this[input], value);\n        }\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n    handleThemeColor(value, prevFillMode, fillMode) {\n        const elem = this.element;\n        const removeFillMode = prevFillMode ? prevFillMode : this.fillMode;\n        const addFillMode = fillMode ? fillMode : this.fillMode;\n        const themeColorClass = getThemeColorClasses('button', removeFillMode, addFillMode, this.themeColor, value);\n        this.renderer.removeClass(elem, themeColorClass.toRemove);\n        if (addFillMode !== 'none' && fillMode !== 'none') {\n            if (themeColorClass.toAdd) {\n                this.renderer.addClass(elem, themeColorClass.toAdd);\n            }\n        }\n    }\n}\nButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: KendoButtonService, optional: true }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ButtonComponent, selector: \"button[kendoButton], span[kendoButton], kendo-button\", inputs: { toggleable: \"toggleable\", togglable: \"togglable\", selected: \"selected\", tabIndex: \"tabIndex\", imageUrl: \"imageUrl\", iconClass: \"iconClass\", icon: \"icon\", disabled: \"disabled\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", themeColor: \"themeColor\", svgIcon: \"svgIcon\", role: \"role\", primary: \"primary\", look: \"look\" }, outputs: { selectedChange: \"selectedChange\", click: \"click\" }, host: { listeners: { \"focus\": \"onFocus()\", \"blur\": \"onBlur()\" }, properties: { \"class.k-button\": \"this.classButton\", \"class.k-toggle-button\": \"this.isToggleable\", \"class.k-icon-button\": \"this.iconButtonClass\", \"attr.role\": \"this.roleSetter\", \"attr.aria-disabled\": \"this.classDisabled\", \"class.k-disabled\": \"this.classDisabled\", \"class.k-selected\": \"this.classActive\", \"attr.dir\": \"this.getDirection\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.button'\n        }\n    ], exportAs: [\"kendoButton\"], usesOnChanges: true, ngImport: i0, template: `\n        <kendo-icon-wrapper\n            *ngIf=\"icon || svgIcon\"\n            innerCssClass=\"k-button-icon\"\n            [name]=\"icon\"\n            [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n        <span *ngIf=\"imageUrl\" class=\"k-button-icon k-icon\">\n            <img [src]=\"imageUrl\" class=\"k-image\" role=\"presentation\" />\n        </span>\n        <span *ngIf=\"iconClass\" class=\"k-button-icon\" [ngClass]=\"iconClass\"></span>\n        <span class=\"k-button-text\"><ng-content></ng-content></span>\n    `, isInline: true, components: [{ type: i2.IconWrapperComponent, selector: \"kendo-icon-wrapper\", inputs: [\"name\", \"svgIcon\", \"innerCssClass\", \"customFontClass\", \"size\"], exportAs: [\"kendoIconWrapper\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoButton',\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.button'\n                        }\n                    ],\n                    selector: 'button[kendoButton], span[kendoButton], kendo-button',\n                    template: `\n        <kendo-icon-wrapper\n            *ngIf=\"icon || svgIcon\"\n            innerCssClass=\"k-button-icon\"\n            [name]=\"icon\"\n            [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n        <span *ngIf=\"imageUrl\" class=\"k-button-icon k-icon\">\n            <img [src]=\"imageUrl\" class=\"k-image\" role=\"presentation\" />\n        </span>\n        <span *ngIf=\"iconClass\" class=\"k-button-icon\" [ngClass]=\"iconClass\"></span>\n        <span class=\"k-button-text\"><ng-content></ng-content></span>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: KendoButtonService, decorators: [{\n                    type: Optional\n                }] }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { toggleable: [{\n                type: Input\n            }], togglable: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], imageUrl: [{\n                type: Input\n            }], iconClass: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], themeColor: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], click: [{\n                type: Output\n            }], classButton: [{\n                type: HostBinding,\n                args: ['class.k-button']\n            }], isToggleable: [{\n                type: HostBinding,\n                args: ['class.k-toggle-button']\n            }], iconButtonClass: [{\n                type: HostBinding,\n                args: ['class.k-icon-button']\n            }], roleSetter: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], classDisabled: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }, {\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], classActive: [{\n                type: HostBinding,\n                args: ['class.k-selected']\n            }], getDirection: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focus']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], primary: [{\n                type: Input\n            }], look: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass PreventableEvent {\n    constructor() {\n        this.prevented = false;\n    }\n    /**\n     * Prevents the default action for a specified event.\n     * In this way, the source component suppresses the built-in behavior that follows the event.\n     */\n    preventDefault() {\n        this.prevented = true;\n    }\n    /**\n     * If the event is prevented by any of its subscribers, returns `true`.\n     *\n     * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n     */\n    isDefaultPrevented() {\n        return this.prevented;\n    }\n}\n\n/**\n * @hidden\n */\nconst tabindex = 'tabindex';\n/**\n * Represents the Kendo UI ButtonGroup component for Angular.\n */\nclass ButtonGroupComponent {\n    constructor(service, localization, element) {\n        this.service = service;\n        this.element = element;\n        /**\n         * The selection mode of the ButtonGroup.\n         * @default 'multiple'\n         */\n        this.selection = 'multiple';\n        /**\n         * When this option is set to `true` (default), the component is a single tab-stop,\n         * and focus is moved through the inner buttons via the arrow keys.\n         *\n         * When the option is set to `false`, the inner buttons are part of the natural tab sequence of the page.\n         *\n         * @default true\n         */\n        this.navigable = true;\n        /**\n         * Fires every time keyboard navigation occurs.\n         */\n        this.navigate = new EventEmitter();\n        this._tabIndex = 0;\n        this.currentTabIndex = 0;\n        this.subs = new Subscription();\n        this.role = 'group';\n        this.focusHandler = () => {\n            this.currentTabIndex = -1;\n            const focusedIndex = this.buttons.toArray().findIndex(current => current.element.tabIndex !== -1);\n            const index = focusedIndex === -1 ? 0 : focusedIndex;\n            this.focus(this.buttons.filter((_current, i) => {\n                return i === index;\n            }));\n        };\n        validatePackage(packageMetadata);\n        this.subs.add(localization.changes.subscribe(({ rtl }) => this.direction = rtl ? 'rtl' : 'ltr'));\n    }\n    /**\n     * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    set tabIndex(value) {\n        this._tabIndex = value;\n        this.currentTabIndex = value;\n    }\n    get tabIndex() {\n        return this._tabIndex;\n    }\n    get wrapperClass() {\n        return true;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get stretchedClass() {\n        return !!this.width;\n    }\n    get dir() {\n        return this.direction;\n    }\n    get ariaDisabled() {\n        return this.disabled;\n    }\n    get wrapperWidth() {\n        return this.width;\n    }\n    get wrapperTabIndex() {\n        return this.disabled ? undefined : this.navigable ? this.currentTabIndex : undefined;\n    }\n    ngOnInit() {\n        this.subs.add(this.service.buttonClicked$.subscribe((button) => {\n            let newSelectionValue;\n            if (this.isSelectionSingle()) {\n                newSelectionValue = true;\n                this.deactivate(this.buttons.filter(current => current !== button));\n            }\n            else {\n                if (this.navigable) {\n                    this.defocus(this.buttons.toArray());\n                }\n                newSelectionValue = !button.selected;\n            }\n            if (button.togglable) {\n                button.setSelected(newSelectionValue);\n            }\n            if (this.navigable) {\n                button.setAttribute(tabindex, '0');\n            }\n        }));\n        this.handleSubs('focus', () => this.navigable, this.focusHandler);\n        this.handleSubs('keydown', () => this.navigable && !this.disabled, (event) => this.navigateFocus(event));\n        this.handleSubs('focusout', (event) => this.navigable && event.relatedTarget && event.relatedTarget.parentNode !== this.element.nativeElement, () => {\n            this.defocus(this.buttons.toArray());\n            this.currentTabIndex = this.tabIndex;\n        });\n        this.subs.add(fromEvent(this.element.nativeElement, 'focusout')\n            .pipe(filter((event) => this.navigable && event.relatedTarget && event.relatedTarget.parentNode !== this.element.nativeElement))\n            .subscribe(() => {\n            this.defocus(this.buttons.toArray());\n            this.currentTabIndex = this.tabIndex;\n        }));\n    }\n    ngOnChanges(changes) {\n        if (isChanged('disabled', changes)) {\n            this.buttons.forEach((button) => {\n                if (isPresent(this.disabled)) {\n                    button.disabled = this.disabled;\n                }\n            });\n        }\n        if (isChanged('navigable', changes)) {\n            if (changes['navigable'].currentValue) {\n                this.setButtonsTabIndex();\n                this.currentTabIndex = 0;\n            }\n            else {\n                this.currentTabIndex = -1;\n                this.buttons.forEach((button) => button.setAttribute(tabindex, '0'));\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (!this.navigable) {\n            return;\n        }\n        this.setButtonsTabIndex();\n    }\n    ngAfterViewChecked() {\n        if (this.buttons.length) {\n            this.buttons.first.renderer.addClass(this.buttons.first.element, 'k-group-start');\n            this.buttons.last.renderer.addClass(this.buttons.last.element, 'k-group-end');\n        }\n    }\n    ngOnDestroy() {\n        this.subs.unsubscribe();\n    }\n    ngAfterContentChecked() {\n        this.verifySettings();\n    }\n    navigateFocus(event) {\n        const focusedIndex = this.buttons.toArray().findIndex(current => current.element.tabIndex !== -1);\n        const firstIndex = 0;\n        const lastIndex = this.buttons.length - 1;\n        const eventArgs = new PreventableEvent();\n        if (event.keyCode === Keys.ArrowRight && focusedIndex < lastIndex) {\n            this.navigate.emit(eventArgs);\n            if (!eventArgs.isDefaultPrevented()) {\n                this.defocus(this.buttons.toArray());\n                this.focus(this.buttons.filter((_current, index) => {\n                    return index === focusedIndex + 1;\n                }));\n            }\n        }\n        if (event.keyCode === Keys.ArrowLeft && focusedIndex > firstIndex) {\n            this.navigate.emit(eventArgs);\n            if (!eventArgs.isDefaultPrevented()) {\n                this.defocus(this.buttons.toArray());\n                this.focus(this.buttons.filter((_current, index) => {\n                    return index === focusedIndex - 1;\n                }));\n            }\n        }\n    }\n    deactivate(buttons) {\n        buttons.forEach((button) => {\n            button.setSelected(false);\n            if (this.navigable) {\n                button.setAttribute(tabindex, '-1');\n            }\n        });\n    }\n    activate(buttons) {\n        buttons.forEach((button) => {\n            button.setSelected(true);\n            if (this.navigable) {\n                button.setAttribute(tabindex, '0');\n            }\n            button.focus();\n        });\n    }\n    defocus(buttons) {\n        buttons.forEach((button) => {\n            button.setAttribute(tabindex, '-1');\n        });\n    }\n    focus(buttons) {\n        buttons.forEach((button) => {\n            button.setAttribute(tabindex, '0');\n            button.focus();\n        });\n    }\n    verifySettings() {\n        if (isDevMode()) {\n            if (this.isSelectionSingle() && this.buttons.filter(button => button.selected).length > 1) {\n                throw new Error('Having multiple selected buttons with single selection mode is not supported');\n            }\n        }\n    }\n    isSelectionSingle() {\n        return this.selection === 'single';\n    }\n    setButtonsTabIndex() {\n        this.buttons.forEach((button) => {\n            if (button.selected) {\n                button.setAttribute(tabindex, '0');\n            }\n            else {\n                button.setAttribute(tabindex, '-1');\n            }\n        });\n    }\n    handleSubs(eventName, predicate, handler) {\n        this.subs.add(fromEvent(this.element.nativeElement, eventName)\n            .pipe(filter(predicate))\n            .subscribe(handler));\n    }\n}\nButtonGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonGroupComponent, deps: [{ token: KendoButtonService }, { token: i1.LocalizationService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nButtonGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ButtonGroupComponent, selector: \"kendo-buttongroup\", inputs: { disabled: \"disabled\", selection: \"selection\", width: \"width\", tabIndex: \"tabIndex\", navigable: \"navigable\" }, outputs: { navigate: \"navigate\" }, host: { properties: { \"class.k-button-group\": \"this.wrapperClass\", \"class.k-disabled\": \"this.disabledClass\", \"class.k-button-group-stretched\": \"this.stretchedClass\", \"attr.role\": \"this.role\", \"attr.dir\": \"this.dir\", \"attr.aria-disabled\": \"this.ariaDisabled\", \"style.width\": \"this.wrapperWidth\", \"attr.tabindex\": \"this.wrapperTabIndex\" } }, providers: [\n        KendoButtonService,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.buttongroup'\n        }\n    ], queries: [{ propertyName: \"buttons\", predicate: ButtonComponent }], exportAs: [\"kendoButtonGroup\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-content select=\"[kendoButton], kendo-button\"></ng-content>\n    `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoButtonGroup',\n                    providers: [\n                        KendoButtonService,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.buttongroup'\n                        }\n                    ],\n                    selector: 'kendo-buttongroup',\n                    template: `\n        <ng-content select=\"[kendoButton], kendo-button\"></ng-content>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: KendoButtonService }, { type: i1.LocalizationService }, { type: i0.ElementRef }]; }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['disabled']\n            }], selection: [{\n                type: Input,\n                args: ['selection']\n            }], width: [{\n                type: Input,\n                args: ['width']\n            }], tabIndex: [{\n                type: Input\n            }], navigable: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], buttons: [{\n                type: ContentChildren,\n                args: [ButtonComponent]\n            }], wrapperClass: [{\n                type: HostBinding,\n                args: ['class.k-button-group']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], stretchedClass: [{\n                type: HostBinding,\n                args: ['class.k-button-group-stretched']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], ariaDisabled: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }], wrapperWidth: [{\n                type: HostBinding,\n                args: ['style.width']\n            }], wrapperTabIndex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }] } });\n\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the Button directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Button module\n * import { ButtonModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ButtonModule], // import Button module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ButtonModule {\n}\nButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonModule, declarations: [ButtonComponent], imports: [IconsModule], exports: [ButtonComponent] });\nButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonModule, imports: [[IconsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ButtonComponent],\n                    imports: [IconsModule],\n                    exports: [ButtonComponent]\n                }]\n        }] });\n\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ButtonGroupComponent`&mdash;The ButtonGroupComponent component class.\n */\nclass ButtonGroupModule {\n}\nButtonGroupModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonGroupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nButtonGroupModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonGroupModule, declarations: [ButtonGroupComponent], imports: [CommonModule, ButtonModule], exports: [ButtonGroupComponent] });\nButtonGroupModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonGroupModule, imports: [[CommonModule, ButtonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonGroupModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ButtonGroupComponent],\n                    exports: [ButtonGroupComponent],\n                    imports: [CommonModule, ButtonModule]\n                }]\n        }] });\n\n/**\n * Used for rendering the list item content.\n *\n * To define the item template, nest a `<ng-template>` tag with the `kendo<ComponentName>ItemTemplate` directive inside the component tag.\n *\n * For the DropDownButton, use the `kendoDropDownButtonItemTemplate` directive.\n * For the SplitButton, use the `kendoSplitButtonItemTemplate` directive.\n *\n * The template context is set to the current component. To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-splitbutton [data]=\"listItems\">\n *    <ng-template kendoSplitButtonItemTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-splitbutton>\n *  <kendo-dropdownbutton [data]=\"listItems\">\n *    <ng-template kendoDropDownButtonItemTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-dropdownbutton>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<any> = [{\n *      text: 'item1',\n *      icon: 'arrow-rotate-cw',\n *      disabled: false,\n *      click: (dataItem: any) => {\n *          //action\n *      }\n *  }, {\n *      text: 'item2',\n *      icon: 'arrow-rotate-cw',\n *      disabled: false,\n *      click: (dataItem: any) => {\n *          //action\n *      }\n *  }]\n * }\n * ```\n *\n * For more examples, refer to the article on the [DropDownList templates]({% slug overview_ddl %}#templates).\n */\nclass ButtonItemTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nButtonItemTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonItemTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nButtonItemTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ButtonItemTemplateDirective, selector: \"[kendoDropDownButtonItemTemplate],[kendoSplitButtonItemTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonItemTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownButtonItemTemplate],[kendoSplitButtonItemTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @hidden\n */\nclass FocusService {\n    constructor() {\n        this.onFocus = new EventEmitter();\n    }\n    isFocused(index) {\n        return index === this.focused;\n    }\n    focus(index) {\n        if (this.isFocused(index)) {\n            return;\n        }\n        this.focused = index;\n        this.onFocus.emit(index);\n    }\n    resetFocus() {\n        this.focused = -1;\n    }\n    get focused() {\n        return this.focusedIndex;\n    }\n    set focused(index) {\n        this.focusedIndex = index;\n        this.onFocus.emit(index);\n    }\n}\nFocusService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FocusService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFocusService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FocusService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FocusService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass FocusableDirective {\n    constructor(focusService, elementRef, renderer) {\n        this.focusService = focusService;\n        this.renderer = renderer;\n        this.subs = new Subscription();\n        this.element = elementRef.nativeElement;\n        this.subscribeEvents();\n    }\n    ngOnInit() {\n        if (this.index === this.focusService.focused) {\n            this.renderer.addClass(this.element, 'k-focus');\n        }\n        else {\n            this.renderer.removeClass(this.element, 'k-focus');\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.subs.unsubscribe();\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.subs.add(this.focusService.onFocus.subscribe((index) => {\n            if (this.index === index) {\n                this.renderer.addClass(this.element, 'k-focus');\n                this.renderer.setAttribute(this.element, 'tabidnex', '0');\n                this.element.focus();\n            }\n            else {\n                this.renderer.setAttribute(this.element, 'tabidnex', '-1');\n                this.renderer.removeClass(this.element, 'k-focus');\n            }\n        }));\n    }\n}\nFocusableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FocusableDirective, deps: [{ token: FocusService }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nFocusableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FocusableDirective, selector: \"[kendoButtonFocusable]\", inputs: { index: \"index\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FocusableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoButtonFocusable]'\n                }]\n        }], ctorParameters: function () { return [{ type: FocusService }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { index: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass TemplateContextDirective {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    set templateContext(context) {\n        if (this.insertedViewRef) {\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n            this.insertedViewRef = undefined;\n        }\n        if (context.templateRef) {\n            this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n        }\n    }\n}\nTemplateContextDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TemplateContextDirective, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nTemplateContextDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TemplateContextDirective, selector: \"[templateContext]\", inputs: { templateContext: \"templateContext\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TemplateContextDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[templateContext]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { templateContext: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass ListComponent {\n    constructor() {\n        this.onItemClick = new EventEmitter();\n        this.onItemBlur = new EventEmitter();\n        this.sizeClass = '';\n        validatePackage(packageMetadata);\n    }\n    set size(size) {\n        if (size) {\n            this.sizeClass = `k-menu-group-${SIZES[size]}`;\n        }\n        else {\n            this.sizeClass = '';\n        }\n    }\n    getText(dataItem) {\n        if (dataItem) {\n            return this.textField ? dataItem[this.textField] : dataItem.text || dataItem;\n        }\n        return undefined;\n    }\n    getIconClasses(dataItem) {\n        const icon = dataItem.icon ? 'k-icon k-i-' + dataItem.icon : undefined;\n        const classes = {};\n        classes[icon || dataItem.iconClass] = true;\n        return classes;\n    }\n    onClick(index) {\n        this.onItemClick.emit(index);\n    }\n    onBlur() {\n        this.onItemBlur.emit();\n    }\n}\nListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ListComponent, selector: \"kendo-button-list\", inputs: { data: \"data\", textField: \"textField\", itemTemplate: \"itemTemplate\", size: \"size\" }, outputs: { onItemClick: \"onItemClick\", onItemBlur: \"onItemBlur\" }, ngImport: i0, template: `\n        <ul class=\"k-group k-menu-group k-reset\" [ngClass]=\"sizeClass\" unselectable=\"on\" role=\"menu\">\n            <li role=\"menuitem\"\n                unselectable=\"on\"\n                kendoButtonFocusable\n                *ngFor=\"let dataItem of data; let index = index;\"\n                [index]=\"index\"\n                tabindex=\"-1\"\n                class=\"k-item k-menu-item\"\n                (click)=\"$event.stopImmediatePropagation(); onClick(index);\"\n                (blur)=\"onBlur()\"\n                [attr.aria-disabled]=\"dataItem.disabled ? true : false\">\n                <ng-template [ngIf]=\"itemTemplate?.templateRef\">\n                    <span class=\"k-link k-menu-link\" [class.k-disabled]=\"dataItem.disabled\">\n                        <ng-template\n                            [templateContext]=\"{ templateRef: itemTemplate?.templateRef, $implicit: dataItem }\"\n                        ></ng-template>\n                    </span>\n                </ng-template>\n                <ng-template [ngIf]=\"!itemTemplate?.templateRef\">\n                    <span class=\"k-link k-menu-link\" [class.k-disabled]=\"dataItem.disabled\">\n                        <kendo-icon-wrapper\n                            *ngIf=\"dataItem.icon || dataItem.iconClass || dataItem.svgIcon\"\n                            [name]=\"dataItem.icon\"\n                            [svgIcon]=\"dataItem.svgIcon\"\n                            [customFontClass]=\"dataItem.iconClass\"\n                        ></kendo-icon-wrapper>\n                        <img\n                            *ngIf=\"dataItem.imageUrl\"\n                            class=\"k-image\"\n                            [src]=\"dataItem.imageUrl\"\n                            alt=\"\"\n                        >\n                        <span *ngIf=\"getText(dataItem)\" class=\"k-menu-link-text\">\n                            {{ getText(dataItem) }}\n                        </span>\n                    </span>\n                </ng-template>\n            </li>\n        </ul>\n    `, isInline: true, components: [{ type: i2.IconWrapperComponent, selector: \"kendo-icon-wrapper\", inputs: [\"name\", \"svgIcon\", \"innerCssClass\", \"customFontClass\", \"size\"], exportAs: [\"kendoIconWrapper\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: FocusableDirective, selector: \"[kendoButtonFocusable]\", inputs: [\"index\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-button-list',\n                    template: `\n        <ul class=\"k-group k-menu-group k-reset\" [ngClass]=\"sizeClass\" unselectable=\"on\" role=\"menu\">\n            <li role=\"menuitem\"\n                unselectable=\"on\"\n                kendoButtonFocusable\n                *ngFor=\"let dataItem of data; let index = index;\"\n                [index]=\"index\"\n                tabindex=\"-1\"\n                class=\"k-item k-menu-item\"\n                (click)=\"$event.stopImmediatePropagation(); onClick(index);\"\n                (blur)=\"onBlur()\"\n                [attr.aria-disabled]=\"dataItem.disabled ? true : false\">\n                <ng-template [ngIf]=\"itemTemplate?.templateRef\">\n                    <span class=\"k-link k-menu-link\" [class.k-disabled]=\"dataItem.disabled\">\n                        <ng-template\n                            [templateContext]=\"{ templateRef: itemTemplate?.templateRef, $implicit: dataItem }\"\n                        ></ng-template>\n                    </span>\n                </ng-template>\n                <ng-template [ngIf]=\"!itemTemplate?.templateRef\">\n                    <span class=\"k-link k-menu-link\" [class.k-disabled]=\"dataItem.disabled\">\n                        <kendo-icon-wrapper\n                            *ngIf=\"dataItem.icon || dataItem.iconClass || dataItem.svgIcon\"\n                            [name]=\"dataItem.icon\"\n                            [svgIcon]=\"dataItem.svgIcon\"\n                            [customFontClass]=\"dataItem.iconClass\"\n                        ></kendo-icon-wrapper>\n                        <img\n                            *ngIf=\"dataItem.imageUrl\"\n                            class=\"k-image\"\n                            [src]=\"dataItem.imageUrl\"\n                            alt=\"\"\n                        >\n                        <span *ngIf=\"getText(dataItem)\" class=\"k-menu-link-text\">\n                            {{ getText(dataItem) }}\n                        </span>\n                    </span>\n                </ng-template>\n            </li>\n        </ul>\n    `,\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { data: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], itemTemplate: [{\n                type: Input\n            }], onItemClick: [{\n                type: Output\n            }], onItemBlur: [{\n                type: Output\n            }], size: [{\n                type: Input\n            }] } });\n\nconst EXPORTED_DIRECTIVES = [\n    ListComponent,\n    FocusableDirective,\n    ButtonItemTemplateDirective,\n    TemplateContextDirective\n];\n/**\n * @hidden\n */\nclass ListModule {\n}\nListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ListModule, declarations: [ListComponent,\n        FocusableDirective,\n        ButtonItemTemplateDirective,\n        TemplateContextDirective], imports: [CommonModule, IconsModule], exports: [ListComponent,\n        FocusableDirective,\n        ButtonItemTemplateDirective,\n        TemplateContextDirective] });\nListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ListModule, imports: [[CommonModule, IconsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [EXPORTED_DIRECTIVES],\n                    exports: [EXPORTED_DIRECTIVES],\n                    imports: [CommonModule, IconsModule]\n                }]\n        }] });\n\n/**\n * @hidden\n */\nvar KeyEvents;\n(function (KeyEvents) {\n    KeyEvents[KeyEvents[\"keydown\"] = 0] = \"keydown\";\n    KeyEvents[KeyEvents[\"keypress\"] = 1] = \"keypress\";\n    KeyEvents[KeyEvents[\"keyup\"] = 2] = \"keyup\";\n})(KeyEvents || (KeyEvents = {}));\n\n/**\n * @hidden\n */\nvar NavigationAction;\n(function (NavigationAction) {\n    // eslint-disable-next-line id-denylist\n    NavigationAction[NavigationAction[\"Undefined\"] = 0] = \"Undefined\";\n    NavigationAction[NavigationAction[\"Open\"] = 1] = \"Open\";\n    NavigationAction[NavigationAction[\"Close\"] = 2] = \"Close\";\n    NavigationAction[NavigationAction[\"Enter\"] = 3] = \"Enter\";\n    NavigationAction[NavigationAction[\"EnterPress\"] = 4] = \"EnterPress\";\n    NavigationAction[NavigationAction[\"EnterUp\"] = 5] = \"EnterUp\";\n    NavigationAction[NavigationAction[\"Tab\"] = 6] = \"Tab\";\n    NavigationAction[NavigationAction[\"Esc\"] = 7] = \"Esc\";\n    NavigationAction[NavigationAction[\"Navigate\"] = 8] = \"Navigate\";\n})(NavigationAction || (NavigationAction = {}));\n\n/**\n * @hidden\n */\nconst NAVIGATION_CONFIG = new InjectionToken('navigation.config');\n\n/**\n * @hidden\n */\nclass NavigationService {\n    constructor(config) {\n        this.navigate = new EventEmitter();\n        this.open = new EventEmitter();\n        this.close = new EventEmitter();\n        this.enter = new EventEmitter();\n        this.enterpress = new EventEmitter();\n        this.enterup = new EventEmitter();\n        this.tab = new EventEmitter();\n        this.esc = new EventEmitter();\n        this.useLeftRightArrows = config.useLeftRightArrows;\n    }\n    process(args) {\n        const keyCode = args.keyCode;\n        const keyEvent = args.keyEvent;\n        let index;\n        let action = NavigationAction.Undefined;\n        if (keyEvent === KeyEvents.keyup) {\n            if (this.isEnterOrSpace(keyCode)) {\n                action = NavigationAction.EnterUp;\n            }\n        }\n        else {\n            if (args.altKey && keyCode === Keys.ArrowDown) {\n                action = NavigationAction.Open;\n            }\n            else if (args.altKey && keyCode === Keys.ArrowUp) {\n                action = NavigationAction.Close;\n            }\n            else if (this.isEnterOrSpace(keyCode)) {\n                action = NavigationAction.Enter;\n            }\n            else if (keyCode === Keys.Escape) {\n                action = NavigationAction.Esc;\n            }\n            else if (keyCode === Keys.Tab) {\n                action = NavigationAction.Tab;\n            }\n            else if (keyCode === Keys.ArrowUp || (this.useLeftRightArrows && keyCode === Keys.ArrowLeft)) {\n                const step = args.flipNavigation ? 1 : -1;\n                const start = args.flipNavigation ? args.min : args.max;\n                const end = args.flipNavigation ? args.max : args.min;\n                index = this.next({\n                    current: args.current,\n                    start: start,\n                    end: end,\n                    step: step\n                });\n                action = NavigationAction.Navigate;\n            }\n            else if (keyCode === Keys.ArrowDown || (this.useLeftRightArrows && keyCode === Keys.ArrowRight)) {\n                const step = args.flipNavigation ? -1 : 1;\n                const start = args.flipNavigation ? args.max : args.min;\n                const end = args.flipNavigation ? args.min : args.max;\n                index = this.next({\n                    current: args.current,\n                    start: start,\n                    end: end,\n                    step: step\n                });\n                action = NavigationAction.Navigate;\n            }\n            else if (keyCode === Keys.Home) {\n                index = args.min;\n                action = NavigationAction.Navigate;\n            }\n            else if (keyCode === Keys.End) {\n                index = args.max;\n                action = NavigationAction.Navigate;\n            }\n        }\n        if (action !== NavigationAction.Undefined) {\n            this[NavigationAction[action].toLowerCase()].emit({ index, target: args.target });\n        }\n        return action;\n    }\n    isEnterOrSpace(keyCode) {\n        return keyCode === Keys.Enter || keyCode === Keys.Space;\n    }\n    next(args) {\n        if (!isPresent(args.current)) {\n            return args.start;\n        }\n        else {\n            return args.current !== args.end ? args.current + args.step : args.end;\n        }\n    }\n}\nNavigationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NavigationService, deps: [{ token: NAVIGATION_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\nNavigationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NavigationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NavigationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NAVIGATION_CONFIG]\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass PopupContainerService {\n}\nPopupContainerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PopupContainerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nPopupContainerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PopupContainerService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PopupContainerService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass ListButton {\n    constructor(focusService, navigationService, wrapperRef, _zone, popupService, elRef, localization, cdr, containerService) {\n        this.focusService = focusService;\n        this.navigationService = navigationService;\n        this.wrapperRef = wrapperRef;\n        this._zone = _zone;\n        this.popupService = popupService;\n        this.elRef = elRef;\n        this.cdr = cdr;\n        this.containerService = containerService;\n        this._open = false;\n        this._disabled = false;\n        this._active = false;\n        this._popupSettings = { animate: true, popupClass: '' };\n        this.listId = guid();\n        this._isFocused = false;\n        this.subs = new Subscription();\n        this.popupSubs = new Subscription();\n        /**\n         * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabIndex = 0;\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel the event, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel the event, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        this.isClosePrevented = false;\n        validatePackage(packageMetadata);\n        this.focusService = focusService;\n        this.navigationService = navigationService;\n        this.wrapper = wrapperRef.nativeElement;\n        this.subs.add(localization.changes.subscribe(({ rtl }) => (this.direction = rtl ? 'rtl' : 'ltr')));\n        this.subscribeEvents();\n    }\n    /**\n     * Sets the disabled state of the DropDownButton.\n     */\n    set disabled(value) {\n        if (value && this.openState) {\n            this.openState = false;\n        }\n        this._disabled = value;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @hidden\n     */\n    get componentTabIndex() {\n        return this.disabled ? (-1) : this.tabIndex;\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.containerService.container : appendTo;\n    }\n    /**\n     * Configures the popup of the DropDownButton.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     * - `align: \"left\" | \"center\" | \"right\"`&mdash;Specifies the alignment of the popup.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true, popupClass: '' }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * @hidden\n     */\n    get anchorAlign() {\n        const align = { horizontal: this.popupSettings.align || 'left', vertical: 'bottom' };\n        if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n            align.horizontal = 'right';\n        }\n        return align;\n    }\n    /**\n     * @hidden\n     */\n    get popupAlign() {\n        const align = { horizontal: this.popupSettings.align || 'left', vertical: 'top' };\n        if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n            align.horizontal = 'right';\n        }\n        return align;\n    }\n    ngOnChanges(changes) {\n        if (isChanged(\"popupSettings\", changes) && isPresent(this.popupRef)) {\n            const popup = this.popupRef.popup.instance;\n            const newSettings = changes['popupSettings'].currentValue;\n            popup.popupClass = newSettings.popupClass;\n            popup.animate = newSettings.animate;\n            popup.popupAlign = this.popupAlign;\n        }\n    }\n    get popupClasses() {\n        const popupClasses = ['k-menu-popup'];\n        if (this._popupSettings.popupClass) {\n            popupClasses.push(this._popupSettings.popupClass);\n        }\n        return popupClasses.join(' ');\n    }\n    get openState() {\n        return this._open;\n    }\n    /**\n     * @hidden\n     */\n    set openState(open) {\n        if (this.disabled) {\n            return;\n        }\n        this._open = open;\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * @hidden\n     */\n    togglePopupVisibility() {\n        if (this._disabled) {\n            return;\n        }\n        this._toggle(!this.openState, true);\n        if (!this.isClosePrevented) {\n            this.focusService.focus(this.openState ? 0 : -1);\n        }\n    }\n    /**\n     * @hidden\n     */\n    onItemClick(index) {\n        this.togglePopupVisibility();\n        if (this.isClosePrevented) {\n            this.emitItemClickHandler(index);\n            return;\n        }\n        if (isDocumentAvailable() && !this.isClosePrevented) {\n            this.focusButton();\n        }\n        this.emitItemClickHandler(index);\n    }\n    ngOnDestroy() {\n        this.openState = false;\n        this.subs.unsubscribe();\n        this.destroyPopup();\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.subscribeListItemFocusEvent();\n        this.subscribeComponentBlurredEvent();\n        this.subscribeNavigationEvents();\n    }\n    subscribeListItemFocusEvent() {\n        this.subs.add(this.focusService.onFocus.subscribe(() => {\n            this._isFocused = true;\n        }));\n    }\n    subscribeComponentBlurredEvent() {\n        this._zone.runOutsideAngular(() => {\n            this.subs.add(this.navigationService.tab.pipe(filter(() => this._isFocused), tap(() => this.focusButton())).subscribe(this.handleTab.bind(this)));\n            this.subs.add(fromEvent(document, 'click')\n                .pipe(filter((event) => !this.wrapperContains(event.target)), filter(() => this._isFocused))\n                .subscribe(() => this._zone.run(() => this.blurWrapper())));\n        });\n    }\n    subscribeNavigationEvents() {\n        this.subs.add(this.navigationService.navigate\n            .subscribe(this.onArrowKeyNavigate.bind(this)));\n        this.subs.add(this.navigationService.enterup.subscribe(this.onNavigationEnterUp.bind(this)));\n        this.subs.add(this.navigationService.open.subscribe(this.onNavigationOpen.bind(this)));\n        this.subs.add(merge(this.navigationService.close, this.navigationService.esc).subscribe(this.onNavigationClose.bind(this)));\n    }\n    /**\n     * Toggles the visibility of the popup.\n     * If the `toggle` method is used to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        if (this.disabled) {\n            return;\n        }\n        const value = open === undefined ? !this.openState : open;\n        this._toggle(value, false);\n    }\n    /**\n     * @hidden\n     */\n    keyDownHandler(event, isHost) {\n        this.keyHandler(event, null, isHost);\n    }\n    /**\n     * @hidden\n     */\n    keyUpHandler(event) {\n        this.keyHandler(event, KeyEvents.keyup);\n    }\n    /**\n     * @hidden\n     */\n    keyHandler(event, keyEvent, isHost) {\n        if (this._disabled) {\n            return;\n        }\n        const eventData = event;\n        if (!isHost) {\n            eventData.stopImmediatePropagation();\n        }\n        const focused = this.focusService.focused || 0;\n        const action = this.navigationService.process({\n            altKey: eventData.altKey,\n            current: focused,\n            keyCode: eventData.keyCode,\n            keyEvent: keyEvent,\n            max: this._data ? this._data.length - 1 : 0,\n            min: 0,\n            target: event.target\n        });\n        if (action !== NavigationAction.Undefined &&\n            action !== NavigationAction.Tab &&\n            (action !== NavigationAction.Enter || (action === NavigationAction.Enter && this.openState))) {\n            if (!(event.keyCode === Keys.Space && action === NavigationAction.EnterUp)) {\n                eventData.preventDefault();\n            }\n        }\n    }\n    emitItemClickHandler(index) {\n        const dataItem = this._data[index];\n        if (this._itemClick) {\n            this._itemClick.emit(dataItem);\n        }\n        if (dataItem && dataItem.click && !dataItem.disabled) {\n            dataItem.click(dataItem);\n        }\n        this.focusService.focus(index);\n    }\n    focusWrapper() {\n        if (this.openState) {\n            this.togglePopupVisibility();\n            this.focusButton();\n        }\n    }\n    wrapperContains(element) {\n        return this.wrapper === element || this.wrapper.contains(element);\n    }\n    blurWrapper(emit = true) {\n        if (!this._isFocused) {\n            return;\n        }\n        if (this.openState) {\n            this.togglePopupVisibility();\n        }\n        this._isFocused = false;\n        if (emit) {\n            this._blur.emit();\n            this.cdr.markForCheck();\n        }\n    }\n    focusButton() {\n        if (this.button) {\n            this.button.nativeElement.focus();\n        }\n    }\n    handleTab() {\n        this.blurWrapper();\n    }\n    onNavigationEnterUp() {\n        if (!this._disabled && !this.openState) {\n            this._active = false;\n        }\n        if (this.openState) {\n            const focused = this.focusService.focused;\n            if (isPresent(focused) && focused !== -1) {\n                this.emitItemClickHandler(focused);\n            }\n        }\n        this.togglePopupVisibility();\n        if (!this.openState && isDocumentAvailable()) {\n            this.button.nativeElement.focus();\n        }\n    }\n    onNavigationOpen() {\n        if (!this._disabled && !this.openState) {\n            this.togglePopupVisibility();\n        }\n    }\n    onNavigationClose() {\n        if (this.openState && !this.isClosePrevented) {\n            this.togglePopupVisibility();\n            if (isDocumentAvailable()) {\n                this.button.nativeElement.focus();\n            }\n        }\n    }\n    onArrowKeyNavigate({ index }) {\n        this.focusService.focus(index);\n    }\n    _toggle(open, emitEvent) {\n        if (this.openState === open) {\n            return;\n        }\n        const eventArgs = new PreventableEvent();\n        if (emitEvent) {\n            if (open && !this.openState) {\n                this.open.emit(eventArgs);\n            }\n            else if (!open && this.openState) {\n                this.close.emit(eventArgs);\n            }\n            if (eventArgs.isDefaultPrevented()) {\n                this.isClosePrevented = true;\n                return;\n            }\n        }\n        this.openState = open;\n        this.destroyPopup();\n        if (this.openState) {\n            this.createPopup();\n        }\n    }\n    createPopup() {\n        this.popupRef = this.popupService.open({\n            anchor: this.elRef,\n            anchorAlign: this.anchorAlign,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.containerService.template,\n            popupAlign: this.popupAlign,\n            popupClass: this.popupClasses\n        });\n        this.popupSubs = this.popupRef.popupAnchorViewportLeave.subscribe(() => {\n            this.togglePopupVisibility();\n        });\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.close();\n            this.popupRef = null;\n            this.popupSubs.unsubscribe();\n            this.isClosePrevented = false;\n        }\n    }\n}\nListButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ListButton, deps: [{ token: FocusService }, { token: NavigationService }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3$1.PopupService }, { token: i0.ElementRef }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: PopupContainerService }], target: i0.ɵɵFactoryTarget.Component });\nListButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ListButton, selector: \"ng-component\", inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", buttonClass: \"buttonClass\", popupSettings: \"popupSettings\" }, outputs: { open: \"open\", close: \"close\" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ListButton, decorators: [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: FocusService }, { type: NavigationService }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3$1.PopupService }, { type: i0.ElementRef }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: PopupContainerService }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], buttonClass: [{\n                type: Input\n            }], open: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], popupSettings: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass Messages extends ComponentMessages {\n}\nMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: Messages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: Messages, selector: \"kendo-splitbutton-messages-base\", inputs: { splitButtonLabel: \"splitButtonLabel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: Messages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-splitbutton-messages-base'\n                }]\n        }], propDecorators: { splitButtonLabel: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedSplitButtonMessagesDirective extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedSplitButtonMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: LocalizedSplitButtonMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedSplitButtonMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: LocalizedSplitButtonMessagesDirective, selector: \"[kendoSplitButtonLocalizedMessages]\", providers: [\n        {\n            provide: Messages,\n            useExisting: forwardRef(() => LocalizedSplitButtonMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: LocalizedSplitButtonMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(() => LocalizedSplitButtonMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoSplitButtonLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst NAVIGATION_SETTINGS$2 = {\n    useLeftRightArrows: true\n};\nconst NAVIGATION_SETTINGS_PROVIDER$2 = {\n    provide: NAVIGATION_CONFIG,\n    useValue: NAVIGATION_SETTINGS$2\n};\nconst DEFAULT_ROUNDED$2 = 'medium';\nconst DEFAULT_FILL_MODE$2 = 'solid';\n/**\n * Represents the Kendo UI SplitButton component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-splitbutton [data]=\"data\" icon=\"clipboard\"\n *      (itemClick)=\"onSplitButtonItemClick($event)\"\n *      (buttonClick)=\"onSplitButtonClick()\">Paste</kendo-splitbutton>\n * `\n * })\n *\n * class AppComponent {\n *   public data: Array<any> = [{\n *       text: 'Keep Text Only',\n *       icon: 'clipboard-text',\n *       click: () => { console.log('Keep Text Only click handler'); }\n *   }, {\n *       text: 'Paste as HTML',\n *       icon: 'clipboard-code'\n *   }, {\n *       text: 'Paste Markdown',\n *       icon: 'clipboard-markdown'\n *   }, {\n *       text: 'Set Default Paste'\n *   }];\n *\n *   public onSplitButtonClick(dataItem: any): void {\n *       console.log('Paste');\n *   }\n *\n *   public onSplitButtonItemClick(dataItem: any): void {\n *       if (dataItem) {\n *           console.log(dataItem.text);\n *       }\n *   }\n * }\n * ```\n */\nclass SplitButtonComponent extends ListButton {\n    constructor(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr, renderer, containerService) {\n        super(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr, containerService);\n        this.localization = localization;\n        this.renderer = renderer;\n        /**\n         * Sets the text of the SplitButton.\n         */\n        this.text = '';\n        /**\n         * Defines an icon to be rendered next to the button text.\n         * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n         */\n        this.icon = '';\n        /**\n         * Defines the type attribute of the main button\n         */\n        this.type = 'button';\n        /**\n         * Defines the location of an image to be displayed next to the button text\n         * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n         */\n        this.imageUrl = '';\n        /**\n         * The size property specifies the padding of the SplitButton\n         * ([see example]({% slug api_buttons_splitbuttoncomponent %}#toc-size)).\n         *\n         * The possible values are:\n         * * `small`\n         * * `medium` (default)\n         * * `large`\n         * * `none`\n         */\n        this.size = 'medium';\n        /**\n         * The SplitButton allows you to specify predefined theme colors.\n         * The theme color will be applied as a background and border color while also amending the text color accordingly\n         * ([see example]({% slug api_buttons_splitbuttoncomponent %}#toc-themeColor)).\n         *\n         * The possible values are:\n         * * `base` &mdash;Applies coloring based on the `base` theme color. (default)\n         * * `primary` &mdash;Applies coloring based on the `primary` theme color.\n         * * `secondary`&mdash;Applies coloring based on the `secondary` theme color.\n         * * `tertiary`&mdash; Applies coloring based on the `tertiary` theme color.\n         * * `info`&mdash;Applies coloring based on the `info` theme color.\n         * * `success`&mdash; Applies coloring based on the `success` theme color.\n         * * `warning`&mdash; Applies coloring based on the `warning` theme color.\n         * * `error`&mdash; Applies coloring based on the `error` theme color.\n         * * `dark`&mdash; Applies coloring based on the `dark` theme color.\n         * * `light`&mdash; Applies coloring based on the `light` theme color.\n         * * `inverse`&mdash; Applies coloring based on the `inverse` theme color.\n         * * `none`&mdash; Removes the built in theme color.\n         */\n        this.themeColor = 'base';\n        /**\n         * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabIndex = 0;\n        /**\n         * Specifies the name of the [font icon]({% slug icons %}#toc-list-of-font-icons) that will\n         * be rendered for the button which opens the popup.\n         */\n        this.arrowButtonIcon = 'caret-alt-down';\n        /**\n         * Specifies the [`SVGIcon`](slug:api_icons_svgicon) that will\n         * be rendered for the button which opens the popup.\n         */\n        this.arrowButtonSvgIcon = caretAltDownIcon;\n        /**\n         * Fires each time the user clicks the main button.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         *    selector: 'my-app',\n         *    template: `\n         *        <kendo-splitbutton (buttonClick)=\"onSplitButtonClick()\" [data]=\"data\">\n         *            Reply\n         *        </kendo-splitbutton>\n         *    `\n         * })\n         * class AppComponent {\n         *    public data: Array<any> = ['Reply All', 'Forward', 'Reply & Delete'];\n         *\n         *    public onSplitButtonClick(): void {\n         *      console.log('SplitButton click');\n         *    }\n         * }\n         * ```\n         *\n         */\n        this.buttonClick = new EventEmitter();\n        /**\n         * Fires each time the user clicks on the drop-down list. The event data contains the data item bound to the clicked list item.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         *     selector: 'my-app',\n         *    template: `\n         *        <kendo-splitbutton (itemClick)=\"onSplitButtonItemClick($event)\" [data]=\"data\">\n         *          Reply\n         *      </kendo-splitbutton>\n         *    `\n         * })\n         * class AppComponent {\n         *    public data: Array<any> = ['Reply All', 'Forward', 'Reply & Delete'];\n         *\n         *   public onSplitButtonItemClick(dataItem?: string): void {\n         *        if (dataItem) {\n         *            console.log(dataItem);\n         *       }\n         *    }\n         * }\n         * ```\n         *\n         */\n        this.itemClick = new EventEmitter();\n        /**\n         * Fires each time the SplitButton gets focused.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the SplitButton gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel the event, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel the event, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.activeArrow = false;\n        this.listId = guid();\n        this.buttonText = '';\n        this.arrowButtonClicked = false;\n        this._rounded = DEFAULT_ROUNDED$2;\n        this._fillMode = DEFAULT_FILL_MODE$2;\n        this._itemClick = this.itemClick;\n        this._blur = this.onBlur;\n    }\n    /**\n     * The rounded property specifies the border radius of the SplitButton\n     * ([see example]({% slug api_buttons_splitbuttoncomponent %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$2;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the SplitButton\n     * ([see example]({% slug api_buttons_splitbuttoncomponent %}#toc-fillMode)).\n     *\n     * The available values are:\n     * * `solid` (default)\n     * * `flat`\n     * * `outline`\n     * * `link`\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$2;\n        this._fillMode = fillMode === 'clear' ? 'flat' : newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * When set to `true`, disables a SplitButton item\n     * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n     */\n    set disabled(value) {\n        if (this.isOpen) {\n            this.toggle(false);\n        }\n        this._disabled = value;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Configures the popup of the SplitButton.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     * - `align: \"left\" | \"center\" | \"right\"`&mdash;Specifies the alignment of the popup.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true, popupClass: '' }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Sets the data of the SplitButton.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n    set data(data) {\n        this._data = data || [];\n    }\n    get data() {\n        if (!this._data) {\n            this.data = [];\n        }\n        return this._data;\n    }\n    /**\n     * @hidden\n     */\n    get hasContent() {\n        return this.button?.nativeElement.childElementCount > 0;\n    }\n    /**\n     * @hidden\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @hidden\n     */\n    get componentTabIndex() {\n        return this.disabled ? -1 : this.tabIndex;\n    }\n    set isFocused(value) {\n        this._isFocused = value;\n    }\n    get isFocused() {\n        return this._isFocused && !this._disabled && isDocumentAvailable() && this.wrapperContains(document.activeElement);\n    }\n    get widgetClasses() {\n        return true;\n    }\n    get dir() {\n        return this.direction;\n    }\n    /**\n     * @hidden\n     */\n    get ariaLabel() {\n        const localizationMsg = this.localization.get('splitButtonLabel') || '';\n        return replaceMessagePlaceholder(localizationMsg, 'buttonText', this.buttonText);\n    }\n    /**\n     * @hidden\n     */\n    onButtonFocus(event) {\n        if (!this._disabled) {\n            // eslint-disable-next-line no-unused-expressions\n            !this._isFocused && this.onFocus.emit();\n            this._isFocused = true;\n            this.focusService.resetFocus();\n            const relatedTargetInList = event.relatedTarget && closest(event.relatedTarget, '.k-popup kendo-button-list');\n            if (this.openState && !relatedTargetInList) {\n                this.focusService.focus(0);\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    onArrowButtonClick() {\n        this.togglePopupVisibility();\n        this.arrowButtonClicked = false;\n    }\n    /**\n     * @hidden\n     */\n    toggleButtonActiveState(enable) {\n        this._active = enable;\n    }\n    /**\n     * @hidden\n     */\n    toggleArrowButtonActiveState(enable) {\n        this.arrowButtonClicked = true;\n        this.activeArrow = enable;\n    }\n    /**\n     * @hidden\n     */\n    onButtonClick() {\n        this.buttonClick.emit();\n    }\n    /**\n     * @hidden\n     */\n    onButtonBlur() {\n        if (!this.isOpen && !this.arrowButtonClicked) {\n            this.blurWrapper();\n        }\n    }\n    /**\n     * @hidden\n     */\n    keydown(event) {\n        this.keyDownHandler(event, true);\n        if (event.keyCode === Keys.Space) {\n            this._active = true;\n        }\n    }\n    /**\n     * @hidden\n     */\n    keyup(event) {\n        this._active = false;\n        if (event.keyCode !== Keys.Space) {\n            this.keyUpHandler(event);\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngAfterViewInit() {\n        this.containerService.container = this.containerRef;\n        this.containerService.template = this.popupTemplate;\n        this.updateButtonText();\n        this.handleClasses(this.rounded, 'rounded');\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('text')) {\n            this.updateButtonText();\n        }\n        if (anyChanged(['text', 'icon', 'svgIcon', 'iconClass', 'imageUrl'], changes)) {\n            this.toggleButtonIconClass();\n        }\n        if (isChanged('popupSettings', changes) && isPresent(this.popupRef)) {\n            const popup = this.popupRef.popup.instance;\n            const newSettings = changes['popupSettings'].currentValue;\n            popup.popupClass = newSettings.popupClass;\n            popup.animate = newSettings.animate;\n            popup.popupAlign = this.popupAlign;\n        }\n    }\n    /**\n     * @hidden\n     */\n    onNavigationEnterUp(args) {\n        if (args.target !== this.button.nativeElement) {\n            super.onNavigationEnterUp();\n        }\n    }\n    /**\n     * @hidden\n     */\n    togglePopupVisibility() {\n        if (isDocumentAvailable() && this.wrapperContains(document.activeElement) && this.arrowButtonClicked) {\n            this.button.nativeElement.focus();\n        }\n        super.togglePopupVisibility();\n    }\n    /**\n     * @hidden\n     */\n    wrapperContains(element) {\n        return (this.wrapper === element || this.wrapper.contains(element) || (this.popupRef && this.popupRef.popupElement.contains(element)));\n    }\n    /**\n     * @hidden\n     */\n    get anchorAlign() {\n        const align = { horizontal: this.popupSettings.align || 'left', vertical: 'bottom' };\n        if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n            align.horizontal = 'right';\n        }\n        return align;\n    }\n    /**\n     * @hidden\n     */\n    get popupAlign() {\n        const align = { horizontal: this.popupSettings.align || 'left', vertical: 'top' };\n        if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n            align.horizontal = 'right';\n        }\n        return align;\n    }\n    /**\n     * @hidden\n     */\n    get isIconButton() {\n        const hasIcon = this.icon || this.svgIcon || this.iconClass || this.imageUrl;\n        const hasTextContent = isDocumentAvailable() && this.button?.nativeElement.textContent.trim().length > 0;\n        return hasIcon && !hasTextContent;\n    }\n    /**\n     * Focuses the SplitButton component.\n     */\n    focus() {\n        if (isDocumentAvailable()) {\n            this.button.nativeElement.focus();\n        }\n    }\n    /**\n     * Blurs the SplitButton component.\n     */\n    blur() {\n        if (isDocumentAvailable()) {\n            this.button.nativeElement.blur();\n            this.blurWrapper();\n        }\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this.openState;\n    }\n    updateButtonText() {\n        if (isDocumentAvailable()) {\n            const innerText = this.wrapper.innerText\n                .split('\\n')\n                .join('')\n                .trim();\n            //setTimeout is needed because of `Expression has changed after it was checked.` error;\n            setTimeout(() => (this.buttonText = innerText), 0);\n        }\n    }\n    handleClasses(value, input) {\n        const elem = this.wrapperRef.nativeElement;\n        const classes = getStylingClasses('button', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n    toggleButtonIconClass() {\n        this.button.nativeElement.classList[this.isIconButton ? 'add' : 'remove']('k-button-icon');\n    }\n}\nSplitButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SplitButtonComponent, deps: [{ token: FocusService }, { token: NavigationService }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3$1.PopupService }, { token: i0.ElementRef }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: PopupContainerService }], target: i0.ɵɵFactoryTarget.Component });\nSplitButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: SplitButtonComponent, selector: \"kendo-splitbutton\", inputs: { text: \"text\", icon: \"icon\", svgIcon: \"svgIcon\", iconClass: \"iconClass\", type: \"type\", imageUrl: \"imageUrl\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", themeColor: \"themeColor\", disabled: \"disabled\", popupSettings: \"popupSettings\", tabIndex: \"tabIndex\", textField: \"textField\", data: \"data\", buttonClass: \"buttonClass\", arrowButtonClass: \"arrowButtonClass\", arrowButtonIcon: \"arrowButtonIcon\", arrowButtonSvgIcon: \"arrowButtonSvgIcon\" }, outputs: { buttonClick: \"buttonClick\", itemClick: \"itemClick\", onFocus: \"focus\", onBlur: \"blur\", open: \"open\", close: \"close\" }, host: { listeners: { \"keydown\": \"keydown($event)\", \"keyup\": \"keyup($event)\" }, properties: { \"class.k-focus\": \"this.isFocused\", \"class.k-split-button\": \"this.widgetClasses\", \"class.k-button-group\": \"this.widgetClasses\", \"attr.dir\": \"this.dir\" } }, providers: [\n        FocusService,\n        NavigationService,\n        NAVIGATION_SETTINGS_PROVIDER$2,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.splitbutton'\n        },\n        PopupContainerService\n    ], queries: [{ propertyName: \"itemTemplate\", first: true, predicate: ButtonItemTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"button\", first: true, predicate: [\"button\"], descendants: true, read: ElementRef }, { propertyName: \"arrowButton\", first: true, predicate: [\"arrowButton\"], descendants: true, read: ElementRef }, { propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true }, { propertyName: \"containerRef\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef }], exportAs: [\"kendoSplitButton\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoSplitButtonLocalizedMessages\n            i18n-splitButtonLabel=\"kendo.splitbutton.splitButtonLabel|The text for the SplitButton aria-label\"\n            splitButtonLabel=\"{{ '{buttonText} splitbutton' }}\">\n        </ng-container>\n        <button\n            kendoButton\n            #button\n            [type]=\"type\"\n            [tabindex]=\"componentTabIndex\"\n            [disabled]=\"disabled\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"themeColor\"\n            [icon]=\"icon\"\n            [svgIcon]=\"svgIcon\"\n            [class.k-active]=\"active\"\n            [iconClass]=\"iconClass\"\n            [imageUrl]=\"imageUrl\"\n            [ngClass]=\"buttonClass\"\n            (focus)=\"onButtonFocus($event)\"\n            (click)=\"onButtonClick()\"\n            (blur)=\"onButtonBlur()\"\n            (mousedown)=\"toggleButtonActiveState(true)\"\n            (mouseup)=\"toggleButtonActiveState(false)\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"openState\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-owns]=\"listId\"\n            [attr.aria-label]=\"ariaLabel\"\n        >\n            <span *ngIf=\"text\" class=\"k-button-text\">\n                {{ text }}\n            </span><ng-content></ng-content>\n        </button>\n        <button kendoButton #arrowButton type=\"button\"\n            class=\"k-split-button-arrow\"\n            [class.k-active]=\"activeArrow\"\n            [ngClass]=\"arrowButtonClass\"\n            [disabled]=\"disabled\"\n            [icon]=\"arrowButtonIcon\"\n            [svgIcon]=\"arrowButtonSvgIcon\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"themeColor\"\n            [tabindex]=\"-1\"\n            aria-hidden=\"true\"\n            (click)=\"onArrowButtonClick()\"\n            (mousedown)=\"toggleArrowButtonActiveState(true)\"\n            (mouseup)=\"toggleArrowButtonActiveState(false)\"\n        ></button>\n        <ng-template #popupTemplate>\n            <kendo-button-list\n                [id]=\"listId\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [itemTemplate]=\"itemTemplate\"\n                (onItemClick)=\"onItemClick($event)\"\n                (keydown)=\"keyDownHandler($event)\"\n                (keyup)=\"keyUpHandler($event)\"\n                [attr.dir]=\"dir\"\n                [size]=\"size\"\n            >\n            </kendo-button-list>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `, isInline: true, components: [{ type: ButtonComponent, selector: \"button[kendoButton], span[kendoButton], kendo-button\", inputs: [\"toggleable\", \"togglable\", \"selected\", \"tabIndex\", \"imageUrl\", \"iconClass\", \"icon\", \"disabled\", \"size\", \"rounded\", \"fillMode\", \"themeColor\", \"svgIcon\", \"role\", \"primary\", \"look\"], outputs: [\"selectedChange\", \"click\"], exportAs: [\"kendoButton\"] }, { type: ListComponent, selector: \"kendo-button-list\", inputs: [\"data\", \"textField\", \"itemTemplate\", \"size\"], outputs: [\"onItemClick\", \"onItemBlur\"] }], directives: [{ type: LocalizedSplitButtonMessagesDirective, selector: \"[kendoSplitButtonLocalizedMessages]\" }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SplitButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoSplitButton',\n                    providers: [\n                        FocusService,\n                        NavigationService,\n                        NAVIGATION_SETTINGS_PROVIDER$2,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.splitbutton'\n                        },\n                        PopupContainerService\n                    ],\n                    selector: 'kendo-splitbutton',\n                    template: `\n        <ng-container kendoSplitButtonLocalizedMessages\n            i18n-splitButtonLabel=\"kendo.splitbutton.splitButtonLabel|The text for the SplitButton aria-label\"\n            splitButtonLabel=\"{{ '{buttonText} splitbutton' }}\">\n        </ng-container>\n        <button\n            kendoButton\n            #button\n            [type]=\"type\"\n            [tabindex]=\"componentTabIndex\"\n            [disabled]=\"disabled\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"themeColor\"\n            [icon]=\"icon\"\n            [svgIcon]=\"svgIcon\"\n            [class.k-active]=\"active\"\n            [iconClass]=\"iconClass\"\n            [imageUrl]=\"imageUrl\"\n            [ngClass]=\"buttonClass\"\n            (focus)=\"onButtonFocus($event)\"\n            (click)=\"onButtonClick()\"\n            (blur)=\"onButtonBlur()\"\n            (mousedown)=\"toggleButtonActiveState(true)\"\n            (mouseup)=\"toggleButtonActiveState(false)\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"openState\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-owns]=\"listId\"\n            [attr.aria-label]=\"ariaLabel\"\n        >\n            <span *ngIf=\"text\" class=\"k-button-text\">\n                {{ text }}\n            </span><ng-content></ng-content>\n        </button>\n        <button kendoButton #arrowButton type=\"button\"\n            class=\"k-split-button-arrow\"\n            [class.k-active]=\"activeArrow\"\n            [ngClass]=\"arrowButtonClass\"\n            [disabled]=\"disabled\"\n            [icon]=\"arrowButtonIcon\"\n            [svgIcon]=\"arrowButtonSvgIcon\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"themeColor\"\n            [tabindex]=\"-1\"\n            aria-hidden=\"true\"\n            (click)=\"onArrowButtonClick()\"\n            (mousedown)=\"toggleArrowButtonActiveState(true)\"\n            (mouseup)=\"toggleArrowButtonActiveState(false)\"\n        ></button>\n        <ng-template #popupTemplate>\n            <kendo-button-list\n                [id]=\"listId\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [itemTemplate]=\"itemTemplate\"\n                (onItemClick)=\"onItemClick($event)\"\n                (keydown)=\"keyDownHandler($event)\"\n                (keyup)=\"keyUpHandler($event)\"\n                [attr.dir]=\"dir\"\n                [size]=\"size\"\n            >\n            </kendo-button-list>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FocusService }, { type: NavigationService }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3$1.PopupService }, { type: i0.ElementRef }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: PopupContainerService }]; }, propDecorators: { text: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], iconClass: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], imageUrl: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], themeColor: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], popupSettings: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], buttonClass: [{\n                type: Input\n            }], arrowButtonClass: [{\n                type: Input\n            }], arrowButtonIcon: [{\n                type: Input\n            }], arrowButtonSvgIcon: [{\n                type: Input\n            }], buttonClick: [{\n                type: Output\n            }], itemClick: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], open: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], itemTemplate: [{\n                type: ContentChild,\n                args: [ButtonItemTemplateDirective]\n            }], button: [{\n                type: ViewChild,\n                args: ['button', { read: ElementRef }]\n            }], arrowButton: [{\n                type: ViewChild,\n                args: ['arrowButton', { read: ElementRef }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate']\n            }], containerRef: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef }]\n            }], isFocused: [{\n                type: HostBinding,\n                args: ['class.k-focus']\n            }], widgetClasses: [{\n                type: HostBinding,\n                args: ['class.k-split-button']\n            }, {\n                type: HostBinding,\n                args: ['class.k-button-group']\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], keydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], keyup: [{\n                type: HostListener,\n                args: ['keyup', ['$event']]\n            }] } });\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug rtl_buttons %}).\n */\nclass SplitButtonCustomMessagesComponent extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nSplitButtonCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SplitButtonCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nSplitButtonCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: SplitButtonCustomMessagesComponent, selector: \"kendo-splitbutton-messages\", providers: [{\n            provide: Messages,\n            useExisting: forwardRef(() => SplitButtonCustomMessagesComponent)\n        }], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SplitButtonCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [{\n                            provide: Messages,\n                            useExisting: forwardRef(() => SplitButtonCustomMessagesComponent)\n                        }],\n                    selector: 'kendo-splitbutton-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `SplitButtonComponent`&mdash;The SplitButtonComponent component class.\n */\nclass SplitButtonModule {\n}\nSplitButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SplitButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSplitButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SplitButtonModule, declarations: [SplitButtonComponent, LocalizedSplitButtonMessagesDirective, SplitButtonCustomMessagesComponent], imports: [CommonModule, PopupModule, ButtonModule, ListModule], exports: [SplitButtonComponent, ListModule, LocalizedSplitButtonMessagesDirective, SplitButtonCustomMessagesComponent] });\nSplitButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SplitButtonModule, imports: [[CommonModule, PopupModule, ButtonModule, ListModule], ListModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SplitButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [SplitButtonComponent, LocalizedSplitButtonMessagesDirective, SplitButtonCustomMessagesComponent],\n                    exports: [SplitButtonComponent, ListModule, LocalizedSplitButtonMessagesDirective, SplitButtonCustomMessagesComponent],\n                    imports: [CommonModule, PopupModule, ButtonModule, ListModule]\n                }]\n        }] });\n\nconst NAVIGATION_SETTINGS$1 = {\n    useLeftRightArrows: true\n};\nconst NAVIGATION_SETTINGS_PROVIDER$1 = {\n    provide: NAVIGATION_CONFIG,\n    useValue: NAVIGATION_SETTINGS$1\n};\nconst DEFAULT_FILL_MODE$1 = 'solid';\n/**\n * Represents the Kendo UI DropDownButton component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownbutton [data]=\"data\">\n *    User Settings\n *  </kendo-dropdownbutton>\n * `\n * })\n * class AppComponent {\n *   public data: Array<any> = [{\n *       text: 'My Profile'\n *   }, {\n *       text: 'Friend Requests'\n *   }, {\n *       text: 'Account Settings'\n *   }, {\n *       text: 'Support'\n *   }, {\n *       text: 'Log Out'\n *   }];\n * }\n * ```\n */\nclass DropDownButtonComponent extends ListButton {\n    constructor(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr, containerService) {\n        super(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr, containerService);\n        this.containerService = containerService;\n        /**\n         * Defines the name of an existing icon in the Kendo UI theme.\n         */\n        this.icon = '';\n        /**\n         * Defines the list of CSS classes which are used for styling the Button with custom icons.\n         */\n        this.iconClass = '';\n        /**\n         * Defines a URL for styling the button with a custom image.\n         */\n        this.imageUrl = '';\n        /**\n         * The size property specifies the padding of the DropDownButton\n         * ([see example]({% slug api_buttons_dropdownbuttoncomponent %}#toc-size)).\n         *\n         * The possible values are:\n         * * `small`\n         * * `medium` (default)\n         * * `large`\n         * * `none`\n         */\n        this.size = 'medium';\n        /**\n         * The rounded property specifies the border radius of the DropDownButton\n         * ([see example]({% slug api_buttons_dropdownbuttoncomponent %}#toc-rounded)).\n         *\n         * The possible values are:\n         * * `small`\n         * * `medium` (default)\n         * * `large`\n         * * `full`\n         * * `none`\n         */\n        this.rounded = 'medium';\n        /**\n         * The DropDownButton allows you to specify predefined theme colors.\n         * The theme color will be applied as a background and border color while also amending the text color accordingly\n         * ([see example]({% slug api_buttons_dropdownbuttoncomponent %}#toc-themeColor)).\n         *\n         * The possible values are:\n         * * `base` &mdash;Applies coloring based on the `base` theme color. (default)\n         * * `primary` &mdash;Applies coloring based on the `primary` theme color.\n         * * `secondary`&mdash;Applies coloring based on the `secondary` theme color.\n         * * `tertiary`&mdash; Applies coloring based on the `tertiary` theme color.\n         * * `info`&mdash;Applies coloring based on the `info` theme color.\n         * * `success`&mdash; Applies coloring based on the `success` theme color.\n         * * `warning`&mdash; Applies coloring based on the `warning` theme color.\n         * * `error`&mdash; Applies coloring based on the `error` theme color.\n         * * `dark`&mdash; Applies coloring based on the `dark` theme color.\n         * * `light`&mdash; Applies coloring based on the `light` theme color.\n         * * `inverse`&mdash; Applies coloring based on the `inverse` theme color.\n         * * `none` &mdash;Removes the default CSS class (no class would be rendered).\n         */\n        this.themeColor = 'base';\n        /**\n         * Fires each time the user clicks on a drop-down list item. The event data contains the data item bound to the clicked list item.\n         */\n        this.itemClick = new EventEmitter();\n        /**\n         * Fires each time the DropDownButton gets focused.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the DropDownButton gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        this.listId = guid();\n        this.buttonId = guid();\n        this._fillMode = DEFAULT_FILL_MODE$1;\n        this._itemClick = this.itemClick;\n        this._blur = this.onBlur;\n    }\n    /**\n     * Sets or gets the data of the DropDownButton.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n    set data(data) {\n        this._data = data || [];\n    }\n    get data() {\n        return this._data;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the DropDownButton\n     * ([see example]({% slug api_buttons_dropdownbuttoncomponent %}#toc-fillMode)).\n     *\n     * The available values are:\n     * * `solid` (default)\n     * * `flat`\n     * * `outline`\n     * * `link`\n     * * `none`\n     */\n    set fillMode(fillMode) {\n        this._fillMode = fillMode === 'clear' ? 'flat' : fillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    get focused() {\n        return this._isFocused && !this._disabled;\n    }\n    get widgetClasses() {\n        return true;\n    }\n    get dir() {\n        return this.direction;\n    }\n    /**\n     * @hidden\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @hidden\n     */\n    keydown(event) {\n        this.keyDownHandler(event, true);\n        if (event.keyCode === Keys.Space || event.keyCode === Keys.Enter) {\n            this._active = true;\n        }\n        if (event.keyCode === Keys.Enter) {\n            event.preventDefault();\n        }\n    }\n    /**\n     * @hidden\n     */\n    keyup(event) {\n        this.keyUpHandler(event);\n        this._active = false;\n    }\n    /**\n     * @hidden\n     */\n    mousedown(event) {\n        if (this._disabled) {\n            event.preventDefault();\n        }\n        this._active = true;\n    }\n    /**\n     * @hidden\n     */\n    mouseup(event) {\n        if (this._disabled) {\n            event.preventDefault();\n        }\n        this._active = false;\n    }\n    /**\n     * @hidden\n     */\n    openPopup() {\n        this._isFocused = true;\n        this.togglePopupVisibility();\n    }\n    /**\n     * @hidden\n     */\n    onButtonBlur() {\n        if (!this.openState) {\n            this.blurWrapper();\n        }\n    }\n    /**\n     * Focuses the DropDownButton component.\n     */\n    focus() {\n        if (isDocumentAvailable()) {\n            this.button.nativeElement.focus();\n        }\n    }\n    /**\n     * Blurs the DropDownButton component.\n     */\n    blur() {\n        if (isDocumentAvailable()) {\n            this.button.nativeElement.blur();\n            this.blurWrapper();\n        }\n    }\n    ngAfterViewInit() {\n        this.containerService.container = this.container;\n        this.containerService.template = this.popupTemplate;\n    }\n    /**\n     * @hidden\n     */\n    handleFocus(event) {\n        if (!this._disabled) {\n            // eslint-disable-next-line no-unused-expressions\n            !this._isFocused && this.onFocus.emit();\n            this._isFocused = true;\n            this.focusService.resetFocus();\n            const relatedTargetInList = event.relatedTarget && closest(event.relatedTarget, '.k-popup kendo-button-list');\n            if (this.openState && !relatedTargetInList) {\n                this.focusService.focus(0);\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    wrapperContains(element) {\n        return this.wrapper === element\n            || this.wrapper.contains(element)\n            || (this.popupRef && this.popupRef.popupElement.contains(element));\n    }\n}\nDropDownButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropDownButtonComponent, deps: [{ token: FocusService }, { token: NavigationService }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3$1.PopupService }, { token: i0.ElementRef }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: PopupContainerService }], target: i0.ɵɵFactoryTarget.Component });\nDropDownButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DropDownButtonComponent, selector: \"kendo-dropdownbutton\", inputs: { icon: \"icon\", svgIcon: \"svgIcon\", iconClass: \"iconClass\", imageUrl: \"imageUrl\", textField: \"textField\", data: \"data\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", themeColor: \"themeColor\" }, outputs: { itemClick: \"itemClick\", onFocus: \"focus\", onBlur: \"blur\" }, host: { listeners: { \"keydown\": \"keydown($event)\", \"keyup\": \"keyup($event)\", \"mousedown\": \"mousedown($event)\", \"mouseup\": \"mouseup($event)\" }, properties: { \"class.k-focus\": \"this.focused\", \"class.k-dropdown-button\": \"this.widgetClasses\", \"attr.dir\": \"this.dir\" } }, providers: [\n        FocusService,\n        NavigationService,\n        NAVIGATION_SETTINGS_PROVIDER$1,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.dropdownbutton'\n        },\n        PopupContainerService\n    ], queries: [{ propertyName: \"itemTemplate\", first: true, predicate: ButtonItemTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"button\", first: true, predicate: [\"button\"], descendants: true, read: ElementRef }, { propertyName: \"buttonList\", first: true, predicate: [\"buttonList\"], descendants: true }, { propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true }, { propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef }], exportAs: [\"kendoDropDownButton\"], usesInheritance: true, ngImport: i0, template: `\n        <button kendoButton #button\n            type=\"button\"\n            [id]=\"buttonId\"\n            [tabindex]=\"componentTabIndex\"\n            [class.k-active]=\"active\"\n            [disabled]=\"disabled\"\n            [icon]=\"icon\"\n            [svgIcon]=\"svgIcon\"\n            [iconClass]=\"iconClass\"\n            [imageUrl]=\"imageUrl\"\n            [ngClass]=\"buttonClass\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"fillMode ? themeColor : null\"\n            (click)=\"openPopup()\"\n            (focus)=\"handleFocus($event)\"\n            (blur)=\"onButtonBlur()\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"openState\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-controls]=\"listId\"\n        >\n            <ng-content></ng-content>\n        </button>\n        <ng-template #popupTemplate>\n            <kendo-button-list\n                #buttonList\n                [id]=\"listId\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [itemTemplate]=\"itemTemplate\"\n                (onItemClick)=\"onItemClick($event)\"\n                (keydown)=\"keyDownHandler($event)\"\n                (keyup)=\"keyUpHandler($event)\"\n                [attr.dir]=\"dir\"\n                [attr.aria-labelledby]=\"buttonId\"\n                [size]=\"size\"\n            >\n            </kendo-button-list>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `, isInline: true, components: [{ type: ButtonComponent, selector: \"button[kendoButton], span[kendoButton], kendo-button\", inputs: [\"toggleable\", \"togglable\", \"selected\", \"tabIndex\", \"imageUrl\", \"iconClass\", \"icon\", \"disabled\", \"size\", \"rounded\", \"fillMode\", \"themeColor\", \"svgIcon\", \"role\", \"primary\", \"look\"], outputs: [\"selectedChange\", \"click\"], exportAs: [\"kendoButton\"] }, { type: ListComponent, selector: \"kendo-button-list\", inputs: [\"data\", \"textField\", \"itemTemplate\", \"size\"], outputs: [\"onItemClick\", \"onItemBlur\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropDownButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoDropDownButton',\n                    providers: [\n                        FocusService,\n                        NavigationService,\n                        NAVIGATION_SETTINGS_PROVIDER$1,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.dropdownbutton'\n                        },\n                        PopupContainerService\n                    ],\n                    selector: 'kendo-dropdownbutton',\n                    template: `\n        <button kendoButton #button\n            type=\"button\"\n            [id]=\"buttonId\"\n            [tabindex]=\"componentTabIndex\"\n            [class.k-active]=\"active\"\n            [disabled]=\"disabled\"\n            [icon]=\"icon\"\n            [svgIcon]=\"svgIcon\"\n            [iconClass]=\"iconClass\"\n            [imageUrl]=\"imageUrl\"\n            [ngClass]=\"buttonClass\"\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [themeColor]=\"fillMode ? themeColor : null\"\n            (click)=\"openPopup()\"\n            (focus)=\"handleFocus($event)\"\n            (blur)=\"onButtonBlur()\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"openState\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-controls]=\"listId\"\n        >\n            <ng-content></ng-content>\n        </button>\n        <ng-template #popupTemplate>\n            <kendo-button-list\n                #buttonList\n                [id]=\"listId\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [itemTemplate]=\"itemTemplate\"\n                (onItemClick)=\"onItemClick($event)\"\n                (keydown)=\"keyDownHandler($event)\"\n                (keyup)=\"keyUpHandler($event)\"\n                [attr.dir]=\"dir\"\n                [attr.aria-labelledby]=\"buttonId\"\n                [size]=\"size\"\n            >\n            </kendo-button-list>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FocusService }, { type: NavigationService }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3$1.PopupService }, { type: i0.ElementRef }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: PopupContainerService }]; }, propDecorators: { icon: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], iconClass: [{\n                type: Input\n            }], imageUrl: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], themeColor: [{\n                type: Input\n            }], itemClick: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], focused: [{\n                type: HostBinding,\n                args: ['class.k-focus']\n            }], widgetClasses: [{\n                type: HostBinding,\n                args: ['class.k-dropdown-button']\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], itemTemplate: [{\n                type: ContentChild,\n                args: [ButtonItemTemplateDirective]\n            }], button: [{\n                type: ViewChild,\n                args: ['button', { read: ElementRef }]\n            }], buttonList: [{\n                type: ViewChild,\n                args: ['buttonList']\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate']\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef }]\n            }], keydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], keyup: [{\n                type: HostListener,\n                args: ['keyup', ['$event']]\n            }], mousedown: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }], mouseup: [{\n                type: HostListener,\n                args: ['mouseup', ['$event']]\n            }] } });\n\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `DropDownButtonComponent`&mdash;The DropDownButtonComponent component class.\n */\nclass DropDownButtonModule {\n}\nDropDownButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropDownButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropDownButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropDownButtonModule, declarations: [DropDownButtonComponent], imports: [CommonModule, PopupModule, ListModule, ButtonModule], exports: [DropDownButtonComponent, ListModule] });\nDropDownButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropDownButtonModule, imports: [[CommonModule, PopupModule, ListModule, ButtonModule], ListModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropDownButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [DropDownButtonComponent],\n                    exports: [DropDownButtonComponent, ListModule],\n                    imports: [CommonModule, PopupModule, ListModule, ButtonModule]\n                }]\n        }] });\n\nconst DEFAULT_SIZE$1 = 'medium';\nconst DEFAULT_ROUNDED$1 = 'medium';\nconst DEFAULT_THEME_COLOR$1 = 'base';\nconst DEFAULT_FILL_MODE = 'solid';\n/**\n * Displays a Chip that represents an input, attribute or an action.\n */\nclass ChipComponent {\n    constructor(element, renderer, ngZone, localizationService) {\n        this.element = element;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.localizationService = localizationService;\n        /**\n         * Specifies the selected state of the Chip.\n         * @default false\n         */\n        this.selected = false;\n        /**\n         * Specifies if the Chip will be removable or not.\n         * If the property is set to `true`, the Chip renders a remove icon.\n         * @default false\n         */\n        this.removable = false;\n        /**\n         * If set to `true`, the Chip will be disabled.\n         * @default false\n         */\n        this.disabled = false;\n        /**\n         * Fires each time the user clicks the remove icon of the Chip.\n         */\n        this.remove = new EventEmitter();\n        /**\n         * Fires each time the user clicks the content of the Chip.\n         */\n        this.contentClick = new EventEmitter();\n        this.tabIndex = 0;\n        this.hostClass = true;\n        /**\n         * @hidden\n         */\n        this.defaultRemoveIcon = xCircleIcon;\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        this._themeColor = 'base';\n        this.focused = false;\n        this.subs = new Subscription();\n        validatePackage(packageMetadata);\n        this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    }\n    /**\n     * The size property specifies the padding of the Chip\n     * ([see example]({% slug appearance_chip %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$1;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the Chip\n     * ([see example]({% slug appearance_chip %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$1;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the Chip\n     * ([see example]({% slug appearance_chip %}#toc-fillMode)).\n     *\n     * The possible values are:\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE;\n        this.handleClasses(newFillMode, 'fillMode');\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * The Chip allows you to specify predefined theme colors.\n     * The theme color will be applied as a background and border color while also amending the text color accordingly\n     * ([see example]({% slug appearance_chip %}#toc-themeColor)).\n     *\n     * The possible values are:\n     * * `base` (default)\n     * * `info`\n     * * `success`\n     * * `warning`\n     * * `error`\n     * * `none`\n     */\n    set themeColor(themeColor) {\n        const newThemeColor = themeColor ? themeColor : DEFAULT_THEME_COLOR$1;\n        this.handleThemeColor(newThemeColor);\n        this._themeColor = newThemeColor;\n    }\n    get themeColor() {\n        return this._themeColor;\n    }\n    get hasIconClass() {\n        return Boolean(this.icon || this.iconClass || this.avatarClass);\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get selectedClass() {\n        return this.selected;\n    }\n    get focusedClass() {\n        return this.focused;\n    }\n    ngOnInit() {\n        this.subs.add(this.localizationService.changes\n            .subscribe(({ rtl }) => this.direction = rtl ? 'rtl' : 'ltr'));\n        this.renderer.setAttribute(this.element.nativeElement, 'role', 'button');\n    }\n    ngOnDestroy() {\n        this.subs.unsubscribe();\n    }\n    ngOnChanges(changes) {\n        if (changes && changes['selected']) {\n            const hasAriaSelected = this.element.nativeElement.hasAttribute('aria-selected');\n            if (!hasAriaSelected) {\n                this.renderer.setAttribute(this.element.nativeElement, 'aria-pressed', `${this.selected}`);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        const chip = this.element.nativeElement;\n        const stylingOptions = ['size', 'rounded', 'fillMode'];\n        stylingOptions.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n        this.attachElementEventHandlers(chip);\n    }\n    /**\n     * @hidden\n     */\n    get kendoIconClass() {\n        this.verifyIconSettings([this.iconClass, this.avatarClass]);\n        return `k-i-${this.icon}`;\n    }\n    /**\n     * @hidden\n     */\n    get customIconClass() {\n        this.verifyIconSettings([this.icon, this.avatarClass]);\n        return this.iconClass;\n    }\n    /**\n     * @hidden\n     */\n    get chipAvatarClass() {\n        this.verifyIconSettings([this.icon, this.iconClass]);\n        return this.avatarClass;\n    }\n    /**\n     * @hidden\n     */\n    get removeIconClass() {\n        return this.removeIcon ? this.removeIcon : 'k-i-x-circle';\n    }\n    /**\n     * Focuses the Chip component.\n     */\n    focus() {\n        if (isDocumentAvailable()) {\n            this.element.nativeElement.focus();\n        }\n    }\n    /**\n     * Blurs the Chip component.\n     */\n    blur() {\n        if (isDocumentAvailable()) {\n            this.element.nativeElement.blur();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onRemoveClick(e) {\n        if (this.removable) {\n            this.remove.emit({ sender: this, originalEvent: e });\n        }\n    }\n    attachElementEventHandlers(chip) {\n        this.ngZone.runOutsideAngular(() => {\n            this.subs.add(this.renderer.listen(chip, 'focus', () => {\n                this.renderer.addClass(chip, 'k-focus');\n            }));\n            this.subs.add(this.renderer.listen(chip, 'blur', () => {\n                this.renderer.removeClass(chip, 'k-focus');\n            }));\n            this.subs.add(this.renderer.listen(chip, 'click', (e) => {\n                const isRemoveClicked = closest(e.target, '.k-chip-remove-action');\n                if (!isRemoveClicked) {\n                    this.ngZone.run(() => {\n                        this.contentClick.emit({ sender: this, originalEvent: e });\n                    });\n                }\n            }));\n            this.subs.add(this.renderer.listen(chip, 'keydown', this.keyDownHandler.bind(this)));\n        });\n    }\n    /**\n     * @hidden\n     */\n    verifyIconSettings(iconsToCheck) {\n        if (isDevMode()) {\n            if (iconsToCheck.filter(icon => icon !== null && icon !== undefined).length > 0) {\n                this.renderer.removeClass(this.element.nativeElement, 'k-chip-has-icon');\n                throw new Error('Invalid configuration: Having multiple icons is not supported. Only a single icon on a chip can be displayed.');\n            }\n        }\n    }\n    handleClasses(value, input) {\n        const elem = this.element.nativeElement;\n        const classes = getStylingClasses('chip', input, this[input], value);\n        if (input === 'fillMode') {\n            this.handleThemeColor(this.themeColor, this[input], value);\n        }\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n    handleThemeColor(value, prevFillMode, fillMode) {\n        const elem = this.element.nativeElement;\n        const removeFillMode = prevFillMode ? prevFillMode : this.fillMode;\n        const addFillMode = fillMode ? fillMode : this.fillMode;\n        const themeColorClass = getThemeColorClasses('chip', removeFillMode, addFillMode, this.themeColor, value);\n        this.renderer.removeClass(elem, themeColorClass.toRemove);\n        if (addFillMode !== 'none' && fillMode !== 'none') {\n            if (themeColorClass.toAdd) {\n                this.renderer.addClass(elem, themeColorClass.toAdd);\n            }\n        }\n    }\n    keyDownHandler(e) {\n        const isEnterOrSpace = e.keyCode === Keys.Enter || e.keyCode === Keys.Space;\n        const isDeleteOrBackspace = e.keyCode === Keys.Delete || e.keyCode === Keys.Backspace;\n        if (this.disabled) {\n            return;\n        }\n        if (isEnterOrSpace) {\n            this.ngZone.run(() => {\n                this.contentClick.emit({ sender: this, originalEvent: e });\n            });\n        }\n        else if (isDeleteOrBackspace && this.removable) {\n            this.ngZone.run(() => {\n                this.remove.emit({ sender: this, originalEvent: e });\n            });\n        }\n    }\n}\nChipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ChipComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nChipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ChipComponent, selector: \"kendo-chip\", inputs: { label: \"label\", icon: \"icon\", svgIcon: \"svgIcon\", iconClass: \"iconClass\", avatarClass: \"avatarClass\", selected: \"selected\", removable: \"removable\", removeIcon: \"removeIcon\", removeSvgIcon: \"removeSvgIcon\", disabled: \"disabled\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", themeColor: \"themeColor\" }, outputs: { remove: \"remove\", contentClick: \"contentClick\" }, host: { properties: { \"attr.tabindex\": \"this.tabIndex\", \"class.k-chip\": \"this.hostClass\", \"class.k-chip-has-icon\": \"this.hasIconClass\", \"attr.aria-disabled\": \"this.disabledClass\", \"class.k-disabled\": \"this.disabledClass\", \"class.k-selected\": \"this.selectedClass\", \"class.k-focus\": \"this.focusedClass\", \"attr.dir\": \"this.direction\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.chip'\n        }\n    ], usesOnChanges: true, ngImport: i0, template: `\n        <kendo-icon-wrapper\n            *ngIf=\"icon || svgIcon\"\n            size=\"small\"\n            innerCssClass=\"k-chip-icon\"\n            [name]=\"icon\"\n            [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n\n        <kendo-icon-wrapper\n            *ngIf=\"iconClass\"\n            size=\"small\"\n            innerCssClass=\"k-chip-icon\"\n            [customFontClass]=\"customIconClass\"></kendo-icon-wrapper>\n\n        <span\n            *ngIf=\"avatarClass\"\n            class=\"k-chip-avatar k-avatar k-avatar-md k-avatar-solid k-avatar-solid-primary k-rounded-full\">\n            <span class=\"k-avatar-image\" [ngClass]=\"chipAvatarClass\"></span>\n        </span>\n\n        <span class=\"k-chip-content\">\n            <span class=\"k-chip-label\" *ngIf=\"label\">\n                {{ label }}\n            </span>\n            <ng-content *ngIf=\"!label\"></ng-content>\n        </span>\n\n        <span class=\"k-chip-actions\">\n            <span class=\"k-chip-action k-chip-remove-action\"\n                *ngIf=\"removable\"\n                (click)=\"onRemoveClick($event)\">\n                <kendo-icon-wrapper\n                    name=\"x-circle\"\n                    size=\"small\"\n                    [svgIcon]=\"defaultRemoveIcon || removeSvgIcon\"\n                    [customFontClass]=\"removeIcon\"></kendo-icon-wrapper>\n\n            </span>\n        </span>\n    `, isInline: true, components: [{ type: i2.IconWrapperComponent, selector: \"kendo-icon-wrapper\", inputs: [\"name\", \"svgIcon\", \"innerCssClass\", \"customFontClass\", \"size\"], exportAs: [\"kendoIconWrapper\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ChipComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-chip',\n                    template: `\n        <kendo-icon-wrapper\n            *ngIf=\"icon || svgIcon\"\n            size=\"small\"\n            innerCssClass=\"k-chip-icon\"\n            [name]=\"icon\"\n            [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n\n        <kendo-icon-wrapper\n            *ngIf=\"iconClass\"\n            size=\"small\"\n            innerCssClass=\"k-chip-icon\"\n            [customFontClass]=\"customIconClass\"></kendo-icon-wrapper>\n\n        <span\n            *ngIf=\"avatarClass\"\n            class=\"k-chip-avatar k-avatar k-avatar-md k-avatar-solid k-avatar-solid-primary k-rounded-full\">\n            <span class=\"k-avatar-image\" [ngClass]=\"chipAvatarClass\"></span>\n        </span>\n\n        <span class=\"k-chip-content\">\n            <span class=\"k-chip-label\" *ngIf=\"label\">\n                {{ label }}\n            </span>\n            <ng-content *ngIf=\"!label\"></ng-content>\n        </span>\n\n        <span class=\"k-chip-actions\">\n            <span class=\"k-chip-action k-chip-remove-action\"\n                *ngIf=\"removable\"\n                (click)=\"onRemoveClick($event)\">\n                <kendo-icon-wrapper\n                    name=\"x-circle\"\n                    size=\"small\"\n                    [svgIcon]=\"defaultRemoveIcon || removeSvgIcon\"\n                    [customFontClass]=\"removeIcon\"></kendo-icon-wrapper>\n\n            </span>\n        </span>\n    `,\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.chip'\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i1.LocalizationService }]; }, propDecorators: { label: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], iconClass: [{\n                type: Input\n            }], avatarClass: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], removeIcon: [{\n                type: Input\n            }], removeSvgIcon: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], themeColor: [{\n                type: Input\n            }], remove: [{\n                type: Output\n            }], contentClick: [{\n                type: Output\n            }], tabIndex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], hostClass: [{\n                type: HostBinding,\n                args: ['class.k-chip']\n            }], hasIconClass: [{\n                type: HostBinding,\n                args: ['class.k-chip-has-icon']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }, {\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], selectedClass: [{\n                type: HostBinding,\n                args: ['class.k-selected']\n            }], focusedClass: [{\n                type: HostBinding,\n                args: ['class.k-focus']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }] } });\n\nclass ChipListComponent {\n    constructor(localizationService, renderer, element, ngZone) {\n        this.localizationService = localizationService;\n        this.renderer = renderer;\n        this.element = element;\n        this.ngZone = ngZone;\n        this.hostClass = true;\n        this.orientation = 'horizontal';\n        /**\n         * Sets the selection mode of the ChipList.\n         *\n         * The available values are:\n         * * `none` (default)\n         * * `single`\n         * * `multiple`\n         */\n        this.selection = 'none';\n        /**\n         * Fires each time when the ChipList selection is changed.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Fires each time the user clicks on the remove icon of the Chip.\n         */\n        this.remove = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.role = 'listbox';\n        this._size = 'medium';\n        this.subs = new Subscription();\n        this._navigable = false;\n        this.currentActiveIndex = 0;\n        validatePackage(packageMetadata);\n        this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    }\n    /**\n     * The size property specifies the gap between the Chips in the ChipList\n     * ([see example]({% slug appearance_chiplist %}#toc-size)).\n     *\n     * The possible values are:\n     * * `'small'`\n     * * `'medium'` (default)\n     * * `'large'`\n     * * `none`\n     */\n    set size(size) {\n        const sizeValue = size ? size : 'medium';\n        this.handleClasses(sizeValue, 'size');\n        this._size = sizeValue;\n    }\n    get size() {\n        return this._size;\n    }\n    get single() {\n        return this.selection === 'single';\n    }\n    get multiple() {\n        return this.selection === 'multiple';\n    }\n    /**\n     * @hidden\n     */\n    onClick($event) {\n        const target = $event.target;\n        const isRemoveClicked = closest(target, '.k-chip-remove-action');\n        const clickedChip = closest(target, '.k-chip');\n        const chip = this.chips.find((chip) => clickedChip === chip.element.nativeElement);\n        this.currentActiveIndex = this.chips.toArray().indexOf(chip);\n        chip && chip.focus();\n        if (isRemoveClicked && clickedChip) {\n            const removeEventArgs = { sender: this, originalEvent: $event, removedChip: chip };\n            this.remove.emit(removeEventArgs);\n        }\n        if (this.selection !== 'none' && clickedChip && !isRemoveClicked) {\n            this.setSelection(chip);\n        }\n    }\n    /**\n     * When set to `true`, keyboard navigation is available through arrow keys and roving tabindex. Otherwise, all chips\n     * are part of the default tabbing sequence of the page.\n     *\n     * @default false\n     */\n    set navigable(value) {\n        this._navigable = value;\n        this.chips?.forEach(c => this.renderer.setAttribute(c.element.nativeElement, 'tabindex', value ? '-1' : '0'));\n        this.chips?.first && this.renderer.setAttribute(this.chips.first.element.nativeElement, 'tabindex', '0');\n    }\n    get navigable() {\n        return this._navigable;\n    }\n    ngOnInit() {\n        this.dynamicRTLSubscription = this.localizationService.changes\n            .subscribe(({ rtl }) => this.direction = rtl ? 'rtl' : 'ltr');\n    }\n    ngAfterViewInit() {\n        const stylingInputs = ['size'];\n        stylingInputs.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n        this.attachElementEventHandlers();\n    }\n    ngAfterContentInit() {\n        this.updateChips();\n        this.subs.add(this.chips?.changes.subscribe(() => this.updateChips()));\n    }\n    ngOnDestroy() {\n        if (this.dynamicRTLSubscription) {\n            this.dynamicRTLSubscription.unsubscribe();\n        }\n        this.subs.unsubscribe();\n    }\n    selectedChips() {\n        return this.chips.reduce((acc, cur, idx) => { return cur.selected ? acc.concat(idx) : acc; }, []);\n    }\n    /**\n     * Updates the selection on click of a Chip. Emits events.\n     */\n    setSelection(chip) {\n        if (this.selection === 'single') {\n            this.clearSelection(chip);\n        }\n        chip.selected = !chip.selected;\n        const chipEl = chip.element.nativeElement;\n        this.renderer.setAttribute(chipEl, 'aria-selected', `${chip.selected}`);\n        this.selectedChange.emit(this.selectedChips());\n    }\n    clearSelection(chip) {\n        this.chips.forEach((c) => {\n            if (chip !== c) {\n                c.selected = false;\n                this.renderer.setAttribute(c.element.nativeElement, 'aria-selected', 'false');\n            }\n        });\n    }\n    handleClasses(value, input) {\n        const elem = this.element.nativeElement;\n        const classes = getStylingClasses('chip-list', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n    attachElementEventHandlers() {\n        const chiplist = this.element.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.subs.add(this.renderer.listen(chiplist, 'keydown', this.keyDownHandler.bind(this)));\n        });\n    }\n    keyDownHandler(e) {\n        const isEnterOrSpace = e.keyCode === Keys.Enter || e.keyCode === Keys.Space;\n        const isDeleteOrBackspace = e.keyCode === Keys.Delete || e.keyCode === Keys.Backspace;\n        const isLeftArrow = e.keyCode === Keys.ArrowLeft;\n        const isRightArrow = e.keyCode === Keys.ArrowRight;\n        if (isEnterOrSpace) {\n            const target = e.target;\n            const clickedChip = closest(target, '.k-chip');\n            const chip = this.chips.find((chip) => clickedChip === chip.element.nativeElement);\n            this.currentActiveIndex = this.chips.toArray().findIndex((chip) => clickedChip === chip.element.nativeElement);\n            if (this.selection !== 'none' && clickedChip) {\n                this.ngZone.run(() => {\n                    this.setSelection(chip);\n                });\n            }\n        }\n        else if (isDeleteOrBackspace) {\n            const target = e.target;\n            const clickedChip = closest(target, '.k-chip');\n            const chip = this.chips.find((chip) => clickedChip === chip.element.nativeElement);\n            if (clickedChip) {\n                const removeEventArgs = { sender: this, originalEvent: e, removedChip: chip };\n                this.ngZone.run(() => {\n                    this.remove.emit(removeEventArgs);\n                });\n            }\n        }\n        else if (isLeftArrow) {\n            this.handleArrowKeys('left');\n        }\n        else if (isRightArrow) {\n            this.handleArrowKeys('right');\n        }\n    }\n    handleArrowKeys(direction) {\n        if (!this.navigable) {\n            return;\n        }\n        const directionDelta = direction === 'left' ? -1 : 1;\n        this.currentActiveIndex = this.currentActiveIndex + directionDelta;\n        if (this.currentActiveIndex >= this.chips.length) {\n            this.currentActiveIndex = 0;\n        }\n        else if (this.currentActiveIndex < 0) {\n            this.currentActiveIndex = this.chips.length - 1;\n        }\n        this.chips.forEach((chip, idx) => {\n            this.renderer.removeAttribute(chip.element.nativeElement, 'tabindex');\n            if (idx === this.currentActiveIndex) {\n                this.renderer.setAttribute(chip.element.nativeElement, 'tabindex', '0');\n                chip.focus();\n            }\n        });\n    }\n    updateChips() {\n        this.normalizeActiveIndex();\n        this.chips.forEach((chip, idx) => {\n            const chipEl = chip.element.nativeElement;\n            this.renderer.removeAttribute(chip.element.nativeElement, 'tabindex');\n            if (idx === this.currentActiveIndex) {\n                this.renderer.setAttribute(chip.element.nativeElement, 'tabindex', '0');\n                if (isDocumentAvailable() && document.activeElement.closest('.k-chip-list')) {\n                    chip.focus();\n                }\n            }\n            this.role === 'listbox' && this.renderer.setAttribute(chipEl, 'role', 'option');\n            if (chip.removable) {\n                this.renderer.setAttribute(chipEl, 'aria-keyshortcuts', 'Enter Delete');\n            }\n            this.renderer.removeAttribute(chipEl, 'aria-pressed');\n            this.renderer.setAttribute(chipEl, 'aria-selected', `${chip.selected}`);\n        });\n    }\n    normalizeActiveIndex() {\n        if (this.currentActiveIndex >= this.chips.length) {\n            this.currentActiveIndex = Math.max(this.chips.length - 1, 0);\n        }\n    }\n}\nChipListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ChipListComponent, deps: [{ token: i1.LocalizationService }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nChipListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ChipListComponent, selector: \"kendo-chiplist, kendo-chip-list\", inputs: { selection: \"selection\", size: \"size\", role: \"role\", navigable: \"navigable\" }, outputs: { selectedChange: \"selectedChange\", remove: \"remove\" }, host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"class.k-chip-list\": \"this.hostClass\", \"attr.aria-orientation\": \"this.orientation\", \"attr.dir\": \"this.direction\", \"class.k-selection-single\": \"this.single\", \"attr.aria-multiselectable\": \"this.multiple\", \"class.k-selection-multiple\": \"this.multiple\", \"attr.role\": \"this.role\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.chiplist'\n        }\n    ], queries: [{ propertyName: \"chips\", predicate: ChipComponent }], ngImport: i0, template: `\n        <ng-content></ng-content>\n    `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ChipListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-chiplist, kendo-chip-list',\n                    template: `\n        <ng-content></ng-content>\n    `,\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.chiplist'\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-chip-list']\n            }], orientation: [{\n                type: HostBinding,\n                args: ['attr.aria-orientation']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], selection: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], remove: [{\n                type: Output\n            }], chips: [{\n                type: ContentChildren,\n                args: [ChipComponent]\n            }], single: [{\n                type: HostBinding,\n                args: ['class.k-selection-single']\n            }], multiple: [{\n                type: HostBinding,\n                args: ['attr.aria-multiselectable']\n            }, {\n                type: HostBinding,\n                args: ['class.k-selection-multiple']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }, {\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], navigable: [{\n                type: Input\n            }] } });\n\nconst exportedModules$1 = [\n    ChipComponent,\n    ChipListComponent\n];\nconst declarations$1 = [\n    ...exportedModules$1\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Chip and ChipList components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Chip module\n * import { ChipModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ChipModule], // import Chip module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * ```\n */\nclass ChipModule {\n}\nChipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ChipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ChipModule, declarations: [ChipComponent,\n        ChipListComponent], imports: [CommonModule, IconsModule], exports: [ChipComponent,\n        ChipListComponent] });\nChipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ChipModule, imports: [[CommonModule, IconsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ChipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [declarations$1],\n                    exports: [exportedModules$1],\n                    imports: [CommonModule, IconsModule]\n                }]\n        }] });\n\n/**\n * @hidden\n */\nfunction getAnchorAlign(fabAlign, rtl) {\n    const align = { horizontal: (rtl ? 'right' : 'left'), vertical: 'bottom' };\n    if (fabAlign.horizontal === 'end') {\n        align.horizontal = rtl ? 'left' : 'right';\n    }\n    if (fabAlign.vertical === 'bottom') {\n        align.vertical = 'top';\n    }\n    if (fabAlign.vertical === 'bottom' && fabAlign.horizontal === 'end') {\n        align.horizontal = rtl ? 'left' : 'right';\n        align.vertical = 'top';\n    }\n    return align;\n}\n/**\n * @hidden\n */\nfunction getPopupAlign(fabAlign, rtl) {\n    const align = { horizontal: (rtl ? 'right' : 'left'), vertical: 'top' };\n    if (fabAlign.horizontal === 'end') {\n        align.horizontal = rtl ? 'left' : 'right';\n    }\n    if (fabAlign.vertical === 'bottom') {\n        align.vertical = 'bottom';\n    }\n    if (fabAlign.vertical === 'bottom' && fabAlign.horizontal === 'end') {\n        align.horizontal = rtl ? 'left' : 'right';\n        align.vertical = 'bottom';\n    }\n    return align;\n}\n\n/**\n * @hidden\n */\nfunction openAnimation(animationSettings) {\n    const isBottom = animationSettings.align.vertical === 'bottom';\n    const duration = animationSettings.duration;\n    const gap = animationSettings.gap;\n    return sequence([\n        query(`.k-fab-item`, [\n            style({ opacity: 0, transform: `translateY(${isBottom ? '8px' : '-8px'})` }),\n            stagger(gap, [animate(`${duration}ms ease-in`, style({ opacity: '*', transform: 'translateY(0)' }))])\n        ], { optional: true })\n    ]);\n}\n/**\n * @hidden\n */\nfunction closeAnimation(animationSettings) {\n    const isBottom = animationSettings.align.vertical === 'bottom';\n    const duration = animationSettings.duration;\n    const gap = animationSettings.gap;\n    return sequence([\n        query(`.k-fab-item`, [\n            style({ opacity: '*', transform: 'translateY(0)' }),\n            stagger(-gap, [animate(`${duration}ms ease-in`, style({ opacity: 0, transform: `translateY(${isBottom ? '8px' : '-8px'})` }))])\n        ], { optional: true })\n    ]);\n}\n\n/**\n * Represents a template that defines the content of the whole dial item.\n * To define the template, nest an `<ng-template>` tag\n * with the `kendoDialItemTemplate` directive inside the `<kendo-floatingactionbutton>` tag\n * ([see example]({% slug templates_floatingactionbutton %}#toc-dial-item-template)).\n */\nclass DialItemTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nDialItemTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DialItemTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nDialItemTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DialItemTemplateDirective, selector: \"[kendoDialItemTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DialItemTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDialItemTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents a template that defines the content of the FloatingActionButton.\n * To define the template, nest an `<ng-template>` tag\n * with the `kendoFloatingActionButtonTemplate` directive inside the `<kendo-floatingactionbutton>` tag\n * ([see example]({% slug templates_floatingactionbutton %}#toc-floatingactionbutton-template)).\n */\nclass FloatingActionButtonTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFloatingActionButtonTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FloatingActionButtonTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFloatingActionButtonTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FloatingActionButtonTemplateDirective, selector: \"[kendoFloatingActionButtonTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FloatingActionButtonTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoFloatingActionButtonTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass DialItemComponent {\n    constructor(element, renderer, localisationService) {\n        this.element = element;\n        this.renderer = renderer;\n        this.localisationService = localisationService;\n        this.hostClass = true;\n        this.role = 'menuitem';\n    }\n    get disabledClass() {\n        return this.item.disabled;\n    }\n    get title() {\n        const label = this.item.label;\n        return label || this.itemTitle;\n    }\n    get indexAttr() {\n        return this.index;\n    }\n    get iconClasses() {\n        const classes = [];\n        if (this.item.iconClass) {\n            classes.push(`${this.item.iconClass}`);\n        }\n        if (this.item.icon) {\n            classes.push(`k-fab-item-icon k-icon k-i-${this.item.icon}`);\n        }\n        return classes;\n    }\n    get itemTitle() {\n        const icon = this.item.icon;\n        const itemTitle = this.item.itemTitle;\n        return (icon && itemTitle) ? itemTitle : icon;\n    }\n    ngAfterViewInit() {\n        const element = this.element.nativeElement;\n        const rtl = this.localisationService.rtl;\n        const hAlign = this.align.horizontal;\n        this.renderer.addClass(element, this.getTextDirectionClass(rtl, hAlign));\n    }\n    getTextDirectionClass(rtl, hAlign) {\n        const dir = rtl ? 'rtl' : 'ltr';\n        const align = hAlign === 'end' ? 'end' : 'start';\n        const directions = {\n            rtl: { end: 'k-text-left', start: 'k-text-right' },\n            ltr: { start: 'k-text-left', end: 'k-text-right' }\n        };\n        return directions[dir][align];\n    }\n}\nDialItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DialItemComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nDialItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DialItemComponent, selector: \"[kendoDialItem]\", inputs: { cssClass: \"cssClass\", cssStyle: \"cssStyle\", isFocused: \"isFocused\", index: \"index\", item: \"item\", dialItemTemplate: \"dialItemTemplate\", align: \"align\" }, host: { properties: { \"class.k-fab-item\": \"this.hostClass\", \"attr.role\": \"this.role\", \"attr.aria-disabled\": \"this.disabledClass\", \"class.k-disabled\": \"this.disabledClass\", \"attr.title\": \"this.title\", \"attr.aria-label\": \"this.title\", \"attr.data-fab-item-index\": \"this.indexAttr\" } }, ngImport: i0, template: `\n        <ng-template *ngIf=\"dialItemTemplate\"\n            [ngTemplateOutlet]=\"dialItemTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: item, index: index, isFocused: isFocused }\"\n        >\n        </ng-template>\n\n        <ng-container *ngIf=\"!dialItemTemplate\">\n            <span *ngIf=\"item.label\" class=\"k-fab-item-text\">{{ item.label }}</span>\n            <kendo-icon-wrapper\n                *ngIf=\"item.icon || item.iconClass || item.svgIcon\"\n                [name]=\"item.icon\"\n                innerCssClass=\"k-fab-item-icon\"\n                [customFontClass]=\"item.iconClass\"\n                [svgIcon]=\"item.svgIcon\"></kendo-icon-wrapper>\n        </ng-container>\n    `, isInline: true, components: [{ type: i2.IconWrapperComponent, selector: \"kendo-icon-wrapper\", inputs: [\"name\", \"svgIcon\", \"innerCssClass\", \"customFontClass\", \"size\"], exportAs: [\"kendoIconWrapper\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DialItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: '[kendoDialItem]',\n                    template: `\n        <ng-template *ngIf=\"dialItemTemplate\"\n            [ngTemplateOutlet]=\"dialItemTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: item, index: index, isFocused: isFocused }\"\n        >\n        </ng-template>\n\n        <ng-container *ngIf=\"!dialItemTemplate\">\n            <span *ngIf=\"item.label\" class=\"k-fab-item-text\">{{ item.label }}</span>\n            <kendo-icon-wrapper\n                *ngIf=\"item.icon || item.iconClass || item.svgIcon\"\n                [name]=\"item.icon\"\n                innerCssClass=\"k-fab-item-icon\"\n                [customFontClass]=\"item.iconClass\"\n                [svgIcon]=\"item.svgIcon\"></kendo-icon-wrapper>\n        </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }]; }, propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-fab-item']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }, {\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], title: [{\n                type: HostBinding,\n                args: ['attr.title']\n            }, {\n                type: HostBinding,\n                args: ['attr.aria-label']\n            }], indexAttr: [{\n                type: HostBinding,\n                args: ['attr.data-fab-item-index']\n            }], cssClass: [{\n                type: Input\n            }], cssStyle: [{\n                type: Input\n            }], isFocused: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], item: [{\n                type: Input\n            }], dialItemTemplate: [{\n                type: Input\n            }], align: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass DialListComponent {\n    constructor(focusService, cdr) {\n        this.focusService = focusService;\n        this.cdr = cdr;\n        this.hostClass = true;\n        this.subscriptions = new Subscription();\n        this.subscriptions.add(this.focusService.onFocus.subscribe(() => this.cdr.detectChanges()));\n    }\n    get bottomClass() {\n        return this.align.vertical === 'top' || this.align.vertical === 'middle';\n    }\n    get topClass() {\n        return this.align.vertical === 'bottom';\n    }\n    isFocused(index) {\n        return this.focusService.isFocused(index);\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n}\nDialListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DialListComponent, deps: [{ token: FocusService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nDialListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DialListComponent, selector: \"[kendoDialList]\", inputs: { dialItems: \"dialItems\", dialItemTemplate: \"dialItemTemplate\", align: \"align\" }, host: { properties: { \"class.k-fab-items\": \"this.hostClass\", \"class.k-fab-items-bottom\": \"this.bottomClass\", \"class.k-fab-items-top\": \"this.topClass\" } }, ngImport: i0, template: `\n        <ng-container *ngFor='let item of dialItems; let idx = index'>\n            <li\n                kendoButtonFocusable\n                kendoDialItem\n                [item]=\"dialItems[idx]\"\n                [index]=\"idx\"\n                [dialItemTemplate]=\"dialItemTemplate\"\n                [isFocused]=\"isFocused(idx)\"\n                [ngClass]='item.cssClass'\n                [ngStyle]='item.cssStyle'\n                [align]=\"align\"\n            >\n            </li>\n        </ng-container>\n    `, isInline: true, components: [{ type: DialItemComponent, selector: \"[kendoDialItem]\", inputs: [\"cssClass\", \"cssStyle\", \"isFocused\", \"index\", \"item\", \"dialItemTemplate\", \"align\"] }], directives: [{ type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: FocusableDirective, selector: \"[kendoButtonFocusable]\", inputs: [\"index\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DialListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: '[kendoDialList]',\n                    template: `\n        <ng-container *ngFor='let item of dialItems; let idx = index'>\n            <li\n                kendoButtonFocusable\n                kendoDialItem\n                [item]=\"dialItems[idx]\"\n                [index]=\"idx\"\n                [dialItemTemplate]=\"dialItemTemplate\"\n                [isFocused]=\"isFocused(idx)\"\n                [ngClass]='item.cssClass'\n                [ngStyle]='item.cssStyle'\n                [align]=\"align\"\n            >\n            </li>\n        </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FocusService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-fab-items']\n            }], bottomClass: [{\n                type: HostBinding,\n                args: ['class.k-fab-items-bottom']\n            }], topClass: [{\n                type: HostBinding,\n                args: ['class.k-fab-items-top']\n            }], dialItems: [{\n                type: Input\n            }], dialItemTemplate: [{\n                type: Input\n            }], align: [{\n                type: Input\n            }] } });\n\nconst NAVIGATION_SETTINGS = {\n    useLeftRightArrows: false\n};\nconst NAVIGATION_SETTINGS_PROVIDER = {\n    provide: NAVIGATION_CONFIG,\n    useValue: NAVIGATION_SETTINGS\n};\nconst SIZE_CLASSES = {\n    small: 'k-fab-sm',\n    medium: 'k-fab-md',\n    large: 'k-fab-lg'\n};\nconst ROUNDED_CLASSES = {\n    small: 'k-rounded-sm',\n    medium: 'k-rounded-md',\n    large: 'k-rounded-lg',\n    full: 'k-rounded-full'\n};\nconst FILLMODE_CLASS = 'k-fab-solid';\nconst DEFAULT_DURATION = 180;\nconst DEFAULT_ITEM_GAP = 90;\nconst DEFAULT_OFFSET = '16px';\nconst DEFAULT_ROUNDED = 'full';\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_THEME_COLOR = 'primary';\n/**\n *\n * Represents the [Kendo UI FloatingActionButton component for Angular]({% slug overview_floatingactionbutton %}).\n * Used to specify the primary or the most common action in an application.\n *\n */\nclass FloatingActionButtonComponent {\n    constructor(renderer, element, focusService, navigationService, ngZone, popupService, builder, localizationService) {\n        this.renderer = renderer;\n        this.element = element;\n        this.focusService = focusService;\n        this.navigationService = navigationService;\n        this.ngZone = ngZone;\n        this.popupService = popupService;\n        this.builder = builder;\n        this.localizationService = localizationService;\n        /**\n         * Specifies the positionMode of the FloatingActionButton\n         * ([see example]({% slug positioning_floatingactionbutton %}#toc-positionMode)).\n         *\n         * * The possible values are:\n         * * `absolute`&mdash;Positions the FloatingActionButton absolutely to its first positioned parent element.\n         * * `fixed` (Default)&mdash;Positions the FloatingActionButton relative to the viewport. It always stays in the same place even if the page is scrolled.\n         */\n        this.positionMode = 'fixed';\n        /**\n         * Specifies the animation settings of the FloatingActionButton dial items.\n         * ([see example]({% slug dialitems_floatingactionbutton %}#toc-animation)).\n         *\n         * The possible values are:\n         * * Boolean\n         *    * (Default) `true`&mdash;Applies the default [`DialItemAnimation`]({% slug api_buttons_dialitemanimation %}) settings.\n         *    * `false`\n         * * `DialItemAnimation`\n         *    * `duration`&mdash;Specifies the animation duration in milliseconds for each dial item. Defaults to `180ms`.\n         *    * `gap`&mdash;Specifies the animation duration gap in milliseconds after each dial item is animated. Defaults to `90ms`.\n         */\n        this.dialItemAnimation = true;\n        /**\n         * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the FloatingActionButton.\n         */\n        this.tabIndex = 0;\n        /**\n         * Specifies the collection of the dial items that will be rendered in the FloatingActionButton popup.\n         */\n        this.dialItems = [];\n        /**\n         * Fires each time the FloatingActionButton gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time the FloatingActionButton gets focused.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time a dial item is clicked.\n         */\n        this.dialItemClick = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel the event, the popup will remain closed\n         * ([more information and example]({% slug overview_floatingactionbutton %}#toc-events)).\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel the event, the popup will remain open\n         * ([more information and example]({% slug overview_floatingactionbutton %}#toc-events)).\n         */\n        this.close = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.id = `k-${guid()}`;\n        /**\n         * @hidden\n         */\n        this.dialListId = `k-dial-list-${guid()}`;\n        this._themeColor = DEFAULT_THEME_COLOR;\n        this._size = DEFAULT_SIZE;\n        this._rounded = DEFAULT_ROUNDED;\n        this._disabled = false;\n        this._align = { horizontal: 'end', vertical: 'bottom' };\n        this._offset = { x: DEFAULT_OFFSET, y: DEFAULT_OFFSET };\n        this.subscriptions = new Subscription();\n        this.rtl = false;\n        this.animationEnd = new EventEmitter();\n        this.initialSetup = true;\n        validatePackage(packageMetadata);\n        this.subscribeNavigationEvents();\n        this.subscriptions.add(this.localizationService.changes.subscribe(({ rtl }) => {\n            this.rtl = rtl;\n            this.direction = this.rtl ? 'rtl' : 'ltr';\n        }));\n    }\n    get fixedClass() {\n        return this.positionMode === 'fixed';\n    }\n    get absoluteClass() {\n        return this.positionMode === 'absolute';\n    }\n    /**\n     * Specifies the theme color of the FloatingActionButton\n     * ([see example]({% slug appearance_floatingactionbutton %}#toc-themeColor)).\n     * The theme color will be applied as background color of the component.\n     *\n     * The possible values are:\n     * * `primary` (Default)&mdash;Applies coloring based on the `primary` theme color.\n     * * `secondary`&mdash;Applies coloring based on the `secondary` theme color.\n     * * `tertiary`&mdash; Applies coloring based on the `tertiary` theme color.\n     * * `info`&mdash;Applies coloring based on the `info` theme color.\n     * * `success`&mdash; Applies coloring based on the `success` theme color.\n     * * `warning`&mdash; Applies coloring based on the `warning` theme color.\n     * * `error`&mdash; Applies coloring based on the `error` theme color.\n     * * `dark`&mdash; Applies coloring based on the `dark` theme color.\n     * * `light`&mdash; Applies coloring based on the `light` theme color.\n     * * `inverse`&mdash; Applies coloring based on the `inverse` theme color.\n     * * `none`&mdash; Removes the built in theme color.\n     */\n    set themeColor(themeColor) {\n        const newThemeColor = themeColor ? themeColor : DEFAULT_THEME_COLOR;\n        this.handleClasses(newThemeColor, 'themeColor');\n        this._themeColor = newThemeColor;\n    }\n    get themeColor() {\n        return this._themeColor;\n    }\n    /**\n     * Specifies the size of the FloatingActionButton\n     * ([see example]({% slug appearance_floatingactionbutton %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the FloatingActionButton.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium`\n     * * `large`\n     * * `full` (default)\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * Specifies whether the FloatingActionButton is disabled.\n     */\n    set disabled(disabled) {\n        this._disabled = disabled;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Specifies the horizontal and vertical alignment of the FloatingActionButton\n     * ([see example]({% slug positioning_floatingactionbutton %}#toc-align)).\n     *\n     * The possible values are:\n     * * `{ horizontal: 'start'|'center'|'end', vertical: 'top'|'middle'|'bottom' }`\n     *\n     * The default value is:\n     * * `{ horizontal: 'end', vertical: 'bottom' }`\n     *\n     */\n    set align(align) {\n        this._align = Object.assign(this._align, align);\n    }\n    get align() {\n        return this._align;\n    }\n    /**\n     * Specifies the horizontal and vertical offset position of the FloatingActionButton\n     * ([see example]({% slug positioning_floatingactionbutton %}#toc-offset)).\n     *\n     * * The default value is:\n     * * `{ x: '16px', y: '16px' }`\n     */\n    set offset(offset) {\n        this._offset = Object.assign(this._offset, offset);\n        this.offsetStyles();\n    }\n    get offset() {\n        return this._offset;\n    }\n    /**\n     * @hidden\n     */\n    get componentTabIndex() {\n        return this.disabled ? (-1) : this.tabIndex;\n    }\n    ngAfterViewInit() {\n        ['size', 'rounded', 'themeColor'].forEach(option => this.handleClasses(this[option], option));\n        this.renderer.addClass(this.element.nativeElement, this.alignClass());\n        this.offsetStyles();\n        this.initialSetup = false;\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    /**\n     * Indicates whether the FloatingActionButton is currently open.\n     */\n    get isOpen() { return isPresent(this.popupRef); }\n    /**\n     * Focuses the FloatingActionButton.\n     */\n    focus() {\n        if (isDocumentAvailable()) {\n            this.button.nativeElement.focus();\n        }\n    }\n    /**\n     * Blurs the FloatingActionButton.\n     */\n    blur() {\n        if (isDocumentAvailable()) {\n            this.button.nativeElement.blur();\n        }\n    }\n    /**\n     * Toggles the visibility of the FloatingActionButton dial items popup.\n     *\n     * If you use the `toggleDial` method to open or close the dial items,\n     * the `open` and `close` events do not fire ([more information and examples]({% slug openstate_floatingactionbutton %}#toc-events)).\n     *\n     * @param open - The state of dial items popup.\n     */\n    toggleDial(open) {\n        if (this.disabled || !this.hasDialItems) {\n            return;\n        }\n        const shouldOpen = isPresent(open) ? open : !this.isOpen;\n        if (this.disabled || shouldOpen === this.isOpen) {\n            return;\n        }\n        if (shouldOpen) {\n            setTimeout(() => this.openDial());\n        }\n        else {\n            this.closeDial();\n        }\n    }\n    /**\n     * @hidden\n     */\n    get ariaExpanded() {\n        return this.hasDialItems ? this.isOpen : null;\n    }\n    /**\n     * @hidden\n     */\n    get ariaHasPopup() {\n        return this.hasDialItems ? 'menu' : null;\n    }\n    /**\n     * @hidden\n     */\n    get ariaControls() {\n        return this.hasDialItems ? this.dialListId : null;\n    }\n    /**\n     * @hidden\n     */\n    get iconClasses() {\n        const classes = [];\n        if (this.iconClass) {\n            classes.push(`${this.iconClass}`);\n        }\n        if (this.icon) {\n            classes.push(`k-fab-icon k-icon k-i-${this.icon}`);\n        }\n        return classes;\n    }\n    /**\n     * @hidden\n     */\n    clickHandler() {\n        if (this.disabled || !this.hasDialItems) {\n            return;\n        }\n        this.ngZone.run(() => {\n            const shouldOpen = !this.isOpen;\n            this.toggleDialWithEvents(shouldOpen);\n        });\n    }\n    /**\n     * @hidden\n     */\n    keyDownHandler(event) {\n        this.keyHandler(event);\n    }\n    /**\n     * @hidden\n     */\n    keyHandler(event, keyEvent) {\n        if (this.disabled) {\n            return;\n        }\n        const focused = this.focusService.focused || 0;\n        const keyCode = event.keyCode;\n        const action = this.navigationService.process({\n            altKey: event.altKey,\n            current: focused,\n            keyCode,\n            keyEvent: keyEvent,\n            max: this.dialItems ? this.dialItems.length - 1 : 0,\n            min: 0,\n            flipNavigation: this.align.vertical === 'bottom'\n        });\n        if (action !== NavigationAction.Undefined && action !== NavigationAction.Tab) {\n            event.preventDefault();\n        }\n        if (action === NavigationAction.EnterUp && !this.hasDialItems) {\n            this.button.nativeElement.click();\n        }\n        else if (action === NavigationAction.Open || action === NavigationAction.Close) {\n            const toggleDial = action === NavigationAction.Open;\n            this.ngZone.run(() => {\n                this.toggleDialWithEvents(toggleDial);\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    onItemClick(event) {\n        const item = closest(event.target, '.k-fab-item');\n        if (!item) {\n            return;\n        }\n        const index = parseInt(item.getAttribute('data-fab-item-index'));\n        this.emitItemClick(index);\n    }\n    /**\n     * @hidden\n     */\n    focusHandler() {\n        if (!this.disabled) {\n            this.onFocus.emit();\n        }\n    }\n    /**\n     * @hidden\n     */\n    blurHandler() {\n        this.onBlur.emit();\n        this.toggleDialWithEvents(false);\n    }\n    handleClasses(inputValue, input) {\n        if (isPresent(this.button) && (this[input] !== inputValue || this.initialSetup)) {\n            const button = this.button.nativeElement;\n            const classesToRemove = {\n                themeColor: `${FILLMODE_CLASS}-${this.themeColor}`,\n                size: SIZE_CLASSES[this.size],\n                rounded: ROUNDED_CLASSES[this.rounded]\n            };\n            const classesToAdd = {\n                themeColor: inputValue !== 'none' ? `${FILLMODE_CLASS}-${inputValue}` : '',\n                size: SIZE_CLASSES[inputValue],\n                rounded: ROUNDED_CLASSES[inputValue]\n            };\n            this.renderer.removeClass(button, classesToRemove[input]);\n            if (classesToAdd[input]) {\n                this.renderer.addClass(button, classesToAdd[input]);\n            }\n        }\n    }\n    onEnterPressed() {\n        const index = this.focusService.focused;\n        this.emitItemClick(index);\n    }\n    emitItemClick(index) {\n        const item = this.dialItems[index];\n        if (item && !item.disabled) {\n            const clickEventArgs = { item: item, index: index };\n            this.dialItemClick.emit(clickEventArgs);\n            this.toggleDialWithEvents(false);\n            this.focusService.focused = index;\n        }\n    }\n    subscribeNavigationEvents() {\n        this.subscriptions.add(this.navigationService.navigate.subscribe(this.onArrowKeyNavigate.bind(this)));\n        this.subscriptions.add(this.navigationService.enter.subscribe(this.onNavigationEnterPress.bind(this)));\n        this.subscriptions.add(merge(this.navigationService.close, this.navigationService.esc).subscribe(this.onNavigationClose.bind(this)));\n    }\n    onArrowKeyNavigate({ index }) {\n        this.focusService.focus(index);\n    }\n    onNavigationEnterPress() {\n        this.ngZone.run(() => {\n            if (this.isOpen) {\n                const focusedIndex = this.focusService.focused;\n                const focusedItem = this.dialItems[focusedIndex];\n                if (focusedItem && focusedItem.disabled) {\n                    return;\n                }\n                if (isPresent(focusedIndex) && focusedIndex !== -1) {\n                    this.onEnterPressed();\n                    return;\n                }\n            }\n            if (!this.isOpen && isDocumentAvailable()) {\n                this.toggleDialWithEvents(true);\n                this.button.nativeElement.focus();\n            }\n        });\n    }\n    onNavigationClose() {\n        if (this.isOpen) {\n            this.ngZone.run(() => {\n                this.toggleDialWithEvents(false);\n                if (isDocumentAvailable()) {\n                    this.button.nativeElement.focus();\n                }\n            });\n        }\n    }\n    alignClass() {\n        return `k-pos-${this.align.vertical}-${this.align.horizontal}`;\n    }\n    toggleDialWithEvents(open) {\n        if (open === this.isOpen) {\n            return;\n        }\n        const event = new PreventableEvent();\n        if (open) {\n            this.open.emit(event);\n        }\n        else {\n            this.close.emit(event);\n        }\n        if (event.isDefaultPrevented()) {\n            return;\n        }\n        if (open) {\n            this.openDial();\n        }\n        else {\n            this.closeDial();\n        }\n    }\n    openPopup() {\n        if (this.isOpen) {\n            return;\n        }\n        const isIconFab = this.icon && !this.text;\n        const rtl = this.rtl;\n        const align = this.align;\n        this.popupRef = this.popupService.open({\n            anchor: this.element.nativeElement,\n            animate: false,\n            content: this.popupTemplate,\n            anchorAlign: getAnchorAlign(align, rtl),\n            popupAlign: getPopupAlign(align, rtl),\n            popupClass: 'k-fab-popup k-popup-transparent'\n        });\n        const popupElement = this.popupRef.popupElement;\n        this.renderer.setStyle(popupElement, 'box-shadow', 'none');\n        if (isIconFab) {\n            this.subscriptions.add(this.popupRef.popupOpen.subscribe(() => this.positionPopup()));\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.popupMouseDownListener = this.renderer.listen(popupElement, 'mousedown', (event) => {\n                event.preventDefault();\n            });\n        });\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => this.toggleDialWithEvents(false));\n    }\n    closePopup() {\n        if (this.isOpen) {\n            if (this.popupMouseDownListener) {\n                this.popupMouseDownListener();\n            }\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    openDial() {\n        this.openPopup();\n        this.focusService.focus(0);\n        if (this.dialItemAnimation && this.isValidAnimation()) {\n            this.playAnimation(true);\n        }\n        this.renderer.setAttribute(this.button.nativeElement, 'aria-expanded', 'true');\n    }\n    closeDial() {\n        if (this.dialItemAnimation && this.isValidAnimation()) {\n            this.playAnimation(false);\n            this.animationEnd.pipe(take(1)).subscribe(() => this.closePopup());\n        }\n        else {\n            this.closePopup();\n        }\n        this.renderer.setAttribute(this.button.nativeElement, 'aria-expanded', 'false');\n    }\n    isValidAnimation() {\n        const animation = this.dialItemAnimation;\n        if (typeof animation !== 'boolean') {\n            return animation.duration !== 0;\n        }\n        return true;\n    }\n    positionPopup() {\n        if (this.dialItemTemplate) {\n            return;\n        }\n        if (!this.popupRef) {\n            return;\n        }\n        const fab = this.element.nativeElement;\n        const fabWidth = fab.getBoundingClientRect().width;\n        const popupEl = this.popupRef.popupElement;\n        const icon = popupEl.querySelector('.k-fab-item-icon');\n        if (!icon) {\n            return;\n        }\n        const iconWidth = icon.getBoundingClientRect().width;\n        const left = (fabWidth / 2) - (iconWidth / 2);\n        const popupLeft = popupEl.getBoundingClientRect().left;\n        const isEndAlign = this.align.horizontal === 'end';\n        const leftValue = isEndAlign ? (popupLeft - left) : (left + popupLeft);\n        const rtlLeftValue = isEndAlign ? (left + popupLeft) : (popupLeft - left);\n        popupEl.style.left = this.rtl ? `${rtlLeftValue}px` : `${leftValue}px`;\n    }\n    offsetStyles() {\n        const hostElement = this.element.nativeElement;\n        this.renderer.setStyle(hostElement, this.horizontalPosition, this.horizontalOffset);\n        this.renderer.setStyle(hostElement, this.verticalPosition, this.verticalOffset);\n    }\n    get hasDialItems() {\n        return isPresent(this.dialItems) && this.dialItems.length !== 0;\n    }\n    /**\n     * Gets the CSS prop name of the selected vertical position (`top`/`bottom`);\n     */\n    get verticalPosition() {\n        return {\n            top: 'top',\n            middle: 'top',\n            bottom: 'bottom'\n        }[this.align.vertical];\n    }\n    /**\n     * Gets the offset according to the selected vertical position.\n     */\n    get verticalOffset() {\n        if (this.align.vertical === 'middle') {\n            return this.offset.y === DEFAULT_OFFSET ? '50%' : `calc(50% + ${this.offset.y})`;\n        }\n        return this.offset.y;\n    }\n    /**\n     * Gets the CSS prop name of the selected horizontal position (`left`/`right`);\n     */\n    get horizontalPosition() {\n        const { horizontal } = this.align;\n        return {\n            end: this.rtl ? 'left' : 'right',\n            center: 'left',\n            start: this.rtl ? 'right' : 'left'\n        }[horizontal];\n    }\n    /**\n     * Gets the offset according to the selected horizontal position.\n     */\n    get horizontalOffset() {\n        if (this.align.horizontal === 'center') {\n            return this.offset.x === DEFAULT_OFFSET ? '50%' : `calc(50% + ${this.offset.x})`;\n        }\n        return this.offset.x;\n    }\n    playerFor(element, animation) {\n        const factory = this.builder.build(animation);\n        return factory.create(element);\n    }\n    playAnimation(open) {\n        const durationSettings = this.durationSettings();\n        const animationSettings = {\n            duration: durationSettings.duration,\n            gap: durationSettings.gap,\n            align: this.align\n        };\n        const animation = open ? openAnimation(animationSettings) : closeAnimation(animationSettings);\n        let player = this.playerFor(this.popupRef.popupElement, animation);\n        player.play();\n        player.onDone(() => {\n            if (player) {\n                this.animationEnd.emit();\n                player.destroy();\n                player = null;\n            }\n        });\n    }\n    durationSettings() {\n        return {\n            duration: this.animationDuration(),\n            gap: this.animationGap()\n        };\n    }\n    animationGap() {\n        const animation = this.dialItemAnimation;\n        if (typeof animation !== 'boolean' && isPresent(animation.gap)) {\n            return animation.gap;\n        }\n        return DEFAULT_ITEM_GAP;\n    }\n    animationDuration() {\n        const animation = this.dialItemAnimation;\n        if (typeof animation !== 'boolean' && isPresent(animation.duration)) {\n            return animation.duration;\n        }\n        return DEFAULT_DURATION;\n    }\n}\nFloatingActionButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FloatingActionButtonComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: FocusService }, { token: NavigationService }, { token: i0.NgZone }, { token: i3$1.PopupService }, { token: i4.AnimationBuilder }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nFloatingActionButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FloatingActionButtonComponent, selector: \"kendo-floatingactionbutton\", inputs: { themeColor: \"themeColor\", size: \"size\", rounded: \"rounded\", disabled: \"disabled\", align: \"align\", offset: \"offset\", positionMode: \"positionMode\", icon: \"icon\", svgIcon: \"svgIcon\", iconClass: \"iconClass\", buttonClass: \"buttonClass\", dialClass: \"dialClass\", text: \"text\", dialItemAnimation: \"dialItemAnimation\", tabIndex: \"tabIndex\", dialItems: \"dialItems\" }, outputs: { onBlur: \"blur\", onFocus: \"focus\", dialItemClick: \"dialItemClick\", open: \"open\", close: \"close\" }, host: { properties: { \"class.k-pos-fixed\": \"this.fixedClass\", \"class.k-pos-absolute\": \"this.absoluteClass\", \"attr.dir\": \"this.direction\" } }, providers: [\n        FocusService,\n        NavigationService,\n        NAVIGATION_SETTINGS_PROVIDER,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.floatingactionbutton'\n        }\n    ], queries: [{ propertyName: \"dialItemTemplate\", first: true, predicate: DialItemTemplateDirective, descendants: true }, { propertyName: \"fabTemplate\", first: true, predicate: FloatingActionButtonTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"button\", first: true, predicate: [\"button\"], descendants: true, static: true }, { propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true, static: true }], ngImport: i0, template: `\n        <button\n            #button\n            [attr.id]=\"id\"\n            [tabIndex]=\"componentTabIndex\"\n            type=\"button\"\n            class=\"k-fab k-fab-solid\"\n            [class.k-disabled]=\"disabled\"\n            [ngClass]=\"buttonClass\"\n            [disabled]=\"disabled\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"ariaExpanded\"\n            [attr.aria-haspopup]=\"ariaHasPopup\"\n            [attr.aria-controls]=\"ariaControls\"\n            (focus)=\"focusHandler()\"\n            (blur)=\"blurHandler()\"\n            [kendoEventsOutsideAngular]=\"{\n                keydown: keyDownHandler,\n                click: clickHandler\n            }\"\n            [scope]=\"this\"\n        >\n            <ng-template *ngIf=\"fabTemplate\"\n                [ngTemplateOutlet]=\"fabTemplate?.templateRef\"\n            >\n            </ng-template>\n\n            <ng-container *ngIf=\"!fabTemplate\">\n                <kendo-icon-wrapper\n                    *ngIf=\"icon || iconClass || svgIcon\"\n                    [name]=\"icon\"\n                    innerCssClass=\"k-fab-icon\"\n                    [customFontClass]=\"iconClass\"\n                    [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n                <span *ngIf=\"text\" class=\"k-fab-text\">{{ text }}</span>\n            </ng-container>\n        </button>\n\n        <ng-template #popupTemplate>\n            <ul\n                kendoDialList\n                role=\"menu\"\n                [id]=\"dialListId\"\n                [ngClass]=\"dialClass\"\n                [dialItems]=\"dialItems\"\n                [dialItemTemplate]='dialItemTemplate?.templateRef'\n                [align]=\"align\"\n                [attr.aria-labelledby]=\"id\"\n                (click)=\"onItemClick($event)\"\n            >\n            </ul>\n        </ng-template>\n    `, isInline: true, components: [{ type: i2.IconWrapperComponent, selector: \"kendo-icon-wrapper\", inputs: [\"name\", \"svgIcon\", \"innerCssClass\", \"customFontClass\", \"size\"], exportAs: [\"kendoIconWrapper\"] }, { type: DialListComponent, selector: \"[kendoDialList]\", inputs: [\"dialItems\", \"dialItemTemplate\", \"align\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i9.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FloatingActionButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-floatingactionbutton',\n                    providers: [\n                        FocusService,\n                        NavigationService,\n                        NAVIGATION_SETTINGS_PROVIDER,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.floatingactionbutton'\n                        }\n                    ],\n                    template: `\n        <button\n            #button\n            [attr.id]=\"id\"\n            [tabIndex]=\"componentTabIndex\"\n            type=\"button\"\n            class=\"k-fab k-fab-solid\"\n            [class.k-disabled]=\"disabled\"\n            [ngClass]=\"buttonClass\"\n            [disabled]=\"disabled\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-expanded]=\"ariaExpanded\"\n            [attr.aria-haspopup]=\"ariaHasPopup\"\n            [attr.aria-controls]=\"ariaControls\"\n            (focus)=\"focusHandler()\"\n            (blur)=\"blurHandler()\"\n            [kendoEventsOutsideAngular]=\"{\n                keydown: keyDownHandler,\n                click: clickHandler\n            }\"\n            [scope]=\"this\"\n        >\n            <ng-template *ngIf=\"fabTemplate\"\n                [ngTemplateOutlet]=\"fabTemplate?.templateRef\"\n            >\n            </ng-template>\n\n            <ng-container *ngIf=\"!fabTemplate\">\n                <kendo-icon-wrapper\n                    *ngIf=\"icon || iconClass || svgIcon\"\n                    [name]=\"icon\"\n                    innerCssClass=\"k-fab-icon\"\n                    [customFontClass]=\"iconClass\"\n                    [svgIcon]=\"svgIcon\"></kendo-icon-wrapper>\n                <span *ngIf=\"text\" class=\"k-fab-text\">{{ text }}</span>\n            </ng-container>\n        </button>\n\n        <ng-template #popupTemplate>\n            <ul\n                kendoDialList\n                role=\"menu\"\n                [id]=\"dialListId\"\n                [ngClass]=\"dialClass\"\n                [dialItems]=\"dialItems\"\n                [dialItemTemplate]='dialItemTemplate?.templateRef'\n                [align]=\"align\"\n                [attr.aria-labelledby]=\"id\"\n                (click)=\"onItemClick($event)\"\n            >\n            </ul>\n        </ng-template>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: FocusService }, { type: NavigationService }, { type: i0.NgZone }, { type: i3$1.PopupService }, { type: i4.AnimationBuilder }, { type: i1.LocalizationService }]; }, propDecorators: { fixedClass: [{\n                type: HostBinding,\n                args: ['class.k-pos-fixed']\n            }], absoluteClass: [{\n                type: HostBinding,\n                args: ['class.k-pos-absolute']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], button: [{\n                type: ViewChild,\n                args: ['button', { static: true }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate', { static: true }]\n            }], dialItemTemplate: [{\n                type: ContentChild,\n                args: [DialItemTemplateDirective, { static: false }]\n            }], fabTemplate: [{\n                type: ContentChild,\n                args: [FloatingActionButtonTemplateDirective, { static: false }]\n            }], themeColor: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], align: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], positionMode: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], iconClass: [{\n                type: Input\n            }], buttonClass: [{\n                type: Input\n            }], dialClass: [{\n                type: Input\n            }], text: [{\n                type: Input\n            }], dialItemAnimation: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], dialItems: [{\n                type: Input\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], dialItemClick: [{\n                type: Output,\n                args: ['dialItemClick']\n            }], open: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n\nconst exportedModules = [\n    FloatingActionButtonComponent,\n    DialItemTemplateDirective,\n    FloatingActionButtonTemplateDirective\n];\nconst declarations = [\n    ...exportedModules,\n    DialListComponent,\n    DialItemComponent\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the FloatingActionButton component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the FloatingActionButton module\n * import { FloatingActionButtonModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, FloatingActionButtonModule], // import FloatingActionButton module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * ```\n */\nclass FloatingActionButtonModule {\n}\nFloatingActionButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FloatingActionButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFloatingActionButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FloatingActionButtonModule, declarations: [FloatingActionButtonComponent,\n        DialItemTemplateDirective,\n        FloatingActionButtonTemplateDirective, DialListComponent,\n        DialItemComponent], imports: [CommonModule, PopupModule, ListModule, EventsModule, IconsModule], exports: [FloatingActionButtonComponent,\n        DialItemTemplateDirective,\n        FloatingActionButtonTemplateDirective] });\nFloatingActionButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FloatingActionButtonModule, imports: [[CommonModule, PopupModule, ListModule, EventsModule, IconsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FloatingActionButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [declarations],\n                    exports: [exportedModules],\n                    imports: [CommonModule, PopupModule, ListModule, EventsModule, IconsModule]\n                }]\n        }] });\n\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the Buttons components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Buttons module\n * import { ButtonsModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ButtonsModule], // import Buttons module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ButtonsModule {\n}\nButtonsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nButtonsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonsModule, exports: [ButtonGroupModule, ButtonModule, SplitButtonModule, DropDownButtonModule, ChipModule, FloatingActionButtonModule] });\nButtonsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonsModule, imports: [ButtonGroupModule, ButtonModule, SplitButtonModule, DropDownButtonModule, ChipModule, FloatingActionButtonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ButtonsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [ButtonGroupModule, ButtonModule, SplitButtonModule, DropDownButtonModule, ChipModule, FloatingActionButtonModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ButtonComponent as Button, ButtonComponent, ButtonComponent as ButtonDirective, ButtonGroupComponent as ButtonGroup, ButtonGroupComponent, ButtonGroupModule, ButtonItemTemplateDirective, ButtonModule, ButtonsModule, ChipComponent, ChipListComponent, ChipModule, DialItemTemplateDirective, DropDownButtonComponent as DropDownButton, DropDownButtonComponent, DropDownButtonModule, FloatingActionButtonComponent, FloatingActionButtonModule, FloatingActionButtonTemplateDirective, FocusableDirective, ListComponent, ListModule, LocalizedSplitButtonMessagesDirective, PreventableEvent, SplitButtonComponent as SplitButton, SplitButtonComponent, SplitButtonCustomMessagesComponent, SplitButtonModule, TemplateContextDirective };\n\n"],"mappings":"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AAC;IAClH,IAAI,CAACnQ,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB;AACR;AACA;IACQ,IAAI,CAAC8M,IAAI,GAAG,EAAE;IACd;AACR;AACA;AACA;IACQ,IAAI,CAACpL,IAAI,GAAG,EAAE;IACd;AACR;AACA;IACQ,IAAI,CAACrF,IAAI,GAAG,QAAQ;IACpB;AACR;AACA;AACA;IACQ,IAAI,CAAC+G,QAAQ,GAAG,EAAE;IAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAAChB,IAAI,GAAG,QAAQ;IACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACM,UAAU,GAAG,MAAM;IACxB;AACR;AACA;IACQ,IAAI,CAACnB,QAAQ,GAAG,CAAC;IACjB;AACR;AACA;AACA;IACQ,IAAI,CAAC4T,eAAe,GAAG,gBAAgB;IACvC;AACR;AACA;AACA;IACQ,IAAI,CAACC,kBAAkB,GAAGja,gBAAgB;IAC1C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACka,WAAW,GAAG,IAAIhd,YAAY,EAAE;IACrC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACid,SAAS,GAAG,IAAIjd,YAAY,EAAE;IACnC;AACR;AACA;IACQ,IAAI,CAACqL,OAAO,GAAG,IAAIrL,YAAY,EAAE;IACjC;AACR;AACA;IACQ,IAAI,CAACsL,MAAM,GAAG,IAAItL,YAAY,EAAE;IAChC;AACR;AACA;AACA;IACQ,IAAI,CAACsV,IAAI,GAAG,IAAItV,YAAY,EAAE;IAC9B;AACR;AACA;AACA;IACQ,IAAI,CAACuV,KAAK,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}